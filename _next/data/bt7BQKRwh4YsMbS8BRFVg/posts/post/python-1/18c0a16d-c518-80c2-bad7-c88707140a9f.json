{"pageProps":{"mdBlocks":[{"type":"paragraph","blockId":"18c0a16d-c518-81cf-bf39-dbe2ab69727c","parent":"[前回(練習問題2)](/3ddaf2a62dfa4933bdf1f93efe832976)","children":[]},{"type":"paragraph","blockId":"18c0a16d-c518-8189-923b-d2b14575b03b","parent":"","children":[]},{"type":"paragraph","blockId":"18c0a16d-c518-815e-b8a0-c73355d81aad","parent":"今回は、Pythonの特に重要な機能であるリストと辞書について学んでいきます。","children":[]},{"type":"heading_1","blockId":"18c0a16d-c518-81c8-abde-e2eda45f32b5","parent":"# リスト","children":[]},{"type":"paragraph","blockId":"18c0a16d-c518-8121-bf53-e0de62b152ea","parent":"Pythonの**リスト**は、複数のデータを一緒にまとめるための便利な機能です。","children":[]},{"type":"paragraph","blockId":"18c0a16d-c518-81ce-b489-ef562b364fc3","parent":"**リスト**は、数字や文字列、他のリストなど、どんな種類のデータでも含めることができます。リストを作るには、データを角括弧(`[]`)で囲み、データの間にカンマ(`,`)を入れます。例えば、`[1, 2, 3]`は数字のリストで、`[\"りんご\", \"バナナ\", \"チェリー\"]`は文字列のリストです。","children":[]},{"type":"paragraph","blockId":"18c0a16d-c518-8179-8b70-fb6006d00dd6","parent":"**リスト**は順序があり、**最初の要素は0から数えます**。したがって、`\"りんご\"`は`[\"りんご\", \"バナナ\", \"チェリー\"]`の0番目の要素です。","children":[]},{"type":"paragraph","blockId":"18c0a16d-c518-8113-bf8f-cea9359c3b47","parent":"Pythonでリストを定義するには、次のように記述します。","children":[]},{"type":"code","blockId":"18c0a16d-c518-8171-baf1-d94ebdb30035","parent":"```python\n#変数listを[1, 2, 3]を格納するリストとする\nlist = [1, 2, 3]\nprint(list)       #listを丸ごと出力\n```","children":[]},{"type":"code","blockId":"18c0a16d-c518-8183-b3de-ea4af0d4b60d","parent":"```text\n＜出力結果＞\n[1, 2, 3]\n```","children":[]},{"type":"heading_2","blockId":"18c0a16d-c518-81ed-84ec-d4cabf175131","parent":"## インデックス","children":[]},{"type":"paragraph","blockId":"18c0a16d-c518-8183-958b-e7b7e75b7033","parent":"リストの各要素にアクセスするには、その位置を指定します。この位置のことを **インデックス** といいます。","children":[]},{"type":"paragraph","blockId":"18c0a16d-c518-8142-ad73-c2bb1f18c285","parent":"Pythonでは、インデックスを角括弧内に書くことで要素を取り出せます。例えば`list[0]`とすると、`list`の0番目の要素、つまり`1`を得られます。また、`list[-1]`というようにインデックスに`-1`を指定すれば、リストの最後の要素を得ることができます。","children":[]},{"type":"code","blockId":"18c0a16d-c518-8116-af22-cd7e2d4d37f7","parent":"```python\nlist = [1, 2, 3]\nprint(list[0])\nprint(list[-1])\n```","children":[]},{"type":"code","blockId":"18c0a16d-c518-81f0-8dd9-ca6b4d43d347","parent":"```text\n＜出力結果＞\n1\n3\n```","children":[]},{"type":"heading_2","blockId":"18c0a16d-c518-812a-aebe-d42e5b85ff83","parent":"## スライス","children":[]},{"type":"paragraph","blockId":"18c0a16d-c518-817b-9648-d3f4d7e80a70","parent":"Pythonのリストは「◯番目から△番目」というように、指定した範囲の要素を取り出すこともできます。これを**スライス**といいます。","children":[]},{"type":"paragraph","blockId":"18c0a16d-c518-8192-a777-d63f6b5cdaa7","parent":"スライスは、コロンを挟む形で、取り出したい範囲の始点と終点のインデックスを記述します。","children":[]},{"type":"paragraph","blockId":"18c0a16d-c518-8147-bae8-fc0e3fc942d3","parent":"`list[`**`始点のインデックス`**`:`**`終点のインデックス`**`]`","children":[]},{"type":"paragraph","blockId":"18c0a16d-c518-81ae-a1d2-e3caf7472a5f","parent":"しかし、ここで注意すべき点は、**終点として指定した要素は含まれない**ということです。以下のコードで確認してみましょう。","children":[]},{"type":"code","blockId":"18c0a16d-c518-81a0-bda6-f86699a74e3d","parent":"```python\nlist = [0, 1, 2, 3, 4, 5, 6]\nsliced_list = list[2:5]\nprint(sliced_list)\n```","children":[]},{"type":"code","blockId":"18c0a16d-c518-811c-8963-f3078225198b","parent":"```text\n＜出力結果＞\n[2, 3, 4]\n```","children":[]},{"type":"paragraph","blockId":"18c0a16d-c518-8180-a71b-f48f198b3765","parent":"このように、終点として指定した5番目の要素は出力結果に含まれていないことがわかります。","children":[]},{"type":"paragraph","blockId":"18c0a16d-c518-810e-ab88-c995f896a7fc","parent":"`list[x:y]`とするとき、実際に得られる範囲は **x番目から y-1番目**と考えると良いでしょう。","children":[]},{"type":"heading_2","blockId":"18c0a16d-c518-8117-bf7c-cc4b6fb0376e","parent":"## 各種メソッド","children":[]},{"type":"paragraph","blockId":"18c0a16d-c518-81bb-976e-fef994f0b7ba","parent":"Pythonのリストには、データを追加したり、削除したりするための便利な機能が搭載されています。これを**メソッド**といいます。","children":[]},{"type":"paragraph","blockId":"18c0a16d-c518-813d-a41c-f026f80ccc75","parent":"メソッドは、操作したいリスト名の後ろにドット（`.`）をつけ、さらにその後ろにメソッド名をくっつけます。こんなふうに…","children":[]},{"type":"code","blockId":"18c0a16d-c518-81e6-b2df-e3cf87ac79fa","parent":"```python\nlist = [1, 2, 3, 4, 5]\nlist.append(6)     #listに新しい要素6を追加\nprint(list)\n```","children":[]},{"type":"paragraph","blockId":"18c0a16d-c518-813b-855a-d9d4d92a42bf","parent":"このappendメソッドを使うと、リストに新しい要素を追加することができます。","children":[]},{"type":"code","blockId":"18c0a16d-c518-81e8-9227-ce037ece4f99","parent":"```text\n＜出力結果＞\n[1, 2, 3, 4, 5, 6]\n```","children":[]},{"type":"paragraph","blockId":"18c0a16d-c518-812f-9ec2-f97eff4eb789","parent":"以下に、Pythonのリストで使用できる主なメソッドを一覧で紹介します。","children":[]},{"type":"paragraph","blockId":"18c0a16d-c518-813f-9221-c5cc2955069c","parent":"※この表は紹介程度なのでまだ使えなくても大丈夫です。","children":[]},{"type":"table","blockId":"18c0a16d-c518-818d-b140-c7681e7f475e","parent":"| **メソッド名**                       | **説明**                                                       | **使用例**             |\n| ------------------------------- | ------------------------------------------------------------ | ------------------- |\n| `append(x)`                     | リストの末尾に要素をひとつ追加します。                                          | `list.append(3)`    |\n| `remove(x)`                     | 値がxである最初の項目を削除します。該当する項目がない場合はエラーになります。                      | `list.remove(2)`    |\n| `insert(i, x)`                  | 指定した位置に要素を挿入します。第一引数は挿入される要素のインデックスを指定します。                   | `list.insert(1, 2)` |\n| `pop(x)`                        | リストから指定した位置の要素を削除し、その要素を返します。インデックスを指定しない場合はリストの最後の要素を削除します。 | `list.pop(1)`       |\n| `index(x)`                      | 値がxである最初の項目のインデックスを返します。該当する項目がない場合はエラーになります。                | `list.index(3)`     |\n| `count(x)`                      | リストでのxの出現回数を返します。                                            | `list.count(3)`     |\n| `sort(key=None, reverse=False)` | リストの項目を、キー関数によって提供される基準で並び替えます。                              | `list.sort()`       |","children":[{"type":"table_row","blockId":"18c0a16d-c518-8127-86da-d7ca448c122b","parent":"","children":[]},{"type":"table_row","blockId":"18c0a16d-c518-8185-a0a8-eb4d99b735dc","parent":"","children":[]},{"type":"table_row","blockId":"18c0a16d-c518-8135-85e5-f48c8dcab3e7","parent":"","children":[]},{"type":"table_row","blockId":"18c0a16d-c518-813b-b463-c79e4ef0d7b6","parent":"","children":[]},{"type":"table_row","blockId":"18c0a16d-c518-81ca-b03a-ec4b859c7af3","parent":"","children":[]},{"type":"table_row","blockId":"18c0a16d-c518-81d1-ba2f-f328722ba5bf","parent":"","children":[]},{"type":"table_row","blockId":"18c0a16d-c518-81c4-acb6-dba1bffa30ab","parent":"","children":[]},{"type":"table_row","blockId":"18c0a16d-c518-810d-838d-e3ae1575d063","parent":"","children":[]}]},{"type":"paragraph","blockId":"18c0a16d-c518-81ac-8895-ea74e694d612","parent":"","children":[]},{"type":"divider","blockId":"18c0a16d-c518-816b-b702-ed867eea3e12","parent":"---","children":[]},{"type":"heading_1","blockId":"18c0a16d-c518-81a7-8eea-dfa4f79d2f78","parent":"# 辞書","children":[]},{"type":"paragraph","blockId":"18c0a16d-c518-8108-90c3-f2dd7cb98a18","parent":"Pythonの**辞書**とは、例えば「名前と電話番号」や「商品名と価格」のような、それぞれペアになっている情報を保存しておける便利機能です。","children":[]},{"type":"paragraph","blockId":"18c0a16d-c518-814e-b6ca-c483cf303dcd","parent":"Pythonで**辞書**を作成するときには、まずペアにしたい値を`:`で示し、複数ある場合はカンマで区切ります。さらにそれを中括弧（`{}`）で囲むことで作成可能です。","children":[]},{"type":"code","blockId":"18c0a16d-c518-8155-aad0-d6334a2a8a93","parent":"```python\nmy_dict = {\"apple\": 100, \"banana\": 200, \"orange\": 300}\n```","children":[]},{"type":"paragraph","blockId":"18c0a16d-c518-8172-908b-e2d23b102cf5","parent":"これは、「リンゴが100円」「バナナは200円」「オレンジは300円」というように、フルーツとその値段を`my_dict`にペアで格納しています。","children":[]},{"type":"paragraph","blockId":"18c0a16d-c518-8122-af21-de5f9eaaf0ea","parent":"この`my_dict`をprint関数で出力すると以下のようになります。","children":[]},{"type":"code","blockId":"18c0a16d-c518-81fd-a3d7-dd71bcb6f7bc","parent":"```text\n＜出力結果＞\n{'apple': 100, 'banana': 200, 'orange': 300}\n```","children":[]},{"type":"heading_2","blockId":"18c0a16d-c518-8122-8b1a-c2d35d2e80ce","parent":"## バリューの取り出し","children":[]},{"type":"paragraph","blockId":"18c0a16d-c518-8136-a742-eff68770e798","parent":"`”apple”`, `“banana”`, `“orange”`は**キー（Key）**と呼ばれ、`100`, `200`, `300`は**バリュー（Value）**と呼ばれます。辞書ではこの**キー**を用いて**バリュー**を取り出します。例えば、リンゴの価格を取り出したい場合には、このようにします。","children":[]},{"type":"code","blockId":"18c0a16d-c518-813f-8f5b-f696064d8f67","parent":"```python\nmy_dict = {\"apple\": 100, \"banana\": 200, \"orange\": 300}\nprint(my_dict[\"apple\"])\n```","children":[]},{"type":"code","blockId":"18c0a16d-c518-81bb-a6f1-c67a5566fe42","parent":"```text\n＜出力結果＞\n100\n```","children":[]},{"type":"heading_2","blockId":"18c0a16d-c518-8112-b1d0-e6e836942616","parent":"## 要素の追加","children":[]},{"type":"paragraph","blockId":"18c0a16d-c518-81c0-99af-e4bf6323e272","parent":"辞書に新しい要素を追加するには、新しいキーとバリューのペアを指定することで可能です。具体的には、既存の辞書名の後ろに新しいキー名を角括弧(`[]`)内に書き、それに等号(`=`)を使って新しいバリューを割り当てます。","children":[]},{"type":"paragraph","blockId":"18c0a16d-c518-813f-af8e-daf93bde76ea","parent":"例えば、既存の辞書`my_dict`に新しいフルーツ（例えば、「grape」）とその価格（例えば、400）を追加したい場合、以下のように記述します。","children":[]},{"type":"code","blockId":"18c0a16d-c518-8155-990a-c885070d1b88","parent":"```python\nmy_dict = {\"apple\": 100, \"banana\": 200, \"orange\": 300}\nmy_dict[\"grape\"] = 400\nprint(my_dict)\n```","children":[]},{"type":"paragraph","blockId":"18c0a16d-c518-8148-8ee6-f309e3426627","parent":"このコードを実行すると、`my_dict`に新しいキーとバリューのペア`\"grape\": 400`が追加されています。","children":[]},{"type":"code","blockId":"18c0a16d-c518-81aa-b265-c277880f46d6","parent":"```text\n＜出力結果＞\n{'apple': 100, 'banana': 200, 'orange': 300, 'grape': 400}\n```","children":[]},{"type":"heading_2","blockId":"18c0a16d-c518-81ea-8ff5-cf592b0c9554","parent":"## 各種メソッド","children":[]},{"type":"paragraph","blockId":"18c0a16d-c518-815e-8101-d78fe4937853","parent":"※この表は紹介程度なのでまだ使えなくても大丈夫です。","children":[]},{"type":"table","blockId":"18c0a16d-c518-811c-9c7b-e71832ddf897","parent":"| **メソッド名**               | **説明**                                                   | **使用例**                       |\n| ----------------------- | -------------------------------------------------------- | ----------------------------- |\n| **`keys()`**            | 辞書のすべてのキーを返す。                                            | **`my_dict.keys()`**          |\n| **`values()`**          | 辞書のすべての値を返す。                                             | **`my_dict.values()`**        |\n| **`get(key, default)`** | 指定したキーの値を返す。キーが存在しない場合は、defaultの値を返す。                    | **`my_dict.get('apple', 0)`** |\n| **`pop(key, default)`** | 指定したキーの値を返し、そのキーと値のペアを辞書から削除する。キーが存在しない場合は、defaultの値を返す。 | **`my_dict.pop('apple', 0)`** |","children":[{"type":"table_row","blockId":"18c0a16d-c518-81f4-90a6-d7651e0bdfeb","parent":"","children":[]},{"type":"table_row","blockId":"18c0a16d-c518-8189-96e2-f74f09503319","parent":"","children":[]},{"type":"table_row","blockId":"18c0a16d-c518-8108-9866-ead16c5745b6","parent":"","children":[]},{"type":"table_row","blockId":"18c0a16d-c518-817c-bf18-d7bfc883459a","parent":"","children":[]},{"type":"table_row","blockId":"18c0a16d-c518-81e9-8c78-edd38c10b933","parent":"","children":[]}]},{"type":"paragraph","blockId":"18c0a16d-c518-81e7-9f94-e17a150e8f33","parent":"","children":[{"type":"paragraph","blockId":"18c0a16d-c518-81ce-86df-cc13fb9c438b","parent":"[前回(6.条件分岐(if文))](/3efe348eb73b48ab949d4ef53c4cd48b)　|　[次回(8.繰り返し(for文))](/755c7a4c05eb436d96e7b70fb13dce98)","children":[]},{"type":"paragraph","blockId":"18c0a16d-c518-8189-87fa-ca17ed70c9cd","parent":"","children":[]}]}],"pageNavs":[{"title":"Home","id":"/posts"},{"title":"基礎班カリキュラム","id":"/posts/course/basic"},{"title":"前期","id":"/posts/course/前期/1"},{"title":"Python基礎文法","id":"/posts/post/python-1"},{"title":"7. リストと辞書","id":"/posts/post/python-118c0a16d-c518-80c2-bad7-c88707140a9f"}],"parentTitle":"Python基礎文法","childNavs":[{"title":"1. Hello World!","id":"18c0a16d-c518-80dc-aff4-fa18498acb7f","child":true},{"title":"2. 変数","id":"18c0a16d-c518-8053-b3a3-d0b1edf4fc3a","child":true},{"title":"3. 変数の型","id":"18c0a16d-c518-80e4-b90e-ca534b78c2a0","child":true},{"title":"4. 四則演算","id":"18c0a16d-c518-80fe-b5fb-ceb446aa2b19","child":true},{"title":"練習問題1","id":"18c0a16d-c518-8026-ad70-df7bb7c92ba6","child":true},{"title":"5. 入力","id":"18c0a16d-c518-80de-9657-eae18497d524","child":true},{"title":"6. 条件分岐（if文）","id":"18c0a16d-c518-8069-a747-c929011f2633","child":true},{"title":"練習問題2","id":"18c0a16d-c518-80e3-91a5-cc18b529f75f","child":true},{"title":"7. リストと辞書","id":"18c0a16d-c518-80c2-bad7-c88707140a9f","child":true},{"title":"8. 繰り返し（for文）","id":"18c0a16d-c518-8076-af42-c319fc4e7c78","child":true},{"title":"練習問題3","id":"18c0a16d-c518-8028-97c5-db002260aca9","child":true},{"title":"9. 文字列","id":"18c0a16d-c518-80cd-aab7-d1fcd906e9fd","child":true},{"title":"練習問題4","id":"18c0a16d-c518-8012-97f7-f6381ca97482","child":true},{"title":"10. 関数とは","id":"18c0a16d-c518-80ad-94f8-f277d709161d","child":true},{"title":"11. 関数を作ろう！","id":"18c0a16d-c518-8050-a446-e1c1bf98d871","child":true},{"title":"練習問題5","id":"18c0a16d-c518-806a-91d9-eddf3e772a63","child":true},{"title":"12. クラス","id":"18c0a16d-c518-8029-b586-cace2974b5df","child":true},{"title":"練習問題6","id":"18c0a16d-c518-8054-821d-fe4fb2c74585","child":true}],"slug":"python-1","allTags":["基礎班","Python"]},"__N_SSG":true}