{"pageProps":{"metadata":{"title":"python基礎文法","curriculumId":"17d2297f-7a72-8011-8774-d9c1ce119eb9","category":"前期","visibility":["体験入部","発展班","基礎班"],"tags":["Python","基礎班"],"is_basic_curriculum":true,"id":"2"},"mdBlocks":[{"blockId":"de10f122-fc82-4eb0-8817-f97e6e78020a","type":"paragraph","parent":"[前回(5.入力)](/posts/curriculums/17d2297f-7a72-8011-8774-d9c1ce119eb9/17d2297f-7a72-8033-8fb1-cde44ccb7db5)","children":[]},{"blockId":"f7410226-8b59-45bc-ae3b-7da1f772d2dd","type":"heading_1","parent":"# if文の基本","children":[]},{"blockId":"3a6317b8-0c03-4ab7-aede-d1333f9a70ee","type":"paragraph","parent":"今回はプログラミングをするうえで重要な概念となる**条件分岐**について学んでいきます。**条件分岐**とは、プログラム内で特定の条件を満たすか否かで、処理を変えるための機能です。","children":[]},{"blockId":"ade04966-c351-4b0c-9345-2d1de0861fb9","type":"paragraph","parent":"たとえば、テストの点数が70点以上の場合は「合格」、そうでない場合は「不合格」と表示する、などを実現できます。","children":[]},{"blockId":"413d5233-d8d8-4d9f-81de-411e54a4f09b","type":"paragraph","parent":"Pythonで条件分岐を実現するには、 **if文** と呼ばれる構文を使用します。**if文** は次のように書くことができます。","children":[]},{"blockId":"1fda142a-1b03-49ee-8f1f-c6765d2b6bb8","type":"code","parent":"```python\nif 条件式:\n    #ここに、条件式が成立するときの処理を書く\nelse:\n    #ここに、条件式が成立しなかったときの処理を書く\n```","children":[]},{"blockId":"d90bd9c2-b6a1-4ba0-8ea4-a697f8909259","type":"paragraph","parent":"`if`の後ろにある「条件式」 には大なり記号（`>`）や小なり記号（`<`）、イコール（`=`）などを使用した条件を示す式を書きます。例えば、「点数（`score`）が70点以上」という条件を示すには`score >= 70`と書きます。ここでの`>=`は数学での「≧」と同じ意味です。","children":[]},{"blockId":"d567630f-29f8-4bff-8988-e111d92bffe3","type":"paragraph","parent":"上に書いたような、点数によって合否を判定するプログラムを作るには、以下のように書きます。","children":[]},{"blockId":"13d43f9a-4035-48ba-8307-995366d8ab7f","type":"code","parent":"```python\nscore = 75\nprint(\"あなたは\", score, \"点です\")\nif score >= 70:\n    print(\"合格です\")\nelse:\n    print(\"不合格です\")\n```","children":[]},{"blockId":"c5f1d643-05d3-414c-89d9-432f310f08a3","type":"paragraph","parent":"実行結果は以下のようになります。","children":[]},{"blockId":"862abfec-7301-4eb7-bd52-077df61626de","type":"code","parent":"```text\n＜出力結果＞\nあなたは 75 点です\n合格です\n```","children":[]},{"blockId":"eea74454-458a-4fae-800c-eb0563a7ac41","type":"callout","parent":"> ⚠️ 今回から実行結果の表示方法を、画像からテキストに変更していますが、お気になさらず。","children":[]},{"blockId":"d1f700e1-4684-4fdc-8a2e-3aee037ce5f9","type":"paragraph","parent":"変数`score`には`75`が格納されているため、条件式`score >= 70`が成立し、`print(”合格です”)`が実行されています。","children":[]},{"blockId":"4964682f-cadf-4b21-81eb-ebd27c2a73b4","type":"paragraph","parent":"では、変数`score`に格納する数字を70未満に変更してみましょう。","children":[]},{"blockId":"554b066c-f358-4334-8f23-a9d9276b6bee","type":"code","parent":"```python\nscore = 60\nprint(\"あなたは\", score, \"点です\")\nif score >= 70:\n    print(\"合格です\")\nelse:\n    print(\"不合格です\")\n```","children":[]},{"blockId":"83cbebd5-4313-4e94-a971-cdedb6e754ab","type":"paragraph","parent":"実行結果は以下のようになります。","children":[]},{"blockId":"351a4587-84ba-4bee-8448-d84d549cc64d","type":"code","parent":"```text\n＜出力結果＞\nあなたは 60 点です\n不合格ですSS\n```","children":[]},{"blockId":"b10aff28-4759-4b0c-8d01-c30b1901e919","type":"paragraph","parent":"変数`score`に格納されている数値が`60`で`score >= 70`という条件式を満たさなかったため、`print(”不合格です”)`が実行されました。","children":[]},{"blockId":"00ac19df-daa1-45f4-98a6-1ef08392ef63","type":"callout","parent":"> ❗ **プログラミングでは、if文などで条件式が成立することを真（True）、成立しないことを偽（False）と呼びます。**","children":[]},{"blockId":"b3347086-ab16-4812-ae37-e624dfcd60de","type":"paragraph","parent":"また、if文は以下のように`else`を省略して、条件式が真の場合のみ特定の処理を実行することもできます。","children":[]},{"blockId":"e2c5f57a-b8e9-4473-b172-195bd86e6da0","type":"code","parent":"```python\nscore = 80\nprint(\"あなたは\", score, \"点です\")\nif score >= 70:\n    print(\"あなたは合格です\")\n#score が70未満のときは何も行われない\n```","children":[]},{"blockId":"c015a5cb-95b0-4f56-a94f-18a9641b4ca0","type":"heading_1","parent":"# 比較演算子","children":[]},{"blockId":"cf9a7f93-a414-4cb8-8445-af9244bd0ba5","type":"paragraph","parent":"if文で使用する条件式は、`>=`のような記号を用いて表します。これを比較演算子 と呼びます。比較演算子にはいくつか種類があるため、以下の一覧表で紹介します。","children":[]},{"blockId":"9e42fad2-5eae-4f76-b689-558863b780da","type":"table","parent":"| 比較演算子 | 使用例      | 説明           | 備考        |\n| ----- | -------- | ------------ | --------- |\n| `>`   | `x > y`  | xがyより大きい（超過） |           |\n| `<`   | `x < y`  | xがyより小さい（未満） |           |\n| `>=`  | `x >= y` | xがy以上        | 数学の ≧ と一緒 |\n| `<=`  | `x <= y` | xがy以下        | 大学の ≦ と同じ |\n| `==`  | `x == y` | xとyが等しい      | 数学の = と一緒 |\n| `!=`  | `x != y` | xとyが等しくない    | 数学の ≠ と一緒 |","children":[{"blockId":"c363e400-f8ea-4999-9f5f-9178dfcfd986","type":"table_row","parent":"","children":[]},{"blockId":"5bb59221-a3bc-4016-817e-e90b0ee3baec","type":"table_row","parent":"","children":[]},{"blockId":"602a7988-59e5-46bb-b8cb-479964971c2f","type":"table_row","parent":"","children":[]},{"blockId":"22c5dd32-8d27-4a2c-9ac3-ff28d6f40fd2","type":"table_row","parent":"","children":[]},{"blockId":"4bc05fd9-d5ed-4168-816a-125675c658c3","type":"table_row","parent":"","children":[]},{"blockId":"359820f2-d327-420a-add1-27a1f7fe78ea","type":"table_row","parent":"","children":[]},{"blockId":"4389ac0a-493c-4a55-884a-43c369272f04","type":"table_row","parent":"","children":[]}]},{"blockId":"1f0bb99a-5ed2-42fb-8edf-fac2ff3a50ea","type":"heading_1","parent":"# elif","children":[]},{"blockId":"3c5d1c65-b98a-40b8-bf0d-cca490a511da","type":"paragraph","parent":"if文では「**もし〜ならば〇〇する**」という処理でしたが、**elif文** を使用することで「**それ以外で、もしーならば△△する**」という処理も行うことができます。","children":[]},{"blockId":"646a8170-0ed8-45a6-9d27-3daf35ae41a4","type":"paragraph","parent":"書き方は、`if`と`else`の間に`elif 条件式`を追加することで、複数の条件を順にチェックし、最初に条件式が真の部分の処理を実行します。以下のコードが記述例です。","children":[]},{"blockId":"ba90500f-6236-4cf8-9de2-62878e2cd74d","type":"code","parent":"```python\nscore = 75\nprint(\"あなたは\", score, \"点です\")\nif score >= 90:\n    print(\"あなたの評価はSです\")\nelif score >= 80:\n    print(\"あなたの評価はAです\")\nelif score >= 70:\n    print(\"あなたの評価はBです\")\nelif score >= 60:\n    print(\"あなたの評価はCです\")\nelse:\n    print(\"あなたの評価はDです\")\n```","children":[]},{"blockId":"78604fd8-cee6-4233-a769-6314869d4d6e","type":"paragraph","parent":"先程のプログラムは点数から合否を判定することしかできませんでしたが、`elif`を使用することで、点数に対して多段階の評価を判定することができます。実行結果は以下のようになります。","children":[]},{"blockId":"c40adb17-4bde-49a0-a02d-a573a95181d6","type":"code","parent":"```text\n＜出力結果＞\nあなたは 75 点です\nあなたの評価はBです\n```","children":[]},{"blockId":"4ea95f02-b7f1-48cd-b170-af722efb4069","type":"paragraph","parent":"プログラムの流れを簡単に解説します。","children":[]},{"blockId":"908e21ee-cad8-40f6-9547-586ad455a1a8","type":"numbered_list_item","parent":"1. 最初の`if`の条件式が評価され、`score`の値が90以上かどうかをチェックする。`score`の値は75なので、この条件は**偽**となる。","children":[]},{"blockId":"d95dac3b-7507-49ec-96f8-9223e26961c2","type":"numbered_list_item","parent":"2. 次に`elif`の条件式が評価され、`score`の値が80以上かどうかをチェックする。この場合、`score`の値は75なので、この条件も**偽**となる。","children":[]},{"blockId":"912dce03-521c-48de-b36c-c617848d1962","type":"numbered_list_item","parent":"3. さらに次の`elif`の条件式が評価され、`score`の値が70以上かどうかをチェックする。この場合、`score`の値は75なので、この条件は**真**となり、「あなたの評価はBです」と出力される。","children":[]},{"blockId":"a2750b98-9674-49b3-ac9c-1245dc7f9281","type":"paragraph","parent":"このように`if`, `elif`, `else`を組み合わせることで、より複雑な条件分岐を実現できます。","children":[]},{"blockId":"d4f966f5-ee2b-4c1d-ae90-86dfd3b142f5","type":"toggle","parent":"ifだけをたくさん使えば同じことできんじゃね？","children":[{"blockId":"b3bc7c84-b7db-4a4d-8dc5-bb28cfb5d3ec","type":"paragraph","parent":"と思った人もいるかもしれません。あなたが思い浮かべたコードは、このようなものではないでしょうか？","children":[]},{"blockId":"3254d6dc-74f4-4bc0-9a12-d9bbad93661b","type":"code","parent":"```python\nscore = 75\nprint(\"あなたは\", score, \"点です\")\nif score >= 90:\n    print(\"あなたの評価はSです\")\nif score >= 80:\n    print(\"あなたの評価はAです\")\nif score >= 70:\n    print(\"あなたの評価はBです\")\nif score >= 60:\n    print(\"あなたの評価はCです\")\nif score >= 0:\n    print(\"あなたの評価はDです\")\n```","children":[]},{"blockId":"c91bc3f2-af2a-4831-b231-02b77984d070","type":"paragraph","parent":"一見、elifを使用したプログラムと同様の結果が得られるように見えるかもしれません。では、このコードの実行結果を見てみましょう。","children":[]},{"blockId":"d42c16c9-cd3a-4f0e-87df-11ff52aaa78e","type":"code","parent":"```python\n＜出力結果＞\nあなたは 75 点です\nあなたの評価はBです\nあなたの評価はCです\nあなたの評価はDです\n```","children":[]},{"blockId":"1af4ac8c-47ee-4b3a-a56e-715ce4c0a533","type":"paragraph","parent":"「あなたの評価は…」が複数行出力されてしまいましたね。`if`のみのプログラムと、`elif`を使用したプログラム違いはここにあります。`if`のみのプログラムでは、`if`の条件式が真の処理がもれなく実行されてしまいます。対して`if`と`elif`を使用したプログラムは、一番上のifから条件式のチェックを始め、偽であった場合には次のelif、それも偽ならさらに次のelif…とチェックを進めていきます。そして、初めて真となった条件の処理だけを実行するのです。","children":[]},{"blockId":"2b3fbc8a-6224-4f84-aa2f-b6feafc7bf56","type":"code","parent":"```python\n#ifのみ\nscore = 75\nprint(\"あなたは\", score, \"点です\")\nif score >= 90:                   ←条件式が偽なので実行しない\n    print(\"あなたの評価はSです\")\nif score >= 80:                   ←条件式が偽なので実行しない\n    print(\"あなたの評価はAです\")\nif score >= 70:                   ←条件式が真なので実行\n    print(\"あなたの評価はBです\")\nif score >= 60:                   ←条件式が真なので実行\n    print(\"あなたの評価はCです\")\nif score >= 0:                    ←条件式が真なので実行\n    print(\"あなたの評価はDです\")\n```","children":[]},{"blockId":"16f5b3b5-e73a-4c70-a994-fc0d224cce7a","type":"code","parent":"```python\n#elifあり\nscore = 75\nprint(\"あなたは\", score, \"点です\")\nif score >= 90:                   ←条件式が偽なので次のelifへ\n    print(\"あなたの評価はSです\")\nelif score >= 80:                 ←条件式が偽なので次のelifへ\n    print(\"あなたの評価はAです\")\nelif score >= 70:                 ←条件式が真なので実行\n    print(\"あなたの評価はBです\")\nelif score >= 60:                 ←以降の条件式はチェックしない\n    print(\"あなたの評価はCです\")\nelse:\n    print(\"あなたの評価はDです\")\n```","children":[]}]},{"blockId":"6a768855-f64d-423d-99fc-adedc79df48f","type":"heading_1","parent":"# bool型","children":[]},{"blockId":"3ad3bdc9-9583-4259-a9e0-0ed93d72c313","type":"paragraph","parent":"ここでは、if文に関連して、[3章]()で登場していないもう一つの「変数の型」を紹介します。それが **bool型** です。**bool型** とは真理値を格納するための型です。真理値とは、**True****（真）**または**False****（偽）**のいずれかを取る値のことです。（→[このサイトわかりやすい！](https://wa3.i-3-i.info/word16809.html)）","children":[]},{"blockId":"6f806c77-b4e3-4b1f-a0fa-f5669cfe5865","type":"paragraph","parent":"例えば、このように定義できます。","children":[]},{"blockId":"7a106725-642e-4df4-91f2-0c5be59e8960","type":"code","parent":"```python\nis_true = True\nis_false = False\n```","children":[]},{"blockId":"dd468d43-b612-4678-834c-f6fc8fa92351","type":"paragraph","parent":"if文は条件式だけでなく、このbool型の変数を使用しても記述することができます。","children":[]},{"blockId":"3d86f5f7-141d-4b6e-8284-490c63066a1f","type":"code","parent":"```python\nis_true = True\nis_false = False\nif is_true:\n    print(\"これは真です\")\nif is_false:\n    print(\"これは偽です\")\n```","children":[]},{"blockId":"a7787e57-bf35-49c1-9c16-897fe09af862","type":"code","parent":"```text\n＜出力結果＞\nこれは真です\n```","children":[]},{"blockId":"82492ea3-2920-435b-b243-8d4358fd2136","type":"paragraph","parent":"実行結果を見ると、「これは真です」のみが出力されています。if文は、bool型の変数の中身が`True`の場合のみ処理を実行したことがわかります。","children":[]},{"blockId":"535a5aea-575a-4bac-811a-e2e00d79b427","type":"paragraph","parent":"また、bool型は比較演算子の結果としても得られます。たとえば、以下のようなコードを考えてみましょう。","children":[]},{"blockId":"166a86a7-8461-4751-95c7-f42cdd496d9e","type":"code","parent":"```python\nx = 10\ny = 20\nflag = x < y  # xがyより小さいかどうかを比較した結果(True)を、flagに代入\nif flag:\n    print(\"xはyより小さいです\")\n```","children":[]},{"blockId":"ae3a64e8-f93c-4a5d-a3c4-0876b8560e2f","type":"code","parent":"```text\n＜出力結果＞\nxはyより小さいです\n```","children":[]},{"blockId":"14c70d82-7b51-4536-8151-195d875173af","type":"paragraph","parent":"この場合、`x < y`の結果は`True`となるため、「xはyより小さいです」と出力されました。","children":[]},{"blockId":"41b811d0-f4ca-449a-83a0-aa121c3fd368","type":"paragraph","parent":"","children":[{"blockId":"d7bfe967-7531-47d5-9f6c-325cb8882a6f","type":"paragraph","parent":"","children":[]}]}],"pageNavs":[{"title":"Home","id":"/posts"},{"title":"基礎班カリキュラム","id":"/posts/course/basic"},{"title":"前期","id":"/posts/course/前期"},{"title":"python基礎文法","id":"/posts/curriculums/17d2297f-7a72-8011-8774-d9c1ce119eb9/17d2297f-7a72-8011-8774-d9c1ce119eb9"},{"id":"/posts/curriculums/17d2297f-7a72-8011-8774-d9c1ce119eb9/17d2297f-7a72-8078-bc32-eb25ec2790f1","title":"6. 条件分岐（if文）"}],"childrenData":{"title":"python基礎文法","childPages":[{"title":"1. Hello World!","id":"17d2297f-7a72-803a-a1c0-d031b23c0073"},{"title":"2. 変数","id":"17d2297f-7a72-8081-ab1b-cf4732808344"},{"title":"3. 変数の型","id":"17d2297f-7a72-80a2-bb38-ca7740288a86"},{"title":"4. 四則演算","id":"17d2297f-7a72-807d-b72c-d2b61dead872"},{"title":"練習問題1","id":"17d2297f-7a72-80ee-83ed-e549b65c3f3b"},{"title":"5. 入力","id":"17d2297f-7a72-8033-8fb1-cde44ccb7db5"},{"title":"6. 条件分岐（if文）","id":"17d2297f-7a72-8078-bc32-eb25ec2790f1"},{"title":"練習問題2","id":"17d2297f-7a72-8083-965e-e7b2f91955cb"},{"title":"7. リストと辞書","id":"17d2297f-7a72-8016-9adc-d47c6aa67351"},{"title":"8. 繰り返し（for文）","id":"17d2297f-7a72-802e-9b3e-e5ce4ec291d9"},{"title":"練習問題3","id":"17d2297f-7a72-8082-a7ed-e20cd44e5139"},{"title":"9. 文字列","id":"17d2297f-7a72-8093-8875-ff9cc8657833"},{"title":"練習問題4","id":"17d2297f-7a72-80ce-be71-c2800f67421f"},{"title":"10. 関数とは","id":"17d2297f-7a72-801b-a2a2-dc58b16dcc36"},{"title":"11. 関数を作ろう！","id":"17d2297f-7a72-803c-9896-c995152d896a"},{"title":"練習問題5","id":"17d2297f-7a72-80b2-8327-c3d11e6fa275"},{"title":"12. クラス","id":"17d2297f-7a72-807c-8ce6-deb2ca7a16d6"},{"title":"練習問題6","id":"17d2297f-7a72-80bf-b6e2-c33e75086922"}]},"pageId":"17d2297f-7a72-8078-bc32-eb25ec2790f1","title":"6. 条件分岐（if文）"},"__N_SSG":true}