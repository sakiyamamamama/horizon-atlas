{"pageProps":{"mdBlocks":[{"type":"paragraph","blockId":"1652297f-7a72-8169-9c5a-cdb24c3ce491","parent":"今回は、複数のページがあるアプリを作る上で必要となるルーティングについて紹介します。","children":[]},{"blockId":"1652297f-7a72-81ea-b499-da98abf2ca95","type":"heading_2","parent":"## ルーティングとは","children":[]},{"blockId":"1652297f-7a72-8102-bc8f-d40cf3073c2c","type":"divider","parent":"---","children":[]},{"type":"paragraph","blockId":"1652297f-7a72-81e3-bc68-c4997e706a0c","parent":"ルーティングとは、複数のページ間を移動できるように繋げることです。ルーティングを実装することで、より規模の大きいアプリを作ることが可能になります。","children":[]},{"type":"paragraph","blockId":"1652297f-7a72-81a7-a5cc-e6086f4f72ae","parent":"","children":[]},{"type":"paragraph","blockId":"1652297f-7a72-810d-bf66-cac5bed3d124","parent":"さっそく、以下のルーティングの例を見ていきましょう。","children":[]},{"blockId":"1652297f-7a72-81a0-a14e-e20601f4a6da","type":"code","parent":"```python\nimport flet as ft\n\ndef main(page: ft.Page):\n\n    def route_change(route):\n        page.views.append(\n            ft.View(\n                \"/\",\n                [\n                    ft.Text(\"Here is HomePage\"),\n                    ft.ElevatedButton(\"Visit NEXT_PAGE\", on_click=lambda _: page.go(\"/next\")),\n                ],\n            )\n        )\n        if page.route == \"/next\":\n            page.views.append(\n                ft.View(\n                    \"/next\",\n                    [\n                        ft.Text(\"Here is NextPage\"),\n                        ft.ElevatedButton(\"Go Home\", on_click=lambda _: page.go(\"/\")),\n                    ],\n                )\n            )\n        page.update()\n\n    page.on_route_change = route_change\n    page.go(page.route)\n\n\nft.app(main)\n```","children":[]},{"type":"paragraph","blockId":"1652297f-7a72-8139-84ca-f9bcfe18e3a4","parent":"実行すると、以下のように２ページ間（HomeページとNextページ）を行き来できるアプリが表示されます。","children":[]},{"blockId":"1652297f-7a72-8194-8593-d7b92653cc71","type":"image","parent":"![%E7%94%BB%E9%9D%A2%E5%8F%8E%E9%8C%B2_2024-09-20_11.36.49.gif](https://prod-files-secure.s3.us-west-2.amazonaws.com/f9e367dd-1db7-428f-a2ed-c68a46952d5a/2d482a98-3f14-4b99-afcd-ef406d22ff25/%E7%94%BB%E9%9D%A2%E5%8F%8E%E9%8C%B2_2024-09-20_11.36.49.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB466YVMXEBQT%2F20250304%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250304T064032Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEK%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIBwyGcxSXSy0fIpfqratYvitTsa7b%2BI%2B%2F4LdLf5YcDFIAiEAqk2yrdiKlu%2FQrzacPA3iNWWgZiAD4%2FIvPEDrE15NA44qiAQI6P%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARAAGgw2Mzc0MjMxODM4MDUiDEmwAEpbdGM2OpYMjircA%2FKNcz93P3EMcfx1PZ7hzfTtVKkMwaEnxKq8VfqM6PUuUV5hVVqBpz6fIBMVKZdxwZDSYfN7oZJDFnZoJ5BGs3nzRwo3Gr6k%2F0T3OLUwdwcCCS7I9h5XzO11k2ZaLKcvsgEicS7Q40K1UJe%2F1vPw%2F0KUHqu9A%2FsG5DbB9NDNVfHNtXhr2E5WjZXNv9vjTRAvYZ1hZElQsmPqUmC5Nn%2FfzG5DdG2MqS8djDn0dU8HkDc8f%2FPSv0qOSFixR2zyO0PWlXCDc1y1dhgNuy8vNhu%2BRRWUndByPaZUtPh8z4FjDdcBXXIchRt%2BTBqROUQDmLmtxsbJmTN%2FIS1PHVlI2PadqY45p3ISmSBBgik%2FvFvUhlKeyzLepDCBDNLrrB7fV8fEO5727js64ka67GDk7BN7A86QIIqk4qujma14AwztyubG4k6NzRLU7jJQHrdtq8cwPMWtntczde4ipMZiGxMOPoENzVJd5yCAjd7pe%2BEt3pY2owY2S4ypN79PC201FelgmFhV5dRs%2BYDb3OAycelJU02aIwa2TLnzwcrhSAXW5olj21gC5gVK2FxDw4d%2ByI04CdRrfO04Wz9W9%2BVBNmbfpKXTXRghy7yImS6Rnu21pOzeYWzidjXuZBwqt8MhMOi%2Fmr4GOqUBs%2B3ftKcdQbTAyVUr%2BXsTOfcb7BEvxHj6jPNk%2F%2FMuANryDyFspylAZQQ2GXzkyIS%2Fiyvtj9MbyKcDL0%2BE0iXLlNKkEHeDggHUi%2FfLGTuLoN3YIiXYHmD4hlG6NRavWd4miN9PP8r19ExNxzhltxfwGmGV7RsxIOoVfy%2BmT6Yo1ZisbuWxFpxAiCZP%2F3Xo7Nv7TVCHX1rOlsiBktaAJdT0ujl2ghxs&X-Amz-Signature=7042bf663d5cc4ee950870aa9f6179f530cd0a4611df1e8ec810410a3b4d24dd&X-Amz-SignedHeaders=host&x-id=GetObject)","children":[]},{"type":"paragraph","blockId":"1652297f-7a72-813d-96ea-f79cee807e23","parent":"コードが少し複雑そうに見えるかもしれませんが、それほど難しいものではありません。","children":[]},{"type":"paragraph","blockId":"1652297f-7a72-8117-a720-c6bcffe0ce3c","parent":"まず`main`関数の中で、`route_change`という名前の関数を定義していますね。今回はこの`route_change`関数でルーティングを実装しています。`route_change(route)`のように、ルーティングを実装する関数は必ず一つ引数を持つ必要があります。","children":[]},{"blockId":"1652297f-7a72-811c-b5c9-fb95f6051ce4","type":"code","parent":"```python\ndef route_change(route):\n\tpage.views.append(\n\t    ft.View(\n\t        \"/\",\n\t        [\n\t            ft.Text(\"Here is HomePage\"),\n\t            ft.ElevatedButton(\"Visit NEXT_PAGE\", on_click=lambda _: page.go(\"/next\")),\n\t        ],\n\t    )\n\t)\n```","children":[]},{"type":"paragraph","blockId":"1652297f-7a72-81f0-9aac-ea13867ad7bd","parent":"`page.views.append`という処理を行っています。`append`というメソッドを覚えている方なら察することができるかもしれませんが、これは`page.views`の中に何かを追加する処理です。`page.views` というのは、Fletで作ったアプリの画面のことだと思ってください。つまり、`page.views.append`というのは、画面上に何かを追加する処理ということです。","children":[]},{"type":"paragraph","blockId":"1652297f-7a72-81f1-82d4-cb7480373b46","parent":"何を追加しているかというと、`ft.View`というコントロールを追加しています。","children":[]},{"blockId":"1652297f-7a72-8121-a411-c7242a841629","type":"heading_2","parent":"## Viewについて","children":[]},{"blockId":"1652297f-7a72-81e1-8a4c-d27d2bb21faa","type":"divider","parent":"---","children":[]},{"type":"paragraph","blockId":"1652297f-7a72-81db-bd39-c833bc6fb2a5","parent":"`ft.View`コントロールは、最上位のコンテナ要素と説明されます。コンテナ要素とは、他から影響を受けない独立した要素のことです。最上位というのは、要素の「一番外側にある」という意味です。早い話、ページ全体のことを設定するコントロールというです。","children":[]},{"type":"paragraph","blockId":"1652297f-7a72-8128-841a-c112ef929078","parent":"`ft.View`は、基本的には`ft.Column`と同じように、リストの中に複数の要素を入れて縦に並べることができます。`ft.Column`と違う点は、「**ページルート**」を設定する点です。","children":[]},{"blockId":"1652297f-7a72-8113-a457-e250939553cf","type":"code","parent":"```python\nft.View(\n\t  **\"/\"**,　　#**ページルート**\n\t  [\n\t      ft.Text(\"Here is HomePage\"), #中に入れる要素\n\t      ft.ElevatedButton(\"Visit NEXT_PAGE\", on_click=lambda _: page.go(\"/next\"))\n\t  ],\n)\n```","children":[]},{"type":"paragraph","blockId":"1652297f-7a72-8191-bb90-dddaba578df7","parent":"ページルートとは、アドレスのようなものです。これによってどのページかを判別します。\nページルートは必ず「`/`」（スラッシュ）で始まります。\n今回のコードの例では、ホームページのページルートは「`/`」であり、ネクストページのページルートは「`/next`」です。","children":[]},{"blockId":"1652297f-7a72-816f-af94-fa214ece57aa","type":"callout","parent":"> 💡 つまりページルートの記述方法や役割は、URLやパスと同じです","children":[]},{"type":"paragraph","blockId":"1652297f-7a72-81f9-9b3a-db5637e1cf28","parent":"このページルートをつけることによって、ページ移動が簡単に可能になります。","children":[]},{"type":"paragraph","blockId":"1652297f-7a72-8142-a936-ef3c38b08830","parent":"`ft.View`について詳しく知りたい方は以下の公式ドキュメントをご覧ください。","children":[]},{"blockId":"1652297f-7a72-8178-83e9-e719e4acea22","type":"bookmark","parent":"[bookmark](https://flet.dev/docs/controls/view/)","children":[]},{"blockId":"1652297f-7a72-8194-937b-ebc1b385f56b","type":"heading_2","parent":"## ページ移動の実装","children":[]},{"blockId":"1652297f-7a72-818c-a061-c057955ed654","type":"divider","parent":"---","children":[]},{"type":"paragraph","blockId":"1652297f-7a72-81a1-a78b-eea4e76364c8","parent":"ページ移動を実装するには、現在のページルートを変更すれば良いのです。\nページルートを変更するには`page.go()`を使います。","children":[]},{"blockId":"1652297f-7a72-819b-9843-ea6a2dfa7b2a","type":"code","parent":"```python\npage.views.append(\n    ft.View(\n        \"/\",\n        [\n            ft.Text(\"Here is HomePage\"),\n            ft.ElevatedButton(\"Visit NEXT_PAGE\", on_click=lambda _: **page.go(\"/next\")**),\n        ],\n    )\n)\nif page.route == \"/next\":\n    page.views.append(\n        ft.View(\n            \"/next\",\n            [\n                ft.Text(\"Here is NextPage\"),\n                ft.ElevatedButton(\"Go Home\", on_click=lambda _: **page.go(\"/\")**),\n            ],\n        )\n    )\n```","children":[]},{"type":"paragraph","blockId":"1652297f-7a72-812b-a12b-d1a18c2138d2","parent":"上記のコードでは、`page.go(”/next”)`を実行すると、ページルートが「`/next`」に変更されます。そして、`if page.route == “/next”`以下にnextページを表示する処理を書いているので、ページルートが「`/next`」に変更されると、ページが移動するようになっています。\nちなみに、`on_click=lambda _ = page.go()`という書き方をしていますが、これはpythonのlambda式というもので、関数を簡潔に定義できる書き方です。","children":[]},{"type":"paragraph","blockId":"1652297f-7a72-81b4-815d-d4c2f21cbf73","parent":"今回の例では処理内容が`page.go()`だけです。このように処理内容のコードが短くて新たに関数を定義するとコードが長くなってしまう時に使うと良いでしょう。\n（lambda式については「[**lambda式**]()」をご覧ください）","children":[]},{"type":"paragraph","blockId":"1652297f-7a72-812c-b4d3-cf654066e455","parent":"閑話休題","children":[]},{"type":"paragraph","blockId":"1652297f-7a72-8119-bd02-dbef989ddd4f","parent":"最後に、下記のように、`page.on_route_change`にルーティングを実装した関数を代入します。今回の例で言えば、`route_change`関数です。","children":[]},{"blockId":"1652297f-7a72-813b-afce-d376143b63ab","type":"code","parent":"```python\npage.on_route_change = route_change\npage.go(page.route)\n```","children":[]},{"type":"paragraph","blockId":"1652297f-7a72-814b-a80f-c1af7401b6e6","parent":"そして、`page.go(page.route)`を記述し、最初に見せたいページに移動する処理を実行します。`page.route`の初期値は「`/`」なので、これによってアプリを開くと、今回の例ではHomeページが表示されるようになっています。","children":[]},{"type":"paragraph","blockId":"1652297f-7a72-8196-9de3-efbe3c4dfa38","parent":"","children":[]},{"blockId":"1652297f-7a72-81a9-b52f-e483febf95a3","type":"heading_2","parent":"## 静的なルーティングと動的なルーティング","children":[]},{"blockId":"1652297f-7a72-8150-90c1-c8e0a5d14807","type":"divider","parent":"---","children":[]},{"type":"paragraph","blockId":"1652297f-7a72-818f-bfb5-f6cc799fe887","parent":"以上で説明してきたのは、**静的なルーティング**の実装方法です。次に**動的なルーティング**の実装方法を説明したいのですが、そもそも静的・動的と言われてもどういうことかわからないという方が多いと思います。ですので、先に静的・動的なルーティングがそれぞれどのようなものかを説明します。","children":[]},{"blockId":"1652297f-7a72-811f-8593-e16ce03669d6","type":"heading_3","parent":"### 静的なルーティングの特徴","children":[]},{"type":"paragraph","blockId":"1652297f-7a72-81a1-9955-cdc08614cb93","parent":"静的ルーティングでは、すべてのページルートが事前に決められており、ページの構造やページ内のデータが固定されます。ページ数が少ない場合や、ページルートが予測できる場合に使われることが多いです。","children":[]},{"blockId":"1652297f-7a72-81d1-8c62-fcac1833759e","type":"callout","parent":"> **例：**例えば、以下のようなページルートが静的ルーティングの典型的な例です。  \n> - `/about`  \n>   \n> - `/contact`  \n>   \n> - `/product`","children":[{"blockId":"1652297f-7a72-81ee-a046-d64509988247","type":"bulleted_list_item","parent":"- `/about`","children":[]},{"blockId":"1652297f-7a72-810c-adcd-ce47ae829fe4","type":"bulleted_list_item","parent":"- `/contact`","children":[]},{"blockId":"1652297f-7a72-810a-ba8b-f1aceeeed12c","type":"bulleted_list_item","parent":"- `/product`","children":[]}]},{"type":"paragraph","blockId":"1652297f-7a72-8106-ba76-f8d93e62cb57","parent":"静的なルーティングの利点としては、ページの読み込み速度が早いことが挙げられます。","children":[]},{"blockId":"1652297f-7a72-813e-b327-d7e7289069d1","type":"heading_3","parent":"### 動的なルーティングの特徴","children":[]},{"type":"paragraph","blockId":"1652297f-7a72-81cf-b097-df0b9acaa0d4","parent":"動的ルーティングでは、ページルートの一部が変化する部分を持つため、ユーザーやデータによって違うページを生成することができます。ページルートにパラメータを含めることで、複数のページを効率的に管理できます。","children":[]},{"blockId":"1652297f-7a72-8187-8600-ccddce04d241","type":"callout","parent":"> **例：** 動的ルーティングの一例として、ブログや商品ページがあります。  \n> - `/products/01` （商品のIDが`01`の商品のページを表示する）  \n>   \n> - `/users/john-doe` （ユーザー名`john-doe`のプロフィールページ）","children":[{"blockId":"1652297f-7a72-81d8-88c5-f11f0c24ad6c","type":"bulleted_list_item","parent":"- `/products/01` （商品のIDが`01`の商品のページを表示する）","children":[]},{"blockId":"1652297f-7a72-81bf-9b1d-c59e127ffff3","type":"bulleted_list_item","parent":"- `/users/john-doe` （ユーザー名`john-doe`のプロフィールページ）","children":[]}]},{"type":"paragraph","blockId":"1652297f-7a72-8103-8faf-c519c752fbdb","parent":"動的なルーティングの利点としては、多くのページを柔軟に管理でき、特定のユーザーや商品に基づいたカスタマイズが容易という点です。大規模なアプリケーションや動的コンテンツを扱う場合に適しています。","children":[]},{"blockId":"1652297f-7a72-81de-9176-c1ebb8173244","type":"heading_2","parent":"## 動的なルーティングの実装","children":[]},{"blockId":"1652297f-7a72-8192-b8a1-e46ab7b9d0a3","type":"divider","parent":"---","children":[]},{"type":"paragraph","blockId":"1652297f-7a72-8190-aeda-fd898625f7fd","parent":"それでは、動的なルーティングの実装方法について説明します。さっそく、コードの例を見ていきましょう。","children":[]},{"blockId":"1652297f-7a72-810c-bca0-c321cc3d6203","type":"code","parent":"```python\nimport flet as ft\n\ndef main(page: ft.Page):\n    def route_change(e):\n\n        template_route = ft.TemplateRoute(page.route)\n\n        if template_route.match(\"/user/:id\"):\n            user_id = template_route.id  # 動的パラメータを取得\n            page.views.append(\n                ft.View(\n                    f\"/user/{user_id}\",\n                    controls=[\n                        ft.Text(f\"ユーザーID: {user_id}のページです\"),\n                        ft.ElevatedButton(\"ホームに戻る\", on_click=lambda _: page.go(\"/\"))\n                    ]\n                )\n            )\n        elif template_route.match(\"/\"):\n            user_id_field = ft.TextField(label=\"ユーザーIDを入力してください\")\n            # ホームページの表示\n            page.views.append(\n                ft.View(\n                    \"/\",\n                    controls=[\n                        ft.Text(\"ホームページ\"),\n                        user_id_field,\n                        ft.ElevatedButton(\"ユーザーページへ\", on_click=lambda _: page.go(f\"/user/{user_id_field.value}\"))\n                    ]\n                )\n            )\n        \n        page.update()\n\n    page.on_route_change = route_change\n    page.go(page.route)\n\nft.app(target=main)\n\n```","children":[]},{"type":"paragraph","blockId":"1652297f-7a72-8149-ba82-f48f0fc37912","parent":"以下のように、入力したユーザーIDによってページを生成するアプリを実行できます。","children":[]},{"blockId":"1652297f-7a72-817b-aa32-e00eddfe317a","type":"image","parent":"![%E7%94%BB%E9%9D%A2%E5%8F%8E%E9%8C%B2_2024-09-23_17.37.10.gif](https://prod-files-secure.s3.us-west-2.amazonaws.com/f9e367dd-1db7-428f-a2ed-c68a46952d5a/e4a187cb-b9ad-48c4-af9c-cb7c631b1027/%E7%94%BB%E9%9D%A2%E5%8F%8E%E9%8C%B2_2024-09-23_17.37.10.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB466YVMXEBQT%2F20250304%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250304T064032Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEK%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIBwyGcxSXSy0fIpfqratYvitTsa7b%2BI%2B%2F4LdLf5YcDFIAiEAqk2yrdiKlu%2FQrzacPA3iNWWgZiAD4%2FIvPEDrE15NA44qiAQI6P%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARAAGgw2Mzc0MjMxODM4MDUiDEmwAEpbdGM2OpYMjircA%2FKNcz93P3EMcfx1PZ7hzfTtVKkMwaEnxKq8VfqM6PUuUV5hVVqBpz6fIBMVKZdxwZDSYfN7oZJDFnZoJ5BGs3nzRwo3Gr6k%2F0T3OLUwdwcCCS7I9h5XzO11k2ZaLKcvsgEicS7Q40K1UJe%2F1vPw%2F0KUHqu9A%2FsG5DbB9NDNVfHNtXhr2E5WjZXNv9vjTRAvYZ1hZElQsmPqUmC5Nn%2FfzG5DdG2MqS8djDn0dU8HkDc8f%2FPSv0qOSFixR2zyO0PWlXCDc1y1dhgNuy8vNhu%2BRRWUndByPaZUtPh8z4FjDdcBXXIchRt%2BTBqROUQDmLmtxsbJmTN%2FIS1PHVlI2PadqY45p3ISmSBBgik%2FvFvUhlKeyzLepDCBDNLrrB7fV8fEO5727js64ka67GDk7BN7A86QIIqk4qujma14AwztyubG4k6NzRLU7jJQHrdtq8cwPMWtntczde4ipMZiGxMOPoENzVJd5yCAjd7pe%2BEt3pY2owY2S4ypN79PC201FelgmFhV5dRs%2BYDb3OAycelJU02aIwa2TLnzwcrhSAXW5olj21gC5gVK2FxDw4d%2ByI04CdRrfO04Wz9W9%2BVBNmbfpKXTXRghy7yImS6Rnu21pOzeYWzidjXuZBwqt8MhMOi%2Fmr4GOqUBs%2B3ftKcdQbTAyVUr%2BXsTOfcb7BEvxHj6jPNk%2F%2FMuANryDyFspylAZQQ2GXzkyIS%2Fiyvtj9MbyKcDL0%2BE0iXLlNKkEHeDggHUi%2FfLGTuLoN3YIiXYHmD4hlG6NRavWd4miN9PP8r19ExNxzhltxfwGmGV7RsxIOoVfy%2BmT6Yo1ZisbuWxFpxAiCZP%2F3Xo7Nv7TVCHX1rOlsiBktaAJdT0ujl2ghxs&X-Amz-Signature=e59c4f248b36f2f181004a3ff779c61b0a4cd25c242a761818c306e12f6b99aa&X-Amz-SignedHeaders=host&x-id=GetObject)","children":[]},{"type":"paragraph","blockId":"1652297f-7a72-81a9-9e8c-ed3f3a160615","parent":"動的なルーティングを実装するには、新たに`TemplateRoute`を使います。このクラスによって、動的なページルートがマッチするかを確認したり、ページルートのパラメータを読み取ることができます。","children":[]},{"blockId":"1652297f-7a72-81f7-91ed-c70432a6c752","type":"code","parent":"```python\ntemplate_route = ft.TemplateRoute(page.route)\n\nif template_route.match(\"/user/:id\"):\n    user_id = template_route.id  # 動的パラメータを取得\n    page.views.append(\n        ft.View(\n            f\"/user/{user_id}\",\n            controls=[\n                ft.Text(f\"ユーザーID: {user_id}のページです\"),\n                ft.ElevatedButton(\"ホームに戻る\", on_click=lambda _: page.go(\"/\"))\n            ]\n        )\n    )\n```","children":[]},{"type":"paragraph","blockId":"1652297f-7a72-816a-ade2-cc3cd3f5fb37","parent":"まず、`template_route = ft.TemplateRoute(page.route)` で`ft.TemplateRoute`クラスをインスタンス化します。","children":[]},{"type":"paragraph","blockId":"1652297f-7a72-8122-84f2-f72b6c765ba9","parent":"次に、`match`メソッドで動的なパラメータを含むページルートを確認することができます。`if template_route.match(\"/user/:id\"):` という部分がそれにあたります。\nここでは`match`メソッドで確認するページルートが`/user/:id` となっています。この中の`:id` という部分が動的なパラメータです。つまり、ここにユーザーIDが入るわけです。","children":[]},{"type":"paragraph","blockId":"1652297f-7a72-8188-8e38-f62a2973c6cb","parent":"そして、パラメータは、`template_route`のメンバー変数として格納されるので、つまり`template_route.id`にユーザーIDが格納されるわけです。","children":[]},{"blockId":"1652297f-7a72-8195-b061-e5b0988c2bd6","type":"callout","parent":"> ちなみに`TemplateRoute`クラスは静的なルーティングにも使えます  \n> 今回の例では、`elif template_route.match(\"/\"):`の部分に使っていますね。","children":[{"blockId":"1652297f-7a72-812b-9db6-dd65bbb384af","type":"paragraph","parent":"今回の例では、`elif template_route.match(\"/\"):`の部分に使っていますね。","children":[]}]},{"type":"paragraph","blockId":"1652297f-7a72-812a-888a-c9421d347e62","parent":"ルーティングの説明は以上です。","children":[]},{"type":"paragraph","blockId":"1652297f-7a72-8101-998e-c6d6ee71639b","parent":"","children":[]},{"type":"paragraph","blockId":"1652297f-7a72-81fa-947a-e75a2deb3550","parent":" Fletのルーティングについての公式ドキュメントは以下のページです。","children":[]},{"blockId":"1652297f-7a72-81c5-b700-c00c00ce8069","type":"bookmark","parent":"[bookmark](https://flet.dev/docs/getting-started/navigation-and-routing/)","children":[]}],"pageNavs":[{"title":"Home","id":"/posts"},{"title":"基礎班カリキュラム","id":"/posts/course/basic"},{"title":"後期","id":"/posts/course/後期"},{"title":"Flet-後期","id":"/posts/post/1632297f-7a72-80a0-bd39-defe56830cdf"},{"title":"ルーティング","id":"/posts/post/1632297f-7a72-80a0-bd39-defe56830cdf1652297f-7a72-8081-8ace-f98d12d30873"}],"parentTitle":"Flet-後期","childNavs":[{"title":"AppBar","id":"1652297f-7a72-8034-95b4-eca6acf220dc","child":true},{"title":"ルーティング","id":"1652297f-7a72-8081-8ace-f98d12d30873","child":true},{"title":"AppBar 練習問題","id":"19d2297f-7a72-80ec-90b8-fb5b6973806e","child":true},{"title":"ルーティング練習問題","id":"19d2297f-7a72-8009-85c4-e9b67af3cf07","child":true},{"title":"カラーテーマ","id":"19d2297f-7a72-803d-92a2-c00affe03538","child":true},{"title":"カスタムコントロール","id":"19d2297f-7a72-80e4-b4e9-ecbd81c9df64","child":true}],"curriculumId":"1632297f-7a72-80a0-bd39-defe56830cdf"},"__N_SSG":true}