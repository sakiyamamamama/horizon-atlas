{"pageProps":{"metadata":{"title":"python基礎文法","curriculumId":"1ada501e-f337-814b-ac7d-cbd864901138","category":"前期","visibility":["体験入部","発展班","基礎班"],"tags":["Python","基礎班"],"is_basic_curriculum":true,"id":"126"},"mdBlocks":[{"blockId":"1ada501e-f337-812b-8ed8-cb212fb66563","type":"heading_1","parent":"# if文の基本","children":[]},{"blockId":"1ada501e-f337-8128-a166-fd11f341bd61","type":"paragraph","parent":"今回はプログラミングをするうえで重要な概念となる**条件分岐**について学んでいきます。**条件分岐**とは、プログラム内で特定の条件を満たすか否かで、処理を変えるための機能です。","children":[]},{"blockId":"1ada501e-f337-81ae-a48d-c126610f8f98","type":"paragraph","parent":"たとえば、テストの点数が70点以上の場合は「合格」、そうでない場合は「不合格」と表示する、などを実現できます。","children":[]},{"blockId":"1ada501e-f337-8150-bb3b-dd3ec4fa21c1","type":"paragraph","parent":"Pythonで条件分岐を実現するには、 **if文** と呼ばれる構文を使用します。**if文** は次のように書くことができます。","children":[]},{"blockId":"1ada501e-f337-81e7-a67e-c260ece9f55c","type":"code","parent":"```python\nif 条件式:\n    #ここに、条件式が成立するときの処理を書く\nelse:\n    #ここに、条件式が成立しなかったときの処理を書く\n```","children":[]},{"blockId":"1ada501e-f337-81fb-a286-f74718a3a1a0","type":"paragraph","parent":"`if`の後ろにある「条件式」 には大なり記号（`>`）や小なり記号（`<`）、イコール（`=`）などを使用した条件を示す式を書きます。例えば、「点数（`score`）が70点以上」という条件を示すには`score >= 70`と書きます。ここでの`>=`は数学での「≧」と同じ意味です。","children":[]},{"blockId":"1ada501e-f337-810a-adca-f59f3b1c2dd9","type":"paragraph","parent":"上に書いたような、点数によって合否を判定するプログラムを作るには、以下のように書きます。","children":[]},{"blockId":"1ada501e-f337-8155-91a6-f23a598e1623","type":"code","parent":"```python\nscore = 75\nprint(\"あなたは\", score, \"点です\")\nif score >= 70:\n    print(\"合格です\")\nelse:\n    print(\"不合格です\")\n```","children":[]},{"blockId":"1ada501e-f337-8181-9072-c25fc1ae9671","type":"paragraph","parent":"実行結果は以下のようになります。","children":[]},{"blockId":"1ada501e-f337-81be-8aef-c44e79bac896","type":"code","parent":"```text\n＜出力結果＞\nあなたは 75 点です\n合格です\n```","children":[]},{"blockId":"1ada501e-f337-81ea-b3b0-cb49b7cebd45","type":"callout","parent":"{\"icon\":{\"type\":\"emoji\",\"emoji\":\"⚠️\"},\"color\":\"yellow_background\",\"parent\":\"> ⚠️ 今回から実行結果の表示方法を、画像からテキストに変更していますが、お気になさらず。\"}","children":[]},{"blockId":"1ada501e-f337-812c-ba9c-c2e531b473ec","type":"paragraph","parent":"変数`score`には`75`が格納されているため、条件式`score >= 70`が成立し、`print(”合格です”)`が実行されています。","children":[]},{"blockId":"1ada501e-f337-81d4-8e47-f08b7611b6d1","type":"paragraph","parent":"では、変数`score`に格納する数字を70未満に変更してみましょう。","children":[]},{"blockId":"1ada501e-f337-811a-bc8f-cd2bddf22705","type":"code","parent":"```python\nscore = 60\nprint(\"あなたは\", score, \"点です\")\nif score >= 70:\n    print(\"合格です\")\nelse:\n    print(\"不合格です\")\n```","children":[]},{"blockId":"1ada501e-f337-8159-aff0-fc9b7c3f0a6b","type":"paragraph","parent":"実行結果は以下のようになります。","children":[]},{"blockId":"1ada501e-f337-811a-8b3d-dfff1960a74b","type":"code","parent":"```text\n＜出力結果＞\nあなたは 60 点です\n不合格ですSS\n```","children":[]},{"blockId":"1ada501e-f337-81cc-9406-fdc3bd62ac09","type":"paragraph","parent":"変数`score`に格納されている数値が`60`で`score >= 70`という条件式を満たさなかったため、`print(”不合格です”)`が実行されました。","children":[]},{"blockId":"1ada501e-f337-81d5-9f8c-fdf78748e4c3","type":"callout","parent":"{\"icon\":{\"type\":\"emoji\",\"emoji\":\"❗\"},\"color\":\"red_background\",\"parent\":\"> ❗ **プログラミングでは、if文などで条件式が成立することを真（True）、成立しないことを偽（False）と呼びます。**\"}","children":[]},{"blockId":"1ada501e-f337-81ab-9b7b-ce2a581d9fc3","type":"paragraph","parent":"また、if文は以下のように`else`を省略して、条件式が真の場合のみ特定の処理を実行することもできます。","children":[]},{"blockId":"1ada501e-f337-8117-93e8-d057f1ad3f7b","type":"code","parent":"```python\nscore = 80\nprint(\"あなたは\", score, \"点です\")\nif score >= 70:\n    print(\"あなたは合格です\")\n#score が70未満のときは何も行われない\n```","children":[]},{"blockId":"1ada501e-f337-81e1-a698-f083a2039756","type":"heading_1","parent":"# 比較演算子","children":[]},{"blockId":"1ada501e-f337-81f6-98fe-ff46c0f14d9a","type":"paragraph","parent":"if文で使用する条件式は、`>=`のような記号を用いて表します。これを比較演算子 と呼びます。比較演算子にはいくつか種類があるため、以下の一覧表で紹介します。","children":[]},{"blockId":"1ada501e-f337-81f8-afbe-ed69ac15e099","type":"table","parent":"| 比較演算子 | 使用例      | 説明           | 備考        |\n| ----- | -------- | ------------ | --------- |\n| `>`   | `x > y`  | xがyより大きい（超過） |           |\n| `<`   | `x < y`  | xがyより小さい（未満） |           |\n| `>=`  | `x >= y` | xがy以上        | 数学の ≧ と一緒 |\n| `<=`  | `x <= y` | xがy以下        | 大学の ≦ と同じ |\n| `==`  | `x == y` | xとyが等しい      | 数学の = と一緒 |\n| `!=`  | `x != y` | xとyが等しくない    | 数学の ≠ と一緒 |","children":[{"blockId":"1ada501e-f337-8167-84eb-f38273fa075b","type":"table_row","parent":"","children":[]},{"blockId":"1ada501e-f337-81ca-97b2-c854d7ea7830","type":"table_row","parent":"","children":[]},{"blockId":"1ada501e-f337-8152-a1c8-e54249ab78fa","type":"table_row","parent":"","children":[]},{"blockId":"1ada501e-f337-8185-b1ef-fd6222f3b365","type":"table_row","parent":"","children":[]},{"blockId":"1ada501e-f337-8179-8d2c-d3ea6ce440d5","type":"table_row","parent":"","children":[]},{"blockId":"1ada501e-f337-81fc-b4c2-ef49e11bfc90","type":"table_row","parent":"","children":[]},{"blockId":"1ada501e-f337-815f-8626-d882bed424b9","type":"table_row","parent":"","children":[]}]},{"blockId":"1ada501e-f337-8174-b88f-d099e0cbcc6d","type":"heading_1","parent":"# elif","children":[]},{"blockId":"1ada501e-f337-819e-a3cf-fedf2945ce0b","type":"paragraph","parent":"if文では「**もし〜ならば〇〇する**」という処理でしたが、**elif文** を使用することで「**それ以外で、もしーならば△△する**」という処理も行うことができます。","children":[]},{"blockId":"1ada501e-f337-8198-bc03-e54fe177c38c","type":"paragraph","parent":"書き方は、`if`と`else`の間に`elif 条件式`を追加することで、複数の条件を順にチェックし、最初に条件式が真の部分の処理を実行します。以下のコードが記述例です。","children":[]},{"blockId":"1ada501e-f337-812a-a6d9-e7a9aa2da298","type":"code","parent":"```python\nscore = 75\nprint(\"あなたは\", score, \"点です\")\nif score >= 90:\n    print(\"あなたの評価はSです\")\nelif score >= 80:\n    print(\"あなたの評価はAです\")\nelif score >= 70:\n    print(\"あなたの評価はBです\")\nelif score >= 60:\n    print(\"あなたの評価はCです\")\nelse:\n    print(\"あなたの評価はDです\")\n```","children":[]},{"blockId":"1ada501e-f337-816b-a502-f30c43b17e50","type":"paragraph","parent":"先程のプログラムは点数から合否を判定することしかできませんでしたが、`elif`を使用することで、点数に対して多段階の評価を判定することができます。実行結果は以下のようになります。","children":[]},{"blockId":"1ada501e-f337-81f2-8c86-d60f91cbc5fe","type":"code","parent":"```text\n＜出力結果＞\nあなたは 75 点です\nあなたの評価はBです\n```","children":[]},{"blockId":"1ada501e-f337-811a-847e-ffa33ae6b0da","type":"paragraph","parent":"プログラムの流れを簡単に解説します。","children":[]},{"blockId":"1ada501e-f337-81ec-a817-df4bb75f8d29","type":"numbered_list_item","parent":"1. 最初の`if`の条件式が評価され、`score`の値が90以上かどうかをチェックする。`score`の値は75なので、この条件は**偽**となる。","children":[]},{"blockId":"1ada501e-f337-81a1-96f0-e5a92e7c6431","type":"numbered_list_item","parent":"2. 次に`elif`の条件式が評価され、`score`の値が80以上かどうかをチェックする。この場合、`score`の値は75なので、この条件も**偽**となる。","children":[]},{"blockId":"1ada501e-f337-8114-bdda-d073c3ef1484","type":"numbered_list_item","parent":"3. さらに次の`elif`の条件式が評価され、`score`の値が70以上かどうかをチェックする。この場合、`score`の値は75なので、この条件は**真**となり、「あなたの評価はBです」と出力される。","children":[]},{"blockId":"1ada501e-f337-8136-aaef-dc1e513f2358","type":"paragraph","parent":"このように`if`, `elif`, `else`を組み合わせることで、より複雑な条件分岐を実現できます。","children":[]},{"blockId":"1ada501e-f337-8166-9e0b-ede2932be1ce","type":"toggle","parent":"ifだけをたくさん使えば同じことできんじゃね？","children":[{"blockId":"1ada501e-f337-814c-b5d7-ec0dd06eb0b7","type":"paragraph","parent":"と思った人もいるかもしれません。あなたが思い浮かべたコードは、このようなものではないでしょうか？","children":[]},{"blockId":"1ada501e-f337-810f-8496-c438ca8379d8","type":"code","parent":"```python\nscore = 75\nprint(\"あなたは\", score, \"点です\")\nif score >= 90:\n    print(\"あなたの評価はSです\")\nif score >= 80:\n    print(\"あなたの評価はAです\")\nif score >= 70:\n    print(\"あなたの評価はBです\")\nif score >= 60:\n    print(\"あなたの評価はCです\")\nif score >= 0:\n    print(\"あなたの評価はDです\")\n```","children":[]},{"blockId":"1ada501e-f337-8163-a372-eaa352d0bebf","type":"paragraph","parent":"一見、elifを使用したプログラムと同様の結果が得られるように見えるかもしれません。では、このコードの実行結果を見てみましょう。","children":[]},{"blockId":"1ada501e-f337-81cd-b973-d1a685a8a0e4","type":"code","parent":"```python\n＜出力結果＞\nあなたは 75 点です\nあなたの評価はBです\nあなたの評価はCです\nあなたの評価はDです\n```","children":[]},{"blockId":"1ada501e-f337-81ac-b1f9-c1df8389ab2c","type":"paragraph","parent":"「あなたの評価は…」が複数行出力されてしまいましたね。`if`のみのプログラムと、`elif`を使用したプログラム違いはここにあります。`if`のみのプログラムでは、`if`の条件式が真の処理がもれなく実行されてしまいます。対して`if`と`elif`を使用したプログラムは、一番上のifから条件式のチェックを始め、偽であった場合には次のelif、それも偽ならさらに次のelif…とチェックを進めていきます。そして、初めて真となった条件の処理だけを実行するのです。","children":[]},{"blockId":"1ada501e-f337-8149-8801-db011b413c21","type":"code","parent":"```python\n#ifのみ\nscore = 75\nprint(\"あなたは\", score, \"点です\")\nif score >= 90:                   ←条件式が偽なので実行しない\n    print(\"あなたの評価はSです\")\nif score >= 80:                   ←条件式が偽なので実行しない\n    print(\"あなたの評価はAです\")\nif score >= 70:                   ←条件式が真なので実行\n    print(\"あなたの評価はBです\")\nif score >= 60:                   ←条件式が真なので実行\n    print(\"あなたの評価はCです\")\nif score >= 0:                    ←条件式が真なので実行\n    print(\"あなたの評価はDです\")\n```","children":[]},{"blockId":"1ada501e-f337-81af-a235-f8a39e2f04d9","type":"code","parent":"```python\n#elifあり\nscore = 75\nprint(\"あなたは\", score, \"点です\")\nif score >= 90:                   ←条件式が偽なので次のelifへ\n    print(\"あなたの評価はSです\")\nelif score >= 80:                 ←条件式が偽なので次のelifへ\n    print(\"あなたの評価はAです\")\nelif score >= 70:                 ←条件式が真なので実行\n    print(\"あなたの評価はBです\")\nelif score >= 60:                 ←以降の条件式はチェックしない\n    print(\"あなたの評価はCです\")\nelse:\n    print(\"あなたの評価はDです\")\n```","children":[]}]},{"blockId":"1ada501e-f337-8134-9576-e20cbc291686","type":"heading_1","parent":"# bool型","children":[]},{"blockId":"1ada501e-f337-81b4-8861-ed714bb1d0b3","type":"paragraph","parent":"ここでは、if文に関連して、[3章]()で登場していないもう一つの「変数の型」を紹介します。それが **bool型** です。**bool型** とは真理値を格納するための型です。真理値とは、**True****（真）**または**False****（偽）**のいずれかを取る値のことです。（→[このサイトわかりやすい！](https://wa3.i-3-i.info/word16809.html)）","children":[]},{"blockId":"1ada501e-f337-81fe-ba8d-d94fbfc73c24","type":"paragraph","parent":"例えば、このように定義できます。","children":[]},{"blockId":"1ada501e-f337-81ce-b937-ec72ccc689bc","type":"code","parent":"```python\nis_true = True\nis_false = False\n```","children":[]},{"blockId":"1ada501e-f337-81f7-98fa-cda07fb97df6","type":"paragraph","parent":"if文は条件式だけでなく、このbool型の変数を使用しても記述することができます。","children":[]},{"blockId":"1ada501e-f337-8145-818c-f94fb8e5fcca","type":"code","parent":"```python\nis_true = True\nis_false = False\nif is_true:\n    print(\"これは真です\")\nif is_false:\n    print(\"これは偽です\")\n```","children":[]},{"blockId":"1ada501e-f337-8162-a679-ca0575b2f031","type":"code","parent":"```text\n＜出力結果＞\nこれは真です\n```","children":[]},{"blockId":"1ada501e-f337-8125-9939-fa926904ed50","type":"paragraph","parent":"実行結果を見ると、「これは真です」のみが出力されています。if文は、bool型の変数の中身が`True`の場合のみ処理を実行したことがわかります。","children":[]},{"blockId":"1ada501e-f337-8172-aa4c-d51b0a097fb0","type":"paragraph","parent":"また、bool型は比較演算子の結果としても得られます。たとえば、以下のようなコードを考えてみましょう。","children":[]},{"blockId":"1ada501e-f337-8171-a066-dfa1aa925861","type":"code","parent":"```python\nx = 10\ny = 20\nflag = x < y  # xがyより小さいかどうかを比較した結果(True)を、flagに代入\nif flag:\n    print(\"xはyより小さいです\")\n```","children":[]},{"blockId":"1ada501e-f337-81c5-b8be-c713ab0e8712","type":"code","parent":"```text\n＜出力結果＞\nxはyより小さいです\n```","children":[]},{"blockId":"1ada501e-f337-816c-933d-e739d70c0183","type":"paragraph","parent":"この場合、`x < y`の結果は`True`となるため、「xはyより小さいです」と出力されました。","children":[]},{"blockId":"1ada501e-f337-81d2-9507-febf840dd004","type":"paragraph","parent":"","children":[{"blockId":"1ada501e-f337-8195-8a2e-fab4935ba45e","type":"paragraph","parent":"","children":[]}]}],"pageNavs":[{"title":"Home","id":"/posts"},{"title":"基礎班カリキュラム","id":"/posts/course/basic"},{"title":"前期","id":"/posts/course/前期"},{"title":"python基礎文法","id":"/posts/curriculums/1ada501e-f337-814b-ac7d-cbd864901138/1ada501e-f337-814b-ac7d-cbd864901138"},{"id":"/posts/curriculums/1ada501e-f337-814b-ac7d-cbd864901138/1ada501e-f337-814a-9790-da4b88aa5944","title":"6. 条件分岐（if文）"}],"childrenData":{"title":"python基礎文法","childPages":[{"title":"1. Hello World!","id":"1ada501e-f337-819f-8077-ddc8ccb71846"},{"title":"2. 変数","id":"1ada501e-f337-81d8-a0cd-d9aaad9acb2a"},{"title":"3. 変数の型","id":"1ada501e-f337-8195-ac97-d35caf43e28a"},{"title":"4. 四則演算","id":"1ada501e-f337-81d5-8d5d-d7e7fd7d1765"},{"title":"練習問題1","id":"1ada501e-f337-81c8-b930-f6e3ae450fbc"},{"title":"5. 入力","id":"1ada501e-f337-8128-b9ee-d253aaef107d"},{"title":"6. 条件分岐（if文）","id":"1ada501e-f337-814a-9790-da4b88aa5944"},{"title":"練習問題2","id":"1ada501e-f337-8185-b89a-cf0caf5c8e4b"},{"title":"7. リストと辞書","id":"1ada501e-f337-81b5-a5c1-e5c357dc3b85"},{"title":"8. 繰り返し（for文）","id":"1ada501e-f337-81a6-b12f-c8a06672e4e3"},{"title":"練習問題3","id":"1ada501e-f337-819d-912f-cebbf97aa0d5"},{"title":"9. 文字列","id":"1ada501e-f337-81d9-858d-dfc08148d49b"},{"title":"練習問題4","id":"1ada501e-f337-8131-8a60-d699aea92b9b"},{"title":"10. 関数とは","id":"1ada501e-f337-81f9-ae37-fa5bba13c1e6"},{"title":"11. 関数を作ろう！","id":"1ada501e-f337-81b3-9c2f-fdd363e7a27e"},{"title":"練習問題5","id":"1ada501e-f337-81d3-a9ad-d13079111515"}]},"pageId":"1ada501e-f337-814a-9790-da4b88aa5944","title":"6. 条件分岐（if文）"},"__N_SSG":true}