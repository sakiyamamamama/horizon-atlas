[
  {
    "type": "paragraph",
    "blockId": "17d2297f-7a72-80fb-9ef7-f68e9af4d40d",
    "parent": "ここでは、プログラミング初学者におすすめとされるプログラミング言語である**Python**の基礎文法を学びます。",
    "children": []
  },
  {
    "type": "paragraph",
    "blockId": "17d2297f-7a72-80bf-8095-c1aa103a8f63",
    "parent": "Pythonのパソコンへのインストールがまだという方は[こちら](/19c2297f7a7280b083b1e87a394630cc)からどうぞ",
    "children": []
  },
  {
    "type": "child_page",
    "blockId": "17d2297f-7a72-803a-a1c0-d031b23c0073",
    "parent": "## 1. Hello World!",
    "children": [
      {
        "type": "paragraph",
        "blockId": "6d68410c-b944-48cd-b344-674066588c3a",
        "parent": "Pythonの学習の第一歩として、好きな言葉を画面に表示する方法を学びましょう。次のようなプログラムを書いてみましょう。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "f0cc90e1-f0d7-43c2-b18f-98bffa3fbd35",
        "parent": "```python\nprint(\"Hello World!\")\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "e97482a7-1393-475f-bb6e-cf009ad68a4d",
        "parent": "書けたら、保存（Ctrl + S）をして Run → Run Module（またはF5キー）で実行してみましょう。すると、以下のように「`Hello World!`」と新しい行に表示されます。",
        "children": []
      },
      {
        "type": "image",
        "blockId": "7de4fcf8-c25d-4223-bdbd-ee4c4a8428cb",
        "parent": "![HelloWorld.png](https://prod-files-secure.s3.us-west-2.amazonaws.com/f9e367dd-1db7-428f-a2ed-c68a46952d5a/984e284f-89fb-437c-8c5c-29a1e6c8e4a1/HelloWorld.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB466TIA43OQL%2F20250220%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250220T065930Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEI%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIAUOIMKmUW0YU9oM%2FRFaA0q5QGfmfOeyKq2oFhQojV79AiBIpSNz4UEHggkGsqwPgOnwvG6ImepW5zTYg7l94j%2Fh8iqIBAi4%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAAaDDYzNzQyMzE4MzgwNSIMQsVr%2BJMYGuViL1ArKtwD5KGDqUIQnrCWmYlkp%2F0uNXkD1%2FQClX6d7789mbb%2FfNcqx7VEih6hjeAnOzK52pCJ%2F07HoKuwTeeC%2BvSmvLoiywkXsvaJxrSYIMDIUn%2FdaoOi8LugMlI%2BaRUhOPg57UPqgouo0rVoba3YUhhDHUip7KCpe7y4416f3ZFmuhg2FoYkqeiEhApOlS7KlPNMSDccjZAlhIsFV4oU%2Fbi5ZqRFaObU1KI3KdLRCssmGuaqsLtioZFpWQTczy6L53VacawFkhGBSv6z0MTehRTE7QOfzj%2FiXNQQNVqbB0cURIAq3QZAEOtqPfJtE5dMHXoNKM%2Bzp4MTjBxp1FpQyTz4djS6WEm0CQVQrMyHNJJWJcScWvXmeWUZW0h0wuPz%2Bo8hhNETCE5P4vmQxaQMKIm%2Bj9ako7QcMomPEY3Q2o2dGXgiD0NPmb78fbUE4SWf9xaCZrwrEVZnoDJjafzAkQUyrbP3D78WYQ1EQn7bF%2BzXzgiCzKBAvoVmHWztxRtHn2W6ru8864jZEwVld3HUlfk0YhnpTaeoW7D%2FshDOpNMIJnxldfYarLspzb%2Fh3U41EV%2FVyuWWSvSbQxlTUj8QUzhfosfCjDpQDue3VYB8SRpejhhmJ0KrFW7LyVeqrwX1XYcw0J3bvQY6pgHgTXMWhtxNVqbVjR8uFmd8tmHd5YO1l%2Fl4tt2b0DIYgfcjraD5TQ0bs4Bj60p6ncoZt%2FdkyV2GP7I8ykvTYZKHW6Y9WXkPDcNoh%2FS%2B9nk2RKaPH81GnCU0H%2FHyuIlIzMZQpjedMekqi6Nbk8Yg8eWygeB0QjWXoFXvs09m0A7YQnzWi7tjA48eoZROmQHa3Euv270tRX3y8Jfq3NYzLWQCH1U7j2pr&X-Amz-Signature=cfae5c7715615264505ed616b1212f1c5fb5c851edb90789b392eef3d707446d&X-Amz-SignedHeaders=host&x-id=GetObject)",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "f01c0c9e-10a1-42a1-946e-843ea02fb463",
        "parent": "`Hello World!`の部分を別の言葉に変えてみましょう。例えば、",
        "children": []
      },
      {
        "type": "code",
        "blockId": "dd9cb410-6b2b-43fc-a77a-77f11ee92b92",
        "parent": "```python\nprint(\"Hello Horizon!\")\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "5eff0907-4aa7-46e3-b330-52c0bdb04b7b",
        "parent": "保存をして実行してみると、このように「`Hello Horizon!`」が表示されます。",
        "children": []
      },
      {
        "type": "image",
        "blockId": "64cc4b40-0571-4133-bb61-7edfcd5d1955",
        "parent": "![HelloHorizon.png](https://prod-files-secure.s3.us-west-2.amazonaws.com/f9e367dd-1db7-428f-a2ed-c68a46952d5a/1d99e9bb-e66b-4d97-ae01-d02fc0cb8806/HelloHorizon.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB466TIA43OQL%2F20250220%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250220T065930Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEI%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIAUOIMKmUW0YU9oM%2FRFaA0q5QGfmfOeyKq2oFhQojV79AiBIpSNz4UEHggkGsqwPgOnwvG6ImepW5zTYg7l94j%2Fh8iqIBAi4%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAAaDDYzNzQyMzE4MzgwNSIMQsVr%2BJMYGuViL1ArKtwD5KGDqUIQnrCWmYlkp%2F0uNXkD1%2FQClX6d7789mbb%2FfNcqx7VEih6hjeAnOzK52pCJ%2F07HoKuwTeeC%2BvSmvLoiywkXsvaJxrSYIMDIUn%2FdaoOi8LugMlI%2BaRUhOPg57UPqgouo0rVoba3YUhhDHUip7KCpe7y4416f3ZFmuhg2FoYkqeiEhApOlS7KlPNMSDccjZAlhIsFV4oU%2Fbi5ZqRFaObU1KI3KdLRCssmGuaqsLtioZFpWQTczy6L53VacawFkhGBSv6z0MTehRTE7QOfzj%2FiXNQQNVqbB0cURIAq3QZAEOtqPfJtE5dMHXoNKM%2Bzp4MTjBxp1FpQyTz4djS6WEm0CQVQrMyHNJJWJcScWvXmeWUZW0h0wuPz%2Bo8hhNETCE5P4vmQxaQMKIm%2Bj9ako7QcMomPEY3Q2o2dGXgiD0NPmb78fbUE4SWf9xaCZrwrEVZnoDJjafzAkQUyrbP3D78WYQ1EQn7bF%2BzXzgiCzKBAvoVmHWztxRtHn2W6ru8864jZEwVld3HUlfk0YhnpTaeoW7D%2FshDOpNMIJnxldfYarLspzb%2Fh3U41EV%2FVyuWWSvSbQxlTUj8QUzhfosfCjDpQDue3VYB8SRpejhhmJ0KrFW7LyVeqrwX1XYcw0J3bvQY6pgHgTXMWhtxNVqbVjR8uFmd8tmHd5YO1l%2Fl4tt2b0DIYgfcjraD5TQ0bs4Bj60p6ncoZt%2FdkyV2GP7I8ykvTYZKHW6Y9WXkPDcNoh%2FS%2B9nk2RKaPH81GnCU0H%2FHyuIlIzMZQpjedMekqi6Nbk8Yg8eWygeB0QjWXoFXvs09m0A7YQnzWi7tjA48eoZROmQHa3Euv270tRX3y8Jfq3NYzLWQCH1U7j2pr&X-Amz-Signature=ddf1cf25a3dfaa7e7bde59e365aa9485e26376142866d56c6cc27f9f8a070cc5&X-Amz-SignedHeaders=host&x-id=GetObject)",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "0281c4a8-7111-4964-9556-ae6f3978cdf2",
        "parent": "このように、任意の文字や言葉を画面に表示することをプログラミングでは**出力**といいます。つまり、一最初のプログラムは「Hello World!を出力した」と言う事ができます。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "eb93ecfd-eb3c-458a-9e3f-5527b86a3304",
        "parent": "また、今回`print`という言葉をプログラムに書いて出力をしました。これを **print関数** と呼びます。**print関数**は続く`()`の中に入っている言葉を出力する働きを持ちます。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "ec3e14a6-dd35-401f-8582-c3cdc4cdd195",
        "parent": "`()`の中身を様々な言葉に置き換えて、実行をしてみましょう。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "520d06b9-a9ff-4dd5-89da-e744d4e3d6f1",
        "parent": "**プログラミングは実践あるのみです！**",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "3afbb414-4de0-4ce1-9e9e-f3f55c41afc9",
        "parent": "",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "4d96c7dc-21eb-4aab-bfc9-cf5c0de5e311",
        "parent": "ここで、これからプログラミングをしていくうえで一つ注意点です。それは、**プログラム上に全角文字**（→[全角と半角の違い](https://ruby-pc.com/hanzenkaku/)）**が存在してはいけない**ということです。以下のプログラムを見てみてください。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "71d807ce-2886-4380-bc50-71ed9aa82933",
        "parent": "```python\nprint（\"Hello Horizon!\"）\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "6c22149b-a9d5-475c-8b30-98367193136c",
        "parent": "見た目ではわかりにくいですが、このプログラムは`（` と `）`が全角文字になっています。これで実行をすると…",
        "children": []
      },
      {
        "type": "image",
        "blockId": "cd0670f0-8f49-4291-835d-429ee41d8323",
        "parent": "![%E5%85%A8%E8%A7%92%E3%82%A8%E3%83%A9%E3%83%BC.jpg](https://prod-files-secure.s3.us-west-2.amazonaws.com/f9e367dd-1db7-428f-a2ed-c68a46952d5a/c4e0b6dd-8bab-455b-9017-a0889eb279e7/%E5%85%A8%E8%A7%92%E3%82%A8%E3%83%A9%E3%83%BC.jpg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB466TIA43OQL%2F20250220%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250220T065930Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEI%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIAUOIMKmUW0YU9oM%2FRFaA0q5QGfmfOeyKq2oFhQojV79AiBIpSNz4UEHggkGsqwPgOnwvG6ImepW5zTYg7l94j%2Fh8iqIBAi4%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAAaDDYzNzQyMzE4MzgwNSIMQsVr%2BJMYGuViL1ArKtwD5KGDqUIQnrCWmYlkp%2F0uNXkD1%2FQClX6d7789mbb%2FfNcqx7VEih6hjeAnOzK52pCJ%2F07HoKuwTeeC%2BvSmvLoiywkXsvaJxrSYIMDIUn%2FdaoOi8LugMlI%2BaRUhOPg57UPqgouo0rVoba3YUhhDHUip7KCpe7y4416f3ZFmuhg2FoYkqeiEhApOlS7KlPNMSDccjZAlhIsFV4oU%2Fbi5ZqRFaObU1KI3KdLRCssmGuaqsLtioZFpWQTczy6L53VacawFkhGBSv6z0MTehRTE7QOfzj%2FiXNQQNVqbB0cURIAq3QZAEOtqPfJtE5dMHXoNKM%2Bzp4MTjBxp1FpQyTz4djS6WEm0CQVQrMyHNJJWJcScWvXmeWUZW0h0wuPz%2Bo8hhNETCE5P4vmQxaQMKIm%2Bj9ako7QcMomPEY3Q2o2dGXgiD0NPmb78fbUE4SWf9xaCZrwrEVZnoDJjafzAkQUyrbP3D78WYQ1EQn7bF%2BzXzgiCzKBAvoVmHWztxRtHn2W6ru8864jZEwVld3HUlfk0YhnpTaeoW7D%2FshDOpNMIJnxldfYarLspzb%2Fh3U41EV%2FVyuWWSvSbQxlTUj8QUzhfosfCjDpQDue3VYB8SRpejhhmJ0KrFW7LyVeqrwX1XYcw0J3bvQY6pgHgTXMWhtxNVqbVjR8uFmd8tmHd5YO1l%2Fl4tt2b0DIYgfcjraD5TQ0bs4Bj60p6ncoZt%2FdkyV2GP7I8ykvTYZKHW6Y9WXkPDcNoh%2FS%2B9nk2RKaPH81GnCU0H%2FHyuIlIzMZQpjedMekqi6Nbk8Yg8eWygeB0QjWXoFXvs09m0A7YQnzWi7tjA48eoZROmQHa3Euv270tRX3y8Jfq3NYzLWQCH1U7j2pr&X-Amz-Signature=292c62defc514ecb242217140ee7fd6cc1c425a9d9cca5f90575de1fe6527249&X-Amz-SignedHeaders=host&x-id=GetObject)",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "893611d8-4fc0-475b-8a1a-bea4c3a6a9aa",
        "parent": "このようなエラーが出ていしまいます。この他にも、全角の空白によってエラーが引き起こされることもあります。ぜひ意識してみてください。ただし、例外として ””（ダブルクオーテーション）で括られている中身には全角文字があっても問題ありません。\n　　↓ これはOK",
        "children": []
      },
      {
        "type": "code",
        "blockId": "60f38ea2-6251-4616-8140-d460d57c00cc",
        "parent": "```python\nprint(\"こんにちは！\")\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "0bf54d16-69e7-4996-981e-a76767502169",
        "parent": "",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "6f0ccdd5-e5c5-4b35-ace1-cbed592df921",
        "parent": "",
        "children": []
      }
    ]
  },
  {
    "type": "child_page",
    "blockId": "17d2297f-7a72-8081-ab1b-cf4732808344",
    "parent": "## 2. 変数",
    "children": [
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8196-b20c-dae1c334b3df",
        "parent": "[前回(1.Hello World)](/17d2297f7a72803aa1c0d031b23c0073)",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81e9-8831-fd4ea85ea9df",
        "parent": "",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8104-b214-c99a7ece7c61",
        "parent": "今回はプログラミングをするうえで必要になる **変数** について学んでいきます。",
        "children": []
      },
      {
        "type": "heading_1",
        "blockId": "17d2297f-7a72-814b-b515-e0e69e7616b3",
        "parent": "# 変数",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81ed-834c-d48930c49176",
        "parent": "変数という言葉、数学などでは頻繁に聞くかもしれませんが、プログラミングでの変数は数学などでの変数とは少し違います。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81f9-94e4-c10b0f696cac",
        "parent": "プログラミングでの変数とは、**データを入れる箱** と言えます。以下のプログラムを見てください。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "17d2297f-7a72-8195-9583-d74223cf9887",
        "parent": "```python\na = 10\nb = 5\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-819c-9bbb-c9f3bc251f8b",
        "parent": "これは、「a」という名前の箱（**変数**）に10という数字を入れ、「b」という名前の箱（**変数**）に5という数字を入れているプログラムです。",
        "children": []
      },
      {
        "type": "image",
        "blockId": "17d2297f-7a72-8103-b692-ec5c047bd6a4",
        "parent": "![%E5%A4%89%E6%95%B0.jpg](https://prod-files-secure.s3.us-west-2.amazonaws.com/f9e367dd-1db7-428f-a2ed-c68a46952d5a/8aebfb3b-2247-45c3-a296-b146a7c84d81/%E5%A4%89%E6%95%B0.jpg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB466SOBV66RO%2F20250220%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250220T065930Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEI%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIFGP9wXugDpHk4yR4RrR53NyH6MOYqtSqznLvwLqp76yAiBbfvOMTj73fBw%2BbBDZyRY%2FWTohW6gzgnVD0SJvsBU2yCqIBAi4%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAAaDDYzNzQyMzE4MzgwNSIMR%2F5twPLbs9i6Xp4WKtwD0YKZ6UtcuKmUIKQqJtYU0kpNd07TTOwfjZ1CtBQgwn2N6xvt8CfThkkHNJDxHJdzRKTPawqmkPeKEdcrxWP0LwH2oNIo46pL%2BEs6l743NLOmiPCvll4DZ%2BcWRpGArv219lPhjMoDwuIFBoq%2BrLiivLJ3y%2BuDdC5gnpPpOTU%2F5FO5A%2BjOiouMNPaBwKAOH%2FQMFqcytWyh6NpXbhY%2Be4LVcV65DBge6X3Hj3mjxvGn3Vb4421eFO6HbDgwmMTLiUy4lI%2FX8IXelJazgnp%2BUQUh%2F2RwdLvLMfZa3Ju5m5y9rUmvR70eucLnoh89ID%2F%2BX80eV4WKtrkgi%2F58E0X425nrWUhkUvhrMmZ7SOgbGCR%2FGQH7rzVMNXzjcYx7U4RWdE3N4XC2VCA%2FuN171W07FU2wj64WXlDoaHWrEpfOfn7x%2FCN%2Fe2SkOVbhmqkG%2BXaBz4QB6ooCrC4oeFaGAJt%2B33L5gs6d1qbtxV7tIeGyvSi6uLFatPPmJ6%2BfUPfIkju9mqTSBEs6XnAgzQMmjHJrbQ2dtmWWNdQHrpDq%2F3lcV0%2B4HSm%2BOOxQhrdCUqNeQwHxLAd9Y25A%2Bd9DtgTkXZfG9VWhwhUx2Vue7qlsg%2BgsuwmYfrwchoUxNPcn0bIJ18Uw4J3bvQY6pgEpMb2OvxanwzYi6y%2BVuyfZ9ngnwadD%2FHn%2B1QkmTgNOGKaNp4E6Fvp67cZ1DWUCDGcO2MhFfcKo5f6zPhDYdBvydHLK5VqU%2B3PoVTRv%2BG5f41kz52IAlF80bnwOGLxm3atu5Y3VK6Y0fJj2%2FwzHOhTra0smjcUqHz9%2FW7MdrHVUJdfr9ZdNqIviVA3gRnPQQbzQ%2FoEdn3Yn%2BuCw%2B%2BnH%2B2kmQetz85dr&X-Amz-Signature=d53566303e524caabaa745d3c91353038828dd39fc99dd9a11dc496c03165f9a&X-Amz-SignedHeaders=host&x-id=GetObject)",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-810a-a286-e7966043de3a",
        "parent": "この箱に数字などのデータを入れることをプログラミングでは**代入**といいます。「aに10を代入する」などと言うことがよくあります。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8171-a51e-ef1e18bd4954",
        "parent": "Pythonではこの代入を **＝（イコール）**を使って表します。数学では ＝ は二つの式や値が等しいときに使う記号ですが、<u>プログラミングでは少し違うので注意しましょう。</u>",
        "children": []
      },
      {
        "type": "heading_1",
        "blockId": "17d2297f-7a72-81b8-8439-ec6face74422",
        "parent": "# 変数の出力",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81a2-b787-f9c4ea696326",
        "parent": "前章のprint関数を使えば、この変数を画面上に出力することができます。先程のプログラムにprint関数を次のように書き足すと",
        "children": []
      },
      {
        "type": "code",
        "blockId": "17d2297f-7a72-81db-95e4-dc3e3725b1a2",
        "parent": "```python\na = 10\nb = 5\nprint(a)\n```",
        "children": []
      },
      {
        "type": "image",
        "blockId": "17d2297f-7a72-810c-acfa-ec5baa9e3860",
        "parent": "![%E5%A4%89%E6%95%B0%E3%81%AE%E5%87%BA%E5%8A%9B1.jpg](https://prod-files-secure.s3.us-west-2.amazonaws.com/f9e367dd-1db7-428f-a2ed-c68a46952d5a/edc4f2fe-121e-42bd-8f1e-65bb68073341/%E5%A4%89%E6%95%B0%E3%81%AE%E5%87%BA%E5%8A%9B1.jpg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB466SOBV66RO%2F20250220%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250220T065930Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEI%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIFGP9wXugDpHk4yR4RrR53NyH6MOYqtSqznLvwLqp76yAiBbfvOMTj73fBw%2BbBDZyRY%2FWTohW6gzgnVD0SJvsBU2yCqIBAi4%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAAaDDYzNzQyMzE4MzgwNSIMR%2F5twPLbs9i6Xp4WKtwD0YKZ6UtcuKmUIKQqJtYU0kpNd07TTOwfjZ1CtBQgwn2N6xvt8CfThkkHNJDxHJdzRKTPawqmkPeKEdcrxWP0LwH2oNIo46pL%2BEs6l743NLOmiPCvll4DZ%2BcWRpGArv219lPhjMoDwuIFBoq%2BrLiivLJ3y%2BuDdC5gnpPpOTU%2F5FO5A%2BjOiouMNPaBwKAOH%2FQMFqcytWyh6NpXbhY%2Be4LVcV65DBge6X3Hj3mjxvGn3Vb4421eFO6HbDgwmMTLiUy4lI%2FX8IXelJazgnp%2BUQUh%2F2RwdLvLMfZa3Ju5m5y9rUmvR70eucLnoh89ID%2F%2BX80eV4WKtrkgi%2F58E0X425nrWUhkUvhrMmZ7SOgbGCR%2FGQH7rzVMNXzjcYx7U4RWdE3N4XC2VCA%2FuN171W07FU2wj64WXlDoaHWrEpfOfn7x%2FCN%2Fe2SkOVbhmqkG%2BXaBz4QB6ooCrC4oeFaGAJt%2B33L5gs6d1qbtxV7tIeGyvSi6uLFatPPmJ6%2BfUPfIkju9mqTSBEs6XnAgzQMmjHJrbQ2dtmWWNdQHrpDq%2F3lcV0%2B4HSm%2BOOxQhrdCUqNeQwHxLAd9Y25A%2Bd9DtgTkXZfG9VWhwhUx2Vue7qlsg%2BgsuwmYfrwchoUxNPcn0bIJ18Uw4J3bvQY6pgEpMb2OvxanwzYi6y%2BVuyfZ9ngnwadD%2FHn%2B1QkmTgNOGKaNp4E6Fvp67cZ1DWUCDGcO2MhFfcKo5f6zPhDYdBvydHLK5VqU%2B3PoVTRv%2BG5f41kz52IAlF80bnwOGLxm3atu5Y3VK6Y0fJj2%2FwzHOhTra0smjcUqHz9%2FW7MdrHVUJdfr9ZdNqIviVA3gRnPQQbzQ%2FoEdn3Yn%2BuCw%2B%2BnH%2B2kmQetz85dr&X-Amz-Signature=86f7fb984cadfb4b3ba8a47c139d1374c6391ac2c6b61920197e573297a85ed2&X-Amz-SignedHeaders=host&x-id=GetObject)",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8130-8622-f802122f71d4",
        "parent": "このように変数 a の中に入っている 10 が出力されました。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8124-abab-eae8452fa13d",
        "parent": "カンマで区切ることで、複数の変数を一行のprint関数で出力したり、テキストといっしょに出力することもできます。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "17d2297f-7a72-81bc-893d-f91082c750af",
        "parent": "```python\na = 10\nb = 5\nprint(a, b)\nprint(\"変数aの値は\", a, \"です\")\nprint(\"変数bの値は\", b, \"です\")\n```",
        "children": []
      },
      {
        "type": "image",
        "blockId": "17d2297f-7a72-810e-b1f7-ea26f0265a50",
        "parent": "![%E5%A4%89%E6%95%B0%E3%81%AE%E5%87%BA%E5%8A%9B2.jpg](https://prod-files-secure.s3.us-west-2.amazonaws.com/f9e367dd-1db7-428f-a2ed-c68a46952d5a/bf972f48-65e5-41fa-81a3-46c3f997b28c/%E5%A4%89%E6%95%B0%E3%81%AE%E5%87%BA%E5%8A%9B2.jpg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB466SOBV66RO%2F20250220%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250220T065930Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEI%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIFGP9wXugDpHk4yR4RrR53NyH6MOYqtSqznLvwLqp76yAiBbfvOMTj73fBw%2BbBDZyRY%2FWTohW6gzgnVD0SJvsBU2yCqIBAi4%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAAaDDYzNzQyMzE4MzgwNSIMR%2F5twPLbs9i6Xp4WKtwD0YKZ6UtcuKmUIKQqJtYU0kpNd07TTOwfjZ1CtBQgwn2N6xvt8CfThkkHNJDxHJdzRKTPawqmkPeKEdcrxWP0LwH2oNIo46pL%2BEs6l743NLOmiPCvll4DZ%2BcWRpGArv219lPhjMoDwuIFBoq%2BrLiivLJ3y%2BuDdC5gnpPpOTU%2F5FO5A%2BjOiouMNPaBwKAOH%2FQMFqcytWyh6NpXbhY%2Be4LVcV65DBge6X3Hj3mjxvGn3Vb4421eFO6HbDgwmMTLiUy4lI%2FX8IXelJazgnp%2BUQUh%2F2RwdLvLMfZa3Ju5m5y9rUmvR70eucLnoh89ID%2F%2BX80eV4WKtrkgi%2F58E0X425nrWUhkUvhrMmZ7SOgbGCR%2FGQH7rzVMNXzjcYx7U4RWdE3N4XC2VCA%2FuN171W07FU2wj64WXlDoaHWrEpfOfn7x%2FCN%2Fe2SkOVbhmqkG%2BXaBz4QB6ooCrC4oeFaGAJt%2B33L5gs6d1qbtxV7tIeGyvSi6uLFatPPmJ6%2BfUPfIkju9mqTSBEs6XnAgzQMmjHJrbQ2dtmWWNdQHrpDq%2F3lcV0%2B4HSm%2BOOxQhrdCUqNeQwHxLAd9Y25A%2Bd9DtgTkXZfG9VWhwhUx2Vue7qlsg%2BgsuwmYfrwchoUxNPcn0bIJ18Uw4J3bvQY6pgEpMb2OvxanwzYi6y%2BVuyfZ9ngnwadD%2FHn%2B1QkmTgNOGKaNp4E6Fvp67cZ1DWUCDGcO2MhFfcKo5f6zPhDYdBvydHLK5VqU%2B3PoVTRv%2BG5f41kz52IAlF80bnwOGLxm3atu5Y3VK6Y0fJj2%2FwzHOhTra0smjcUqHz9%2FW7MdrHVUJdfr9ZdNqIviVA3gRnPQQbzQ%2FoEdn3Yn%2BuCw%2B%2BnH%2B2kmQetz85dr&X-Amz-Signature=6b00e5775cf80f6dd2e3f9e5c860025e196ad2afaf4b145656d62a0f728c456f&X-Amz-SignedHeaders=host&x-id=GetObject)",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81bd-a4dd-cd4107552c8e",
        "parent": "",
        "children": [
          {
            "type": "paragraph",
            "blockId": "17d2297f-7a72-816f-89f2-f28451d3afa8",
            "parent": "",
            "children": []
          }
        ]
      }
    ]
  },
  {
    "type": "child_page",
    "blockId": "17d2297f-7a72-80a2-bb38-ca7740288a86",
    "parent": "## 3. 変数の型",
    "children": [
      {
        "type": "paragraph",
        "blockId": "38a48f95-fa96-4b5e-af75-3b1ad0951109",
        "parent": "[前回(2.変数)](/eb0495b1874f460a86720c086bc8352d)",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "90f4f03f-8955-475d-8c5e-fd3cfd1a8fa5",
        "parent": "",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "9ee19ac3-3313-4106-baea-14330ed3b649",
        "parent": "今回からは少し難しい概念である変数の型について学びます…が、その前に少し箸休めとしてコメントアウトの話をします。",
        "children": []
      },
      {
        "type": "heading_1",
        "blockId": "1f9be6e6-7483-4a32-960c-829e54c671c0",
        "parent": "# プログラム上のコメント",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "b19c2ea2-714d-4c14-b951-a4b4ca463569",
        "parent": "プログラム上に、そのプログラムの処理の説明などを残したいときがあると思います。例えば、次のように…",
        "children": []
      },
      {
        "type": "code",
        "blockId": "37f61501-f422-46a5-98c3-03cb89a92f60",
        "parent": "```python\na = 10   変数 a に10を代入\nb = 5    変数 b に5を代入\na と b を出力\nprint(a, b)\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "29096ede-e3b2-4a05-84bf-634cda12d231",
        "parent": "しかし、これではエラーが起こってしまいます。1章「Hello World!」でも紹介したように、プログラムに**全角文字はあってはいけません**し、そもそもプログラムとして成り立っていません。",
        "children": []
      },
      {
        "type": "image",
        "blockId": "7469dabe-6a80-454e-9a6f-6d54a7c55f13",
        "parent": "![%E5%85%A8%E8%A7%92%E3%82%A8%E3%83%A9%E3%83%BC.jpg](https://prod-files-secure.s3.us-west-2.amazonaws.com/f9e367dd-1db7-428f-a2ed-c68a46952d5a/c4e0b6dd-8bab-455b-9017-a0889eb279e7/%E5%85%A8%E8%A7%92%E3%82%A8%E3%83%A9%E3%83%BC.jpg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB4666TOBOGXS%2F20250220%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250220T065931Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEI%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCICqTaZhEGcepTGZQpbXHnUCVjXKHM%2FxatfyvJ3J3Hl2PAiEAq36EAMeGqm%2Fh0vfP7QAq352zjZaK1u0U7xC%2FhtZTbMEqiAQIuP%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARAAGgw2Mzc0MjMxODM4MDUiDJzEfPKPgH7F6h17byrcA%2FqPsf3c3QAInFrXwVIrpT%2F5onsvvOlhP7GJfdZE3hO6ZDsDsAO3dLyx5x5Ht2QPuAgG49fWkjwcmCnrv8B8dRHjIFkDr0INEciSDntA0G7L0pdUF7uoLXmz%2BtvI0KEl036Ak2chisqWHrj%2BIoUabLWODMgBnC%2B2DYBDP49iVfIjBUi6AJxfDBWQXK595WAR01P9woU3t9gY08KrgtDLRIhunJuLO7RzRmPSM%2B2Nhb1oOfOhr5F2Q0zWA0VTgutlJeOPiTFEPX5dvix0iKkTOMRCOsnfiv5BRXA0LfGkmBbTzlw5j%2BGorc9s%2FJW6lE9OLedW2m7Xwit7jJjbad%2F%2BxX%2Fs%2FhBMDnFNGHQ%2F2FqgKrPaiwXCq%2Bh2dj8BvQo3YG48Y4H3oreqC0TAlAL7dD9bYF11iv8cKNICOkKit9YDUknNgU%2BRBvnTKa%2FQcV4IZ4JJDIGDO4Gu%2FwjMek%2B65dgol5DBgKLrjmthAttMj3VoLmfJBuxpB%2B8YJMZtaQfRUML6GN%2BCgwXTHxas4C8BQawmSrSGjdJxs83hGNRMdWED7uC78iK0Dg6VV7G9nqV%2F4VPou3aDxgSNROzIbczvaXD4dBVO5%2FyWZ9ohnC4qQ5Qt%2FIT4m6i1uHZPckMoSrSHMN%2Bc270GOqUBYERy23SSdcF%2FiQsnYSUPDf%2BWhnuqL3uEWAZOBDzTIFFQVjk9S7BbdgujwrjBSkshuJrSzN7z9pb3Rc3ykq864mIzyUS6aAQCYAzqMqMMlusFN%2FWXYu92gai%2Bwmq%2BOY3kzPtfC7irrsX7QGnGZzKZYs%2F1xtzndWH05bySOlEUBU9SJyaxJsZwSzV1ntcRwDa3ymJ7XgrgqtA7VFV3XcVTRjVzIQAQ&X-Amz-Signature=5652c58711d39755f96f3ac1c8f16e1bf983763ee5e0e32114c61b5c957b82ac&X-Amz-SignedHeaders=host&x-id=GetObject)",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "66c98712-5b65-4e99-a3c6-c659a6ea0742",
        "parent": "そこで使うのが、「#」です。ハッシュタグとかシャープとか呼ぶ記号ですね。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "7f2347e5-6f2f-4307-949a-518738ac59eb",
        "parent": "説明として残したい部分の頭に「#」をつけてみましょう。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "ae549dc5-744a-40f3-bd07-272fd197690a",
        "parent": "```python\na = 10   #変数 a に10を代入\nb = 5    #変数 b に5を代入\n#a と b を出力\nprint(a, b)\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "5d174453-b147-4a87-a09f-fd5b37639e27",
        "parent": "こうすることで、プログラム中の#以降はパソコンに無視されるようになり、エラーもなくなります。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "407a1e32-adff-4d94-8da9-196e3d8044ff",
        "parent": "#を使って説明やコメントをプログラム中に残すことを**コメントアウト**といいます。コメントアウトはこれからの説明でも頻繁に使っていくのでぜひ覚えていてください。",
        "children": []
      },
      {
        "type": "heading_1",
        "blockId": "2ff18e10-d9ee-40c2-b1fa-6fb916031467",
        "parent": "# 変数の型",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "0305ab72-19aa-4600-97ce-51b7531c9217",
        "parent": "では、本題に取り掛かりましょう！",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "fd7a6b1a-2f04-4087-b9ed-85399fcb82a6",
        "parent": "「**変数の型**」とは、変数にどのようなデータを格納するかを決めるルールです。Pythonでは、その変数にどのようなデータが格納されたかで変数の型が決まります。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "85e8b162-3709-4b5e-97f6-3258b09b1722",
        "parent": "例えば、次のプログラムでは…",
        "children": []
      },
      {
        "type": "code",
        "blockId": "89b96a60-8f9b-42b8-bcfe-989709a3f711",
        "parent": "```python\na = 10    #a は整数型\nb = 3.5   #b は実数型\nc = \"str\" #c は文字列型\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "28f0a76d-1748-4d2b-9531-b97206b4bf2a",
        "parent": "変数 a には整数である10が格納されているので、変数 a は「整数型」ということになります。\nプログラミングでは、少数を含む数字を**実数**と呼びます。変数 b は実数である3.5が格納されているため「実数型」となります。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "29e04aed-872c-4f9a-bc92-68e9c9c61343",
        "parent": "また、`”str”`のように数字ではなく文字のデータに関しては、**文字列**と呼びます。Pythonでは、任意のテキストをダブルクォート(`””`)で囲むことで**文字列**とすることができます。よって、変数 c は「文字列型」となります。文字列に関しては、Pythonカリキュラムの後半で詳しく扱います。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "929dd350-a7df-4663-a14e-b5f80d5b9074",
        "parent": "Pythonでは、この 型 は変数にどのようなデータが代入されたかで決まります。また、違う型の値を代入すれば、その変数の型は自動的に変更されます。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "8acefeb8-f5b7-40d8-a634-b9c8b258dfb6",
        "parent": "```python\na = 5      #この時点では a は整数型\na = 4.2    #実数が代入されたため、a は実数型に変更\na = \"char\" #文字列が代入されたため、a は文字列型に変更\n```",
        "children": []
      },
      {
        "type": "heading_1",
        "blockId": "7fa0f1ab-d4d6-454f-b6cd-776baa0804da",
        "parent": "# 型の確認",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "0f92c59a-dc0b-42bc-843f-a8e7f8707536",
        "parent": "プログラミングをしていると、変数がどの型であるかを知りたくなるときがあります。Pythonにはこのための便利な機能があります。**type関数**と呼ばれるものです。type関数は続く`()`の中に型を知りたい変数をいれると、その変数がどの型であるかを教えてくれます。次のように使うことが一般的です。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "b1b28ef2-3f4b-4acc-bc8f-12831b2eda41",
        "parent": "```python\n\na = 10   \nb = 3.5\nc = \"str\"\nprint(type(a))  #a の型を確認\nprint(type(b))  #b の型を確認\nprint(type(c))  #c の型を確認\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "0ce5bdce-a120-4c21-b86c-af774c7592d3",
        "parent": "型の呼び方は英語と日本語で異なるため、以下のような出力になります。",
        "children": []
      },
      {
        "type": "image",
        "blockId": "6e349397-5bc5-46a9-ad0f-13da71a40a8f",
        "parent": "![type%E9%96%A2%E6%95%B0.jpg](https://prod-files-secure.s3.us-west-2.amazonaws.com/f9e367dd-1db7-428f-a2ed-c68a46952d5a/b38fa32b-115c-4400-8291-b24f9551ba29/type%E9%96%A2%E6%95%B0.jpg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB4666TOBOGXS%2F20250220%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250220T065931Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEI%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCICqTaZhEGcepTGZQpbXHnUCVjXKHM%2FxatfyvJ3J3Hl2PAiEAq36EAMeGqm%2Fh0vfP7QAq352zjZaK1u0U7xC%2FhtZTbMEqiAQIuP%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARAAGgw2Mzc0MjMxODM4MDUiDJzEfPKPgH7F6h17byrcA%2FqPsf3c3QAInFrXwVIrpT%2F5onsvvOlhP7GJfdZE3hO6ZDsDsAO3dLyx5x5Ht2QPuAgG49fWkjwcmCnrv8B8dRHjIFkDr0INEciSDntA0G7L0pdUF7uoLXmz%2BtvI0KEl036Ak2chisqWHrj%2BIoUabLWODMgBnC%2B2DYBDP49iVfIjBUi6AJxfDBWQXK595WAR01P9woU3t9gY08KrgtDLRIhunJuLO7RzRmPSM%2B2Nhb1oOfOhr5F2Q0zWA0VTgutlJeOPiTFEPX5dvix0iKkTOMRCOsnfiv5BRXA0LfGkmBbTzlw5j%2BGorc9s%2FJW6lE9OLedW2m7Xwit7jJjbad%2F%2BxX%2Fs%2FhBMDnFNGHQ%2F2FqgKrPaiwXCq%2Bh2dj8BvQo3YG48Y4H3oreqC0TAlAL7dD9bYF11iv8cKNICOkKit9YDUknNgU%2BRBvnTKa%2FQcV4IZ4JJDIGDO4Gu%2FwjMek%2B65dgol5DBgKLrjmthAttMj3VoLmfJBuxpB%2B8YJMZtaQfRUML6GN%2BCgwXTHxas4C8BQawmSrSGjdJxs83hGNRMdWED7uC78iK0Dg6VV7G9nqV%2F4VPou3aDxgSNROzIbczvaXD4dBVO5%2FyWZ9ohnC4qQ5Qt%2FIT4m6i1uHZPckMoSrSHMN%2Bc270GOqUBYERy23SSdcF%2FiQsnYSUPDf%2BWhnuqL3uEWAZOBDzTIFFQVjk9S7BbdgujwrjBSkshuJrSzN7z9pb3Rc3ykq864mIzyUS6aAQCYAzqMqMMlusFN%2FWXYu92gai%2Bwmq%2BOY3kzPtfC7irrsX7QGnGZzKZYs%2F1xtzndWH05bySOlEUBU9SJyaxJsZwSzV1ntcRwDa3ymJ7XgrgqtA7VFV3XcVTRjVzIQAQ&X-Amz-Signature=bfb23c747de99d54aaad9d5d221eea1a805e9e860e418d591d7add935f60069e&X-Amz-SignedHeaders=host&x-id=GetObject)",
        "children": []
      },
      {
        "type": "table",
        "blockId": "0d27c227-ff8d-4ace-b0fc-c8dfac17730f",
        "parent": "| 日本語  | 英語                  |\n| ---- | ------------------- |\n| 整数型  | `integer` または `int` |\n| 実数型  | `float`             |\n| 文字列型 | `string` または `str`  |",
        "children": [
          {
            "type": "table_row",
            "blockId": "97bd3ee6-21b3-42b2-a610-4a9f6d80210f",
            "parent": "",
            "children": []
          },
          {
            "type": "table_row",
            "blockId": "d979714a-d033-4cf6-88ed-42b680627db0",
            "parent": "",
            "children": []
          },
          {
            "type": "table_row",
            "blockId": "612cd52d-bd72-4544-9f14-1b055b46c430",
            "parent": "",
            "children": []
          },
          {
            "type": "table_row",
            "blockId": "66167db0-6db3-4b1f-9fb4-fb94204d55df",
            "parent": "",
            "children": []
          }
        ]
      },
      {
        "type": "paragraph",
        "blockId": "9ce88202-1877-48b0-b0fb-c8de9d77bcdd",
        "parent": "これらの英語での呼び方は、プログラミングの分野では一般的に使われることがあるので、ぜひ覚えておきましょう。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "347f4eec-e85a-4cbf-b751-5ac6674c45bd",
        "parent": "",
        "children": []
      },
      {
        "type": "callout",
        "blockId": "46454260-c0ef-4a8b-9155-ace1a18a5e43",
        "parent": "> ☝ このような変数の型は、慣れるまで扱いが難しいかもしれませんが、意識しておかないと[エラー](/05fefe2de1e343eeb4750b5df2bac620)や意図しない動作の原因になることがあるので、頑張って身につけましょう！",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "4b2236ef-5b09-44ac-af6e-3b7ae84407aa",
        "parent": "",
        "children": []
      }
    ]
  },
  {
    "type": "child_page",
    "blockId": "17d2297f-7a72-807d-b72c-d2b61dead872",
    "parent": "## 4. 四則演算",
    "children": [
      {
        "type": "paragraph",
        "blockId": "b78e34e5-05a2-4dec-8757-c8f7bc4a68cb",
        "parent": "[前回(3.変数の型)](/17d2297f7a7280a2bb38ca7740288a86)",
        "children": []
      },
      {
        "type": "heading_1",
        "blockId": "dd95df44-805b-4849-8994-dddb4c9fe097",
        "parent": "# 算術演算子",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "5dcc98bc-2723-482e-a054-c60b837c70ed",
        "parent": "今回は、プログラム上で四則演算（足し算、引き算、掛け算、割り算）を行う方法を学びます。といっても、やり方は非常に単純です。次のプログラムを見てください。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "4cb2fa45-b3a4-4b3a-9e8b-9e098255afa8",
        "parent": "```python\na = 10 + 5  #足し算\nb = 10 - 5  #引き算\nc = 10 * 5  #掛け算\nd = 10 / 5  #割り算\nprint(\"10 + 5 =\", a)\nprint(\"10 - 5 =\", b)\nprint(\"10 * 5 =\", c)\nprint(\"10 / 5 =\", d)\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "12d175a4-d95c-4571-857f-5412acb740fd",
        "parent": "書き方は数学での四則演算に非常に似ていますが、掛け算と割り算だけ記号が少し違うので注意してください。この記号出力は以下のようになります。",
        "children": []
      },
      {
        "type": "image",
        "blockId": "ce25923d-c4f1-43b0-89a3-1e6c8c995cc3",
        "parent": "![%E5%9B%9B%E5%89%87%E6%BC%94%E7%AE%971.jpg](https://prod-files-secure.s3.us-west-2.amazonaws.com/f9e367dd-1db7-428f-a2ed-c68a46952d5a/442ebb68-da46-4217-b2a5-40ca635f6432/%E5%9B%9B%E5%89%87%E6%BC%94%E7%AE%971.jpg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB466363FZLYZ%2F20250220%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250220T065932Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEI%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDf5ZVBrbiHeNb45iS4EPCbzcWCKB2JeW7TOn48gvE7CAIhAMFCP5J279eLnkLXP9%2FPgkBSpStYkHnDkVAD0DoAJu4aKogECLj%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQABoMNjM3NDIzMTgzODA1Igx%2BctMpInMSZM5KUAcq3AOVFlUkucNjYwk%2FUIRpK03aePp9o%2FpVZFQZWBhH2zyKWyLh9Ksq2t2HDzy40CXnijKpG9e%2BcYhEN8IJLXi29ClUioZ%2FncAfE%2B159b2t21IQ62SxOKN9WaG3n2bP5IepcF9uyaIkIg6eWzNoP%2FDjAoGCEOBlVfzXlVtmecnqYBj0kA82JBJKsyGiJXYKN93zJf8IDZiohB9KgJBJ6DqkP9g8kyxNfJAlKfehbGegjds4mdiwiq8ckFcRVuZ5PtEO2R9BuX1AoGl8Yom8JLZjG7pu1A31mOFkPPWUH6VtPOjF%2BH42nI%2BrWHgyGPQpJPIqffSTZ8KShceBizYp4xuN03urdIellkmzGrS0N3GRl%2BMbXKPwHt90BngE4jjvuKFpUC3Pvk68JRohFAXK2aeBSra%2BWRlgCMlltdXdxXQNufWZlPsiUDvAkifSL5%2BhtWLapoZx2AOmsfdGguZnoELoBU5KocnYBPU%2Bb8Obx9lXGtDFnb7TA92IrLwIjQ5drS0eMWwPd8uwUeiP0yLu%2BeyD911JYuPydhZRk%2FkT8sLev80IKTNsq77YwsBMEYGm1g4E6FHD72re3r%2Bv1jbAIIpLzm4GdvKgD48KoDcik5u%2FS0%2BqJOwHIV%2BW%2FNCkIHHW9zCnndu9BjqkATMKwO3BaOpwrxV6%2F5T9qkmDl5U9JGBUFymFURXc8pRcVgZH2UAWvK%2F%2B6HGnd%2B0RjrstWFO0GU8bCQzS34s8HlW63%2BXJjCttUIvgtDIoHlmObkwZHGZhV1TL2GfqcgYn9YY%2BZPnOOLHfhH6WbVdhSqxGrXHM2fTe7eVyx3sxXwCYIEVrksUdQALSLWOmPRmnK86796yGaejemB6Wo3SuWnxA8iFT&X-Amz-Signature=09108495480a9b3e5002327ac50bfa73d2832e7eebbcb0c50acfe8c87d4551c6&X-Amz-SignedHeaders=host&x-id=GetObject)",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "62800ae0-1466-4e7f-ab39-ec31f4a5e60f",
        "parent": "また、この演算は、変数同士でも同様に行うことができます。以下のプログラムは`v1`と`v2`という二つの変数に対して四則演算を施しています。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "6be82fb6-7251-44dd-853b-ba86f411d09a",
        "parent": "```python\nv1 = 10\nv2 = 5\na = v1 + v2  #足し算\nb = v1 - v2  #引き算\nc = v1 * v2  #掛け算\nd = v1 / v2  #割り算\nprint(\"v1 + v2 =\", a)\nprint(\"v1 - v2 =\", b)\nprint(\"v1 * v2 =\", c)\nprint(\"v1 / v2 =\", d)\n```",
        "children": []
      },
      {
        "type": "image",
        "blockId": "35d82bf7-cda4-46d0-aa30-6576e5d63242",
        "parent": "![%E5%9B%9B%E5%89%87%E6%BC%94%E7%AE%972.jpg](https://prod-files-secure.s3.us-west-2.amazonaws.com/f9e367dd-1db7-428f-a2ed-c68a46952d5a/363c5564-51c1-4970-85c2-90196ee666e1/%E5%9B%9B%E5%89%87%E6%BC%94%E7%AE%972.jpg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB466363FZLYZ%2F20250220%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250220T065932Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEI%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDf5ZVBrbiHeNb45iS4EPCbzcWCKB2JeW7TOn48gvE7CAIhAMFCP5J279eLnkLXP9%2FPgkBSpStYkHnDkVAD0DoAJu4aKogECLj%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQABoMNjM3NDIzMTgzODA1Igx%2BctMpInMSZM5KUAcq3AOVFlUkucNjYwk%2FUIRpK03aePp9o%2FpVZFQZWBhH2zyKWyLh9Ksq2t2HDzy40CXnijKpG9e%2BcYhEN8IJLXi29ClUioZ%2FncAfE%2B159b2t21IQ62SxOKN9WaG3n2bP5IepcF9uyaIkIg6eWzNoP%2FDjAoGCEOBlVfzXlVtmecnqYBj0kA82JBJKsyGiJXYKN93zJf8IDZiohB9KgJBJ6DqkP9g8kyxNfJAlKfehbGegjds4mdiwiq8ckFcRVuZ5PtEO2R9BuX1AoGl8Yom8JLZjG7pu1A31mOFkPPWUH6VtPOjF%2BH42nI%2BrWHgyGPQpJPIqffSTZ8KShceBizYp4xuN03urdIellkmzGrS0N3GRl%2BMbXKPwHt90BngE4jjvuKFpUC3Pvk68JRohFAXK2aeBSra%2BWRlgCMlltdXdxXQNufWZlPsiUDvAkifSL5%2BhtWLapoZx2AOmsfdGguZnoELoBU5KocnYBPU%2Bb8Obx9lXGtDFnb7TA92IrLwIjQ5drS0eMWwPd8uwUeiP0yLu%2BeyD911JYuPydhZRk%2FkT8sLev80IKTNsq77YwsBMEYGm1g4E6FHD72re3r%2Bv1jbAIIpLzm4GdvKgD48KoDcik5u%2FS0%2BqJOwHIV%2BW%2FNCkIHHW9zCnndu9BjqkATMKwO3BaOpwrxV6%2F5T9qkmDl5U9JGBUFymFURXc8pRcVgZH2UAWvK%2F%2B6HGnd%2B0RjrstWFO0GU8bCQzS34s8HlW63%2BXJjCttUIvgtDIoHlmObkwZHGZhV1TL2GfqcgYn9YY%2BZPnOOLHfhH6WbVdhSqxGrXHM2fTe7eVyx3sxXwCYIEVrksUdQALSLWOmPRmnK86796yGaejemB6Wo3SuWnxA8iFT&X-Amz-Signature=d14fc2e98168beb30a441dafb5aefc90d877e1d0058d3827e6f6a42102af7aa4&X-Amz-SignedHeaders=host&x-id=GetObject)",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "e0476f80-d609-4484-a40c-ef0dba50f825",
        "parent": "加えて、Pythonでは次のように割り算のあまりや累乗、小数点以下の切り捨て割り算などを計算することができます。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "9aac7603-2724-4926-8533-03f66d36eff9",
        "parent": "```python\nv1 = 5\nv2 = 2\na = v1 % v2     #割り算のあまり\nb = v1 ** v2    #累乗\nc = v1 // v2    #切り捨ての割り算\nprint(\"v1 % v2 =\", a)\nprint(\"v1 ** v2 =\", b)\nprint(\"v1 // v2 =\", c)\n```",
        "children": []
      },
      {
        "type": "image",
        "blockId": "5e6f97d4-4ec7-4f5a-9f30-47c309911d35",
        "parent": "![%E5%9B%9B%E5%89%87%E6%BC%94%E7%AE%973.jpg](https://prod-files-secure.s3.us-west-2.amazonaws.com/f9e367dd-1db7-428f-a2ed-c68a46952d5a/d5814556-dde2-4767-910d-70eb7e81a320/%E5%9B%9B%E5%89%87%E6%BC%94%E7%AE%973.jpg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB466363FZLYZ%2F20250220%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250220T065932Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEI%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDf5ZVBrbiHeNb45iS4EPCbzcWCKB2JeW7TOn48gvE7CAIhAMFCP5J279eLnkLXP9%2FPgkBSpStYkHnDkVAD0DoAJu4aKogECLj%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQABoMNjM3NDIzMTgzODA1Igx%2BctMpInMSZM5KUAcq3AOVFlUkucNjYwk%2FUIRpK03aePp9o%2FpVZFQZWBhH2zyKWyLh9Ksq2t2HDzy40CXnijKpG9e%2BcYhEN8IJLXi29ClUioZ%2FncAfE%2B159b2t21IQ62SxOKN9WaG3n2bP5IepcF9uyaIkIg6eWzNoP%2FDjAoGCEOBlVfzXlVtmecnqYBj0kA82JBJKsyGiJXYKN93zJf8IDZiohB9KgJBJ6DqkP9g8kyxNfJAlKfehbGegjds4mdiwiq8ckFcRVuZ5PtEO2R9BuX1AoGl8Yom8JLZjG7pu1A31mOFkPPWUH6VtPOjF%2BH42nI%2BrWHgyGPQpJPIqffSTZ8KShceBizYp4xuN03urdIellkmzGrS0N3GRl%2BMbXKPwHt90BngE4jjvuKFpUC3Pvk68JRohFAXK2aeBSra%2BWRlgCMlltdXdxXQNufWZlPsiUDvAkifSL5%2BhtWLapoZx2AOmsfdGguZnoELoBU5KocnYBPU%2Bb8Obx9lXGtDFnb7TA92IrLwIjQ5drS0eMWwPd8uwUeiP0yLu%2BeyD911JYuPydhZRk%2FkT8sLev80IKTNsq77YwsBMEYGm1g4E6FHD72re3r%2Bv1jbAIIpLzm4GdvKgD48KoDcik5u%2FS0%2BqJOwHIV%2BW%2FNCkIHHW9zCnndu9BjqkATMKwO3BaOpwrxV6%2F5T9qkmDl5U9JGBUFymFURXc8pRcVgZH2UAWvK%2F%2B6HGnd%2B0RjrstWFO0GU8bCQzS34s8HlW63%2BXJjCttUIvgtDIoHlmObkwZHGZhV1TL2GfqcgYn9YY%2BZPnOOLHfhH6WbVdhSqxGrXHM2fTe7eVyx3sxXwCYIEVrksUdQALSLWOmPRmnK86796yGaejemB6Wo3SuWnxA8iFT&X-Amz-Signature=e9b15c4ba2b00aa742ea9b57f71eecb6c440857acddea4f03e35ef85f295ac59&X-Amz-SignedHeaders=host&x-id=GetObject)",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "a405e58b-6906-431b-87e5-7e7dc6e5965e",
        "parent": "これらの `+  -  *  /  %  **  //` をあわせて、**算術演算子**と呼びます。以下の表に各算術演算子と処理内容を示します。",
        "children": []
      },
      {
        "type": "table",
        "blockId": "a752d315-72e5-46e4-8a09-c32fbe3659b1",
        "parent": "| 算術演算子 | 処理内容   |\n| ----- | ------ |\n| +     | 足し算    |\n| -     | 引き算    |\n| *     | 掛け算    |\n| /     | 割り算    |\n| %     | あまり    |\n| **    | 累乗     |\n| //    | 切り捨て除算 |",
        "children": [
          {
            "type": "table_row",
            "blockId": "2488f917-7c60-4bec-ad0e-c9426397cb7a",
            "parent": "",
            "children": []
          },
          {
            "type": "table_row",
            "blockId": "15fbb0e1-d532-4c62-a270-92559370033b",
            "parent": "",
            "children": []
          },
          {
            "type": "table_row",
            "blockId": "c2f7e384-3a04-44a8-a409-e59fd83f1821",
            "parent": "",
            "children": []
          },
          {
            "type": "table_row",
            "blockId": "126790ea-db43-4ba6-9de1-b6f04b79fcda",
            "parent": "",
            "children": []
          },
          {
            "type": "table_row",
            "blockId": "835102e0-30d5-4b11-99d2-8f649985b908",
            "parent": "",
            "children": []
          },
          {
            "type": "table_row",
            "blockId": "c793de28-9dbc-40b1-81fe-e1a56706d400",
            "parent": "",
            "children": []
          },
          {
            "type": "table_row",
            "blockId": "3eb0e2e2-ae17-4e6a-a830-c87c2b851d1e",
            "parent": "",
            "children": []
          },
          {
            "type": "table_row",
            "blockId": "93af4577-c5ed-4682-873a-72b3943b8112",
            "parent": "",
            "children": []
          }
        ]
      },
      {
        "type": "paragraph",
        "blockId": "ef7df43a-9d55-4505-8bb7-3e2cb751938a",
        "parent": "もちろん、複数の算術演算子を用いて複雑な計算を行うこともできます。その際には数学での計算と同じように掛け算と割り算が優先されますし、`()`で囲って計算順序を指定することもできます。また、`a`や`b`などの変数を介さずとも、計算式の答えをprint関数で直接出力することもできます。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "02935409-7dd2-4d83-b782-1cb6ab7df83b",
        "parent": "```python\nprint(\"上底4, 下底6, 高さ3の台形の面積\", (4 + 6) * 3 / 2)\nprint(\"半径5の球の表面積\", 4 * 3.14 * (5 ** 2))    #4πr^2\n```",
        "children": []
      },
      {
        "type": "image",
        "blockId": "3d296450-bf15-44ba-9ea0-1bf99d60e599",
        "parent": "![%E5%9B%9B%E5%89%87%E6%BC%94%E7%AE%974.jpg](https://prod-files-secure.s3.us-west-2.amazonaws.com/f9e367dd-1db7-428f-a2ed-c68a46952d5a/b90c7872-7053-4d42-934e-d4d3b0d02f11/%E5%9B%9B%E5%89%87%E6%BC%94%E7%AE%974.jpg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB466363FZLYZ%2F20250220%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250220T065932Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEI%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDf5ZVBrbiHeNb45iS4EPCbzcWCKB2JeW7TOn48gvE7CAIhAMFCP5J279eLnkLXP9%2FPgkBSpStYkHnDkVAD0DoAJu4aKogECLj%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQABoMNjM3NDIzMTgzODA1Igx%2BctMpInMSZM5KUAcq3AOVFlUkucNjYwk%2FUIRpK03aePp9o%2FpVZFQZWBhH2zyKWyLh9Ksq2t2HDzy40CXnijKpG9e%2BcYhEN8IJLXi29ClUioZ%2FncAfE%2B159b2t21IQ62SxOKN9WaG3n2bP5IepcF9uyaIkIg6eWzNoP%2FDjAoGCEOBlVfzXlVtmecnqYBj0kA82JBJKsyGiJXYKN93zJf8IDZiohB9KgJBJ6DqkP9g8kyxNfJAlKfehbGegjds4mdiwiq8ckFcRVuZ5PtEO2R9BuX1AoGl8Yom8JLZjG7pu1A31mOFkPPWUH6VtPOjF%2BH42nI%2BrWHgyGPQpJPIqffSTZ8KShceBizYp4xuN03urdIellkmzGrS0N3GRl%2BMbXKPwHt90BngE4jjvuKFpUC3Pvk68JRohFAXK2aeBSra%2BWRlgCMlltdXdxXQNufWZlPsiUDvAkifSL5%2BhtWLapoZx2AOmsfdGguZnoELoBU5KocnYBPU%2Bb8Obx9lXGtDFnb7TA92IrLwIjQ5drS0eMWwPd8uwUeiP0yLu%2BeyD911JYuPydhZRk%2FkT8sLev80IKTNsq77YwsBMEYGm1g4E6FHD72re3r%2Bv1jbAIIpLzm4GdvKgD48KoDcik5u%2FS0%2BqJOwHIV%2BW%2FNCkIHHW9zCnndu9BjqkATMKwO3BaOpwrxV6%2F5T9qkmDl5U9JGBUFymFURXc8pRcVgZH2UAWvK%2F%2B6HGnd%2B0RjrstWFO0GU8bCQzS34s8HlW63%2BXJjCttUIvgtDIoHlmObkwZHGZhV1TL2GfqcgYn9YY%2BZPnOOLHfhH6WbVdhSqxGrXHM2fTe7eVyx3sxXwCYIEVrksUdQALSLWOmPRmnK86796yGaejemB6Wo3SuWnxA8iFT&X-Amz-Signature=df9ce0306df656d156adeba912dba0b5aef40c0ee0f929a0b1511bd8da89c2c6&X-Amz-SignedHeaders=host&x-id=GetObject)",
        "children": []
      },
      {
        "type": "heading_1",
        "blockId": "b2f78983-df98-49cf-bfab-39f5a1c3c333",
        "parent": "# 計算をするときの注意点",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "f6c27611-feaf-4cdb-aea9-60b9c06f8d8f",
        "parent": "変数を用いて計算をするとき、その変数の**型**に注意しておかなければ、エラーや意図しない動作を引き起こす可能性があります。例えば、次のプログラムを見てください。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "3f7a6714-3003-4797-8f70-2e14aae038c6",
        "parent": "```python\na = 10\nb = \"5\"\nc = a + b\nprint(c)\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "a80a0907-e7c8-476f-9b08-d7caedfd4b0f",
        "parent": "`a`には整数の10が、`b`には**文字列として**5が格納されています。そのため、3行目の計算では数字と文字を足す計算式となっています。これを実行してみると…",
        "children": []
      },
      {
        "type": "image",
        "blockId": "a5e28ce0-cd79-490e-8dd9-e6c7ffe2a11d",
        "parent": "![%E6%BC%94%E7%AE%97%E3%81%AE%E6%B3%A8%E6%84%8F.jpg](https://prod-files-secure.s3.us-west-2.amazonaws.com/f9e367dd-1db7-428f-a2ed-c68a46952d5a/b76772e5-ec9c-41fa-a4f9-a5cb1fc7403d/%E6%BC%94%E7%AE%97%E3%81%AE%E6%B3%A8%E6%84%8F.jpg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB466363FZLYZ%2F20250220%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250220T065932Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEI%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDf5ZVBrbiHeNb45iS4EPCbzcWCKB2JeW7TOn48gvE7CAIhAMFCP5J279eLnkLXP9%2FPgkBSpStYkHnDkVAD0DoAJu4aKogECLj%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQABoMNjM3NDIzMTgzODA1Igx%2BctMpInMSZM5KUAcq3AOVFlUkucNjYwk%2FUIRpK03aePp9o%2FpVZFQZWBhH2zyKWyLh9Ksq2t2HDzy40CXnijKpG9e%2BcYhEN8IJLXi29ClUioZ%2FncAfE%2B159b2t21IQ62SxOKN9WaG3n2bP5IepcF9uyaIkIg6eWzNoP%2FDjAoGCEOBlVfzXlVtmecnqYBj0kA82JBJKsyGiJXYKN93zJf8IDZiohB9KgJBJ6DqkP9g8kyxNfJAlKfehbGegjds4mdiwiq8ckFcRVuZ5PtEO2R9BuX1AoGl8Yom8JLZjG7pu1A31mOFkPPWUH6VtPOjF%2BH42nI%2BrWHgyGPQpJPIqffSTZ8KShceBizYp4xuN03urdIellkmzGrS0N3GRl%2BMbXKPwHt90BngE4jjvuKFpUC3Pvk68JRohFAXK2aeBSra%2BWRlgCMlltdXdxXQNufWZlPsiUDvAkifSL5%2BhtWLapoZx2AOmsfdGguZnoELoBU5KocnYBPU%2Bb8Obx9lXGtDFnb7TA92IrLwIjQ5drS0eMWwPd8uwUeiP0yLu%2BeyD911JYuPydhZRk%2FkT8sLev80IKTNsq77YwsBMEYGm1g4E6FHD72re3r%2Bv1jbAIIpLzm4GdvKgD48KoDcik5u%2FS0%2BqJOwHIV%2BW%2FNCkIHHW9zCnndu9BjqkATMKwO3BaOpwrxV6%2F5T9qkmDl5U9JGBUFymFURXc8pRcVgZH2UAWvK%2F%2B6HGnd%2B0RjrstWFO0GU8bCQzS34s8HlW63%2BXJjCttUIvgtDIoHlmObkwZHGZhV1TL2GfqcgYn9YY%2BZPnOOLHfhH6WbVdhSqxGrXHM2fTe7eVyx3sxXwCYIEVrksUdQALSLWOmPRmnK86796yGaejemB6Wo3SuWnxA8iFT&X-Amz-Signature=c6f6b73497dbffae7137fa4b28fe633ea66aa45277efd072e4161c0d9ab98b29&X-Amz-SignedHeaders=host&x-id=GetObject)",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "4a8cc967-cd30-44a1-8f69-2ca71d4be65c",
        "parent": "赤色でエラーが出てしまい、実行ができませんでした。簡単に日本語訳すると「**int型（整数型）とstr型（文字列型）の足し算はサポートされてないやで**」という感じです。当たり前といえば当たり前ですが、このようなミスが規模の大きいプログラムではバグを生み出したりするのです…",
        "children": []
      },
      {
        "type": "callout",
        "blockId": "d76c3c34-6471-4410-a43b-cf111136332d",
        "parent": "> ☝ プログラミングをするときは、常に変数の型を意識しよう！",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "d258776d-4171-40b0-b78b-63009d96cd95",
        "parent": "",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "4a7a92ce-4e60-4904-a3d6-4f309e473a35",
        "parent": "",
        "children": []
      }
    ]
  },
  {
    "type": "child_page",
    "blockId": "17d2297f-7a72-80ee-83ed-e549b65c3f3b",
    "parent": "## 練習問題1",
    "children": [
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81d3-a727-e37a77f2fbbb",
        "parent": "[前回(4.四則演算)](/17d2297f7a72807db72cd2b61dead872)",
        "children": []
      },
      {
        "type": "heading_1",
        "blockId": "17d2297f-7a72-815a-a53b-dc05fa63186a",
        "parent": "# 問題1",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81b9-a83b-f70cdca3a8af",
        "parent": "縦3、横4の長方形の面積を求め、その値を変数`a`に代入し、結果を出力するプログラムを書いてください。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8105-9a49-d12dcc3fb805",
        "parent": "※プログラムは「prac1-1.py」として保存",
        "children": []
      },
      {
        "type": "heading_3",
        "blockId": "17d2297f-7a72-815a-8299-e3fb831c4b2b",
        "parent": "### 期待する出力結果",
        "children": []
      },
      {
        "type": "image",
        "blockId": "17d2297f-7a72-819c-a367-ffac307e0b0c",
        "parent": "![%E7%B7%B4%E7%BF%92%E5%95%8F%E9%A1%8C1-1.jpg](https://prod-files-secure.s3.us-west-2.amazonaws.com/f9e367dd-1db7-428f-a2ed-c68a46952d5a/f51a5127-d60c-43a3-b90e-e3c518c0f5a0/%E7%B7%B4%E7%BF%92%E5%95%8F%E9%A1%8C1-1.jpg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB466TSRSUI3R%2F20250220%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250220T065934Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEI%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCFors3MBcxsseZIQLQsujuHcdnKuiMWRhxJwDd0yys5AIgJJ9QZh58N0OEUOz4%2BvKN0Q%2BsxZaE6xwvGkTUb4%2BEG9wqiAQIuP%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARAAGgw2Mzc0MjMxODM4MDUiDDxtnozCqJ60NVU5%2ByrcA8d1vV%2FgOxTENy9mzg3bVuHvLEafFU54UIW3bfaaaXOPeCCB7KsxuThjXB1zdVVXGvBOpwnIvXRnhJWIOn3lQbKNyyPULFLQm9JnQpH1fnc5RSmQb%2BI84LViVaOW89LjG3SNkPCpxOvVWnlkt1Ls%2B5lmGu3A8fNwpZTw35SKal%2FbtRdXUbplQN94a6v%2FWdApRqc56gcheZoVNoo6VqfihGPWmnsidapGHuxx%2FxsbcpQPyib%2FAY1F4qub0esjhs0dYpqUW5uwryVxKo2cJW6vL8h7iErWmoPmO%2Fb9I6jac2DW%2FB2dWTUwFRM0yXhz9cpI9L2vNYld9ekQJJQqx5rX%2FJJdiI1SUgZrtUamINmjU8ifX4baVwjj%2B1x6sXjoQ54v%2BUFT10G4LCZ3l24Vo1Mrym2g7%2BEK%2F8M5g22NJxo7KqbQltACCB4Ft5J1KHu%2BGq5NG2M%2FVWkDL0KgjhTOGnHbOHf2vDFcB1S840VYt5poUi5SPkKTv0sc1bCynuwaYG316fZ2E8lAVc0RaNJYCpkHSkyAZD9nR%2BdXQ5QnsQd5Q9LaUW2Xwbn7vw1pTfT7mtRh4faZAH3PGdnS2hG9yTrrJwGlLT2TO3aR2QLM6VlN0%2BBa2PWp%2FVOV7QM5h1ooMLid270GOqUBd4NCKs9fhAy6YeIDV1gfoG8kkFjsvEMvMyL37NEbFdaYA%2F5hlSI636OlAKhyLERl1qML5jlKNJt6Kqfc5mLiOqQsPnLGfB07qlapqkg3v2AevL3TdASmYz3u%2Boo1PNY5bx49QQsFKsIlUdlWxMp5jOBwU6WPe7N%2BNNIu54W9HQKzDa76JQGNQf3Hkuj3zC%2BaLFe8ykXuD2x2q6iQkH6P%2Bop0xvnV&X-Amz-Signature=e3929ae786615d620d486c9a725b0b9a50e675fa5f7197deb5c03e9d8171ce24&X-Amz-SignedHeaders=host&x-id=GetObject)",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81ef-8942-dc3c13455cec",
        "parent": "",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81d7-a865-d6927fd1f931",
        "parent": "",
        "children": []
      },
      {
        "type": "divider",
        "blockId": "17d2297f-7a72-818f-bb41-ca99843e6013",
        "parent": "---",
        "children": []
      },
      {
        "type": "heading_1",
        "blockId": "17d2297f-7a72-8197-a6e9-d593ba5e20d9",
        "parent": "# 問題2",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81f7-87e3-db667d682afe",
        "parent": "半径が5の円の面積を求め、その値を変数`b`に代入し、結果を出力するプログラムを書いてください。ただし、円周率は3.14としてください。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-812c-8922-d4416cf80226",
        "parent": "※プログラムは「prac1-2.py」として保存",
        "children": []
      },
      {
        "type": "callout",
        "blockId": "17d2297f-7a72-819b-87c6-dad2c9673694",
        "parent": "> 💡 円の面積の公式は **半径^2 × 円周率**",
        "children": []
      },
      {
        "type": "heading_3",
        "blockId": "17d2297f-7a72-81fd-af93-e8101f460623",
        "parent": "### 期待する出力結果",
        "children": []
      },
      {
        "type": "image",
        "blockId": "17d2297f-7a72-81cd-a3ab-e2cda501b245",
        "parent": "![%E7%B7%B4%E7%BF%92%E5%95%8F%E9%A1%8C1-1.jpg](https://prod-files-secure.s3.us-west-2.amazonaws.com/f9e367dd-1db7-428f-a2ed-c68a46952d5a/2eb025c5-916f-4046-8fef-5c1d727cd22c/%E7%B7%B4%E7%BF%92%E5%95%8F%E9%A1%8C1-1.jpg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB466TSRSUI3R%2F20250220%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250220T065934Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEI%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCFors3MBcxsseZIQLQsujuHcdnKuiMWRhxJwDd0yys5AIgJJ9QZh58N0OEUOz4%2BvKN0Q%2BsxZaE6xwvGkTUb4%2BEG9wqiAQIuP%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARAAGgw2Mzc0MjMxODM4MDUiDDxtnozCqJ60NVU5%2ByrcA8d1vV%2FgOxTENy9mzg3bVuHvLEafFU54UIW3bfaaaXOPeCCB7KsxuThjXB1zdVVXGvBOpwnIvXRnhJWIOn3lQbKNyyPULFLQm9JnQpH1fnc5RSmQb%2BI84LViVaOW89LjG3SNkPCpxOvVWnlkt1Ls%2B5lmGu3A8fNwpZTw35SKal%2FbtRdXUbplQN94a6v%2FWdApRqc56gcheZoVNoo6VqfihGPWmnsidapGHuxx%2FxsbcpQPyib%2FAY1F4qub0esjhs0dYpqUW5uwryVxKo2cJW6vL8h7iErWmoPmO%2Fb9I6jac2DW%2FB2dWTUwFRM0yXhz9cpI9L2vNYld9ekQJJQqx5rX%2FJJdiI1SUgZrtUamINmjU8ifX4baVwjj%2B1x6sXjoQ54v%2BUFT10G4LCZ3l24Vo1Mrym2g7%2BEK%2F8M5g22NJxo7KqbQltACCB4Ft5J1KHu%2BGq5NG2M%2FVWkDL0KgjhTOGnHbOHf2vDFcB1S840VYt5poUi5SPkKTv0sc1bCynuwaYG316fZ2E8lAVc0RaNJYCpkHSkyAZD9nR%2BdXQ5QnsQd5Q9LaUW2Xwbn7vw1pTfT7mtRh4faZAH3PGdnS2hG9yTrrJwGlLT2TO3aR2QLM6VlN0%2BBa2PWp%2FVOV7QM5h1ooMLid270GOqUBd4NCKs9fhAy6YeIDV1gfoG8kkFjsvEMvMyL37NEbFdaYA%2F5hlSI636OlAKhyLERl1qML5jlKNJt6Kqfc5mLiOqQsPnLGfB07qlapqkg3v2AevL3TdASmYz3u%2Boo1PNY5bx49QQsFKsIlUdlWxMp5jOBwU6WPe7N%2BNNIu54W9HQKzDa76JQGNQf3Hkuj3zC%2BaLFe8ykXuD2x2q6iQkH6P%2Bop0xvnV&X-Amz-Signature=acee985d336652495faebc43fb03491fd0d08a58e9ae0259705888d3ee742b06&X-Amz-SignedHeaders=host&x-id=GetObject)",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-817b-9bd7-d1776d29d1c0",
        "parent": "",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8166-8118-e4b3634fad2b",
        "parent": "",
        "children": []
      },
      {
        "type": "divider",
        "blockId": "17d2297f-7a72-81dd-930e-ef1ef61775de",
        "parent": "---",
        "children": []
      },
      {
        "type": "heading_1",
        "blockId": "17d2297f-7a72-81de-8bca-c5fb1b986375",
        "parent": "# 問題3",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81a9-b58b-f2a43b96c45d",
        "parent": "適切な演算子を用いて、次の計算を行ってください。",
        "children": []
      },
      {
        "type": "numbered_list_item",
        "blockId": "17d2297f-7a72-8142-a005-e3a84aaa3e7b",
        "parent": "1. 500 を 7 で割ったあまり",
        "children": []
      },
      {
        "type": "numbered_list_item",
        "blockId": "17d2297f-7a72-81a9-9685-fda9c8536e78",
        "parent": "2. 1000 を 80 で割った結果の整数部のみ",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81bc-814c-e73ab0d8e21a",
        "parent": "ただし、結果の出力は変数を介さずprint関数に直接計算式を記述して行ってください。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-815a-8424-ec49889edb39",
        "parent": "※プログラムは「prac1-3.py」として保存",
        "children": []
      },
      {
        "type": "heading_3",
        "blockId": "17d2297f-7a72-81b5-b044-ea866a545c07",
        "parent": "### 期待する出力結果",
        "children": []
      },
      {
        "type": "image",
        "blockId": "17d2297f-7a72-81d0-b9d4-f6ff7a6b18e8",
        "parent": "![%E7%B7%B4%E7%BF%92%E5%95%8F%E9%A1%8C1-3.jpg](https://prod-files-secure.s3.us-west-2.amazonaws.com/f9e367dd-1db7-428f-a2ed-c68a46952d5a/9e4dfe24-7467-4a8a-9e79-6641bc2a9cfe/%E7%B7%B4%E7%BF%92%E5%95%8F%E9%A1%8C1-3.jpg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB466TSRSUI3R%2F20250220%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250220T065934Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEI%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCFors3MBcxsseZIQLQsujuHcdnKuiMWRhxJwDd0yys5AIgJJ9QZh58N0OEUOz4%2BvKN0Q%2BsxZaE6xwvGkTUb4%2BEG9wqiAQIuP%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARAAGgw2Mzc0MjMxODM4MDUiDDxtnozCqJ60NVU5%2ByrcA8d1vV%2FgOxTENy9mzg3bVuHvLEafFU54UIW3bfaaaXOPeCCB7KsxuThjXB1zdVVXGvBOpwnIvXRnhJWIOn3lQbKNyyPULFLQm9JnQpH1fnc5RSmQb%2BI84LViVaOW89LjG3SNkPCpxOvVWnlkt1Ls%2B5lmGu3A8fNwpZTw35SKal%2FbtRdXUbplQN94a6v%2FWdApRqc56gcheZoVNoo6VqfihGPWmnsidapGHuxx%2FxsbcpQPyib%2FAY1F4qub0esjhs0dYpqUW5uwryVxKo2cJW6vL8h7iErWmoPmO%2Fb9I6jac2DW%2FB2dWTUwFRM0yXhz9cpI9L2vNYld9ekQJJQqx5rX%2FJJdiI1SUgZrtUamINmjU8ifX4baVwjj%2B1x6sXjoQ54v%2BUFT10G4LCZ3l24Vo1Mrym2g7%2BEK%2F8M5g22NJxo7KqbQltACCB4Ft5J1KHu%2BGq5NG2M%2FVWkDL0KgjhTOGnHbOHf2vDFcB1S840VYt5poUi5SPkKTv0sc1bCynuwaYG316fZ2E8lAVc0RaNJYCpkHSkyAZD9nR%2BdXQ5QnsQd5Q9LaUW2Xwbn7vw1pTfT7mtRh4faZAH3PGdnS2hG9yTrrJwGlLT2TO3aR2QLM6VlN0%2BBa2PWp%2FVOV7QM5h1ooMLid270GOqUBd4NCKs9fhAy6YeIDV1gfoG8kkFjsvEMvMyL37NEbFdaYA%2F5hlSI636OlAKhyLERl1qML5jlKNJt6Kqfc5mLiOqQsPnLGfB07qlapqkg3v2AevL3TdASmYz3u%2Boo1PNY5bx49QQsFKsIlUdlWxMp5jOBwU6WPe7N%2BNNIu54W9HQKzDa76JQGNQf3Hkuj3zC%2BaLFe8ykXuD2x2q6iQkH6P%2Bop0xvnV&X-Amz-Signature=5080eb6cfb63223a8737efeab895ac6f7427a6b15c17cb8b19c34aa221ce6593&X-Amz-SignedHeaders=host&x-id=GetObject)",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81d1-ba46-c80a6abec972",
        "parent": "",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8104-8601-c3d3c32ad0dc",
        "parent": "",
        "children": []
      },
      {
        "type": "divider",
        "blockId": "17d2297f-7a72-8164-ae2a-e737cbd00057",
        "parent": "---",
        "children": []
      },
      {
        "type": "heading_1",
        "blockId": "17d2297f-7a72-81b6-9496-ee98267b0f5f",
        "parent": "# 発展問題",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8121-b73b-c3b11a33fc5d",
        "parent": "変数`n`に代入した数字と、変数`m`に代入した値を入れ替えてください。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-817f-a0be-cf2bb257e690",
        "parent": "また、出力として入れ替え前の変数`n`と`m`の内容、入れ替えを実施すること、入れ替え後の変数`n`と`m`の内容の３つを表示してください。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81fc-8e96-fb527eac9935",
        "parent": "**ただし、この問題では必ず****3つ****の変数を使用してください。(****`m`****,** **`n`** **ともう一つ)**",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81eb-b729-ef2795622097",
        "parent": "※プログラムは「prac1-4.py」として保存",
        "children": []
      },
      {
        "type": "heading_3",
        "blockId": "17d2297f-7a72-8156-9bf7-c753945a0c9d",
        "parent": "### 期待する出力結果",
        "children": []
      },
      {
        "type": "image",
        "blockId": "17d2297f-7a72-8181-9f45-d1a57ad64140",
        "parent": "![%E7%B7%B4%E7%BF%92%E5%95%8F%E9%A1%8C1-4.jpg](https://prod-files-secure.s3.us-west-2.amazonaws.com/f9e367dd-1db7-428f-a2ed-c68a46952d5a/a74adab8-bb4a-49fd-9f2a-a93dffb240cc/%E7%B7%B4%E7%BF%92%E5%95%8F%E9%A1%8C1-4.jpg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB466TSRSUI3R%2F20250220%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250220T065934Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEI%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCFors3MBcxsseZIQLQsujuHcdnKuiMWRhxJwDd0yys5AIgJJ9QZh58N0OEUOz4%2BvKN0Q%2BsxZaE6xwvGkTUb4%2BEG9wqiAQIuP%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARAAGgw2Mzc0MjMxODM4MDUiDDxtnozCqJ60NVU5%2ByrcA8d1vV%2FgOxTENy9mzg3bVuHvLEafFU54UIW3bfaaaXOPeCCB7KsxuThjXB1zdVVXGvBOpwnIvXRnhJWIOn3lQbKNyyPULFLQm9JnQpH1fnc5RSmQb%2BI84LViVaOW89LjG3SNkPCpxOvVWnlkt1Ls%2B5lmGu3A8fNwpZTw35SKal%2FbtRdXUbplQN94a6v%2FWdApRqc56gcheZoVNoo6VqfihGPWmnsidapGHuxx%2FxsbcpQPyib%2FAY1F4qub0esjhs0dYpqUW5uwryVxKo2cJW6vL8h7iErWmoPmO%2Fb9I6jac2DW%2FB2dWTUwFRM0yXhz9cpI9L2vNYld9ekQJJQqx5rX%2FJJdiI1SUgZrtUamINmjU8ifX4baVwjj%2B1x6sXjoQ54v%2BUFT10G4LCZ3l24Vo1Mrym2g7%2BEK%2F8M5g22NJxo7KqbQltACCB4Ft5J1KHu%2BGq5NG2M%2FVWkDL0KgjhTOGnHbOHf2vDFcB1S840VYt5poUi5SPkKTv0sc1bCynuwaYG316fZ2E8lAVc0RaNJYCpkHSkyAZD9nR%2BdXQ5QnsQd5Q9LaUW2Xwbn7vw1pTfT7mtRh4faZAH3PGdnS2hG9yTrrJwGlLT2TO3aR2QLM6VlN0%2BBa2PWp%2FVOV7QM5h1ooMLid270GOqUBd4NCKs9fhAy6YeIDV1gfoG8kkFjsvEMvMyL37NEbFdaYA%2F5hlSI636OlAKhyLERl1qML5jlKNJt6Kqfc5mLiOqQsPnLGfB07qlapqkg3v2AevL3TdASmYz3u%2Boo1PNY5bx49QQsFKsIlUdlWxMp5jOBwU6WPe7N%2BNNIu54W9HQKzDa76JQGNQf3Hkuj3zC%2BaLFe8ykXuD2x2q6iQkH6P%2Bop0xvnV&X-Amz-Signature=ee9fbe4f964382180651bba8aac6d60d8207a2632ec241dbe93855642ccbfdfe&X-Amz-SignedHeaders=host&x-id=GetObject)",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8130-b42b-eef5afbd1d00",
        "parent": "",
        "children": []
      },
      {
        "type": "heading_1",
        "blockId": "17d2297f-7a72-810e-81f8-fd8c46d914fc",
        "parent": "# 進捗アンケート",
        "children": []
      },
      {
        "type": "divider",
        "blockId": "17d2297f-7a72-814d-af77-e20d8d795785",
        "parent": "---",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8178-a1ca-e8e68596c318",
        "parent": "練習問題１が終了した人は、以下のGoogleフォームに回答してください。",
        "children": []
      },
      {
        "type": "synced_block",
        "blockId": "17d2297f-7a72-81d7-9178-e20b45c00942",
        "parent": "",
        "children": []
      },
      {
        "type": "quote",
        "blockId": "17d2297f-7a72-81cc-a731-e64ee8088e36",
        "parent": "> ",
        "children": [
          {
            "type": "bookmark",
            "blockId": "17d2297f-7a72-8119-a732-eda539745add",
            "parent": "[bookmark](https://forms.gle/uCzSssAoLUihc8QM8)",
            "children": []
          },
          {
            "type": "paragraph",
            "blockId": "17d2297f-7a72-81f7-a09e-d7e7c49b10d3",
            "parent": "",
            "children": []
          }
        ]
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81b3-b5ca-c46997ab8e0c",
        "parent": "",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81bb-9508-e369faea6d3a",
        "parent": "",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8180-9c1e-e97fd376d551",
        "parent": "",
        "children": []
      }
    ]
  },
  {
    "type": "child_page",
    "blockId": "17d2297f-7a72-8033-8fb1-cde44ccb7db5",
    "parent": "## 5. 入力",
    "children": [
      {
        "type": "paragraph",
        "blockId": "16398c80-a7db-4395-985d-f860619c40ce",
        "parent": "[前回(練習問題1)](/17d2297f7a7280ee83ede549b65c3f3b)",
        "children": []
      },
      {
        "type": "heading_1",
        "blockId": "56520ed0-9fc1-4c87-a5db-5aed350353c3",
        "parent": "# input関数",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "29d85291-4a13-4610-b3fc-072492ee9de3",
        "parent": "これまではprint関数を使って数値データなどの出力を行っていましたが、今回はプログラムに対してデータを入力する方法を学びましょう。プログラムに対してデータを入力する方法を身につければ…",
        "children": []
      },
      {
        "type": "image",
        "blockId": "ddac90a4-2622-4f35-99a2-9058829e8e9f",
        "parent": "![%E5%85%A5%E5%8A%9B1.jpg](https://prod-files-secure.s3.us-west-2.amazonaws.com/f9e367dd-1db7-428f-a2ed-c68a46952d5a/7458d6e8-89ef-467e-beef-8657b4069320/%E5%85%A5%E5%8A%9B1.jpg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB4666IE7OEB2%2F20250220%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250220T065935Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEI%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQD5NkREqs2g1CYPUdvRRZ8cXO4crb3cQY9juS9n8TLYHAIgOv0ylpWFJlJV%2F2bPjlcrH2AJGSpfK15ycjY%2Be2%2BvwAIqiAQIuP%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARAAGgw2Mzc0MjMxODM4MDUiDOm6DbasXR8kSCGIFSrcA7WxI5ZmXeRGmrpM7cisGqV1Mg7D5wgmKqvCklocjHXJyX7%2BHs5cj2XW7euseKRzhJEacg7gm6jSHTAK3c1g6BQwDssxtyS%2BPEAl%2BoaTWSP1u%2BAKLMM%2F%2BdpAlFfC3%2F3Zic8snEfq20Sm5ucmd8y1UsiZ49%2B9OWjBcZ2oFzWDhplWRe1ohpvxWkJtkrfoTQ%2FM5y1P%2FIxjgu6UgxVqsNndI24ss0iMuuXYk%2Bn2jB8VkBcFVx8ZWj13EIowLClqXJFVRvjAbhiiJ6Q5gy5IKkdnZ%2BkJsjHD7oECaJa8xojP3AuI0pLitWQd2pTf%2F%2BGYzHJusd0urRljwtoNyr%2FTwgSRI7cfs1WfpT3eXGWw53skpBxzJ6egfBamjQexl842875O2FVTZPepGqMgX4KJrgV0HnCpTR4F6Ps8VO%2Fw2%2BNDH5jYpUQYU9yA0ef6ib9EqKCBTYmgOk%2BzqLoKG%2Bev9g7Z6SOLLzK4O%2B7u1TNrWaz0fF%2Bm2v6uCjGIutmDKwAWrrMiAfEbqxXBWv7dvxi%2Fc8JUEpr3pzD8JBiK7TEnHPl4jEHbvCnqBCG8LxCnSUgAhlxzQSWck4fJnkYCOjJy3xuI0%2FIBUAIdqO71Flyt3Iwd9CHy1tD%2Bq7ba3D4jjckoMMmc270GOqUBfWUjl2nKsrOwDIW5anY0xSV5kfTuGBA%2FnhRbkWjRlnhI3TlLtakYWf4VvW4P5f2J3iNmXaX7ZlTmuQp7hkT0rUsUu3ivLDfP0lXb3JENeUWZ3tZmxIDYggOsCH9BuKjix18%2BCj6JEV21DXS%2FdJFKh37DEwrdRai39M1OVQjGezYWXeM1ykj2IIbvb6lAWcr4GeY16LnPXZI8Ni9YNsIGo4x1fvtj&X-Amz-Signature=aef476f94094257e9e8a5f021a69f77b10d0a390baa93b49aa0d0b295e872570&X-Amz-SignedHeaders=host&x-id=GetObject)",
        "children": []
      },
      {
        "type": "image",
        "blockId": "17b18dca-9e23-4e77-96d2-9e165b6cf402",
        "parent": "![%E5%85%A5%E5%8A%9B2.jpg](https://prod-files-secure.s3.us-west-2.amazonaws.com/f9e367dd-1db7-428f-a2ed-c68a46952d5a/d5da8bfa-36c7-41c4-b7e1-02d780cce0ea/%E5%85%A5%E5%8A%9B2.jpg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB4666IE7OEB2%2F20250220%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250220T065935Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEI%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQD5NkREqs2g1CYPUdvRRZ8cXO4crb3cQY9juS9n8TLYHAIgOv0ylpWFJlJV%2F2bPjlcrH2AJGSpfK15ycjY%2Be2%2BvwAIqiAQIuP%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARAAGgw2Mzc0MjMxODM4MDUiDOm6DbasXR8kSCGIFSrcA7WxI5ZmXeRGmrpM7cisGqV1Mg7D5wgmKqvCklocjHXJyX7%2BHs5cj2XW7euseKRzhJEacg7gm6jSHTAK3c1g6BQwDssxtyS%2BPEAl%2BoaTWSP1u%2BAKLMM%2F%2BdpAlFfC3%2F3Zic8snEfq20Sm5ucmd8y1UsiZ49%2B9OWjBcZ2oFzWDhplWRe1ohpvxWkJtkrfoTQ%2FM5y1P%2FIxjgu6UgxVqsNndI24ss0iMuuXYk%2Bn2jB8VkBcFVx8ZWj13EIowLClqXJFVRvjAbhiiJ6Q5gy5IKkdnZ%2BkJsjHD7oECaJa8xojP3AuI0pLitWQd2pTf%2F%2BGYzHJusd0urRljwtoNyr%2FTwgSRI7cfs1WfpT3eXGWw53skpBxzJ6egfBamjQexl842875O2FVTZPepGqMgX4KJrgV0HnCpTR4F6Ps8VO%2Fw2%2BNDH5jYpUQYU9yA0ef6ib9EqKCBTYmgOk%2BzqLoKG%2Bev9g7Z6SOLLzK4O%2B7u1TNrWaz0fF%2Bm2v6uCjGIutmDKwAWrrMiAfEbqxXBWv7dvxi%2Fc8JUEpr3pzD8JBiK7TEnHPl4jEHbvCnqBCG8LxCnSUgAhlxzQSWck4fJnkYCOjJy3xuI0%2FIBUAIdqO71Flyt3Iwd9CHy1tD%2Bq7ba3D4jjckoMMmc270GOqUBfWUjl2nKsrOwDIW5anY0xSV5kfTuGBA%2FnhRbkWjRlnhI3TlLtakYWf4VvW4P5f2J3iNmXaX7ZlTmuQp7hkT0rUsUu3ivLDfP0lXb3JENeUWZ3tZmxIDYggOsCH9BuKjix18%2BCj6JEV21DXS%2FdJFKh37DEwrdRai39M1OVQjGezYWXeM1ykj2IIbvb6lAWcr4GeY16LnPXZI8Ni9YNsIGo4x1fvtj&X-Amz-Signature=f1efedefd572657b9ed9cd72cd1f84ceee036a70130f8efd248fd53fef83451b&X-Amz-SignedHeaders=host&x-id=GetObject)",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "22f8b7b7-d967-433e-bccd-f12eda258593",
        "parent": "このような、ユーザーの入力に応じて結果が異なるプログラムを作ることができます。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "7b08d8d3-bbe1-4c93-800b-c4237998e224",
        "parent": "このようなユーザーに入力を求めるプログラムを作るには、**`input`****関数**を使用します。`input`関数の使い方は以下に示す通りです。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "ddc02ef7-2b93-4d7f-971a-1c9a1b159306",
        "parent": "```python\n入力されたデータを格納したい変数 = input(”画面上に表示したい文章”)\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "d0e74562-221c-42a6-bc9e-cce8d0f47b4c",
        "parent": "例えば、以下のようなプログラムを書けば、画面上には「あなたの名前を入力してください：」と表示され、それに従ってユーザーが入力した内容が変数`name`に格納されます。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "63121a61-1b57-4449-87c4-d9ed6777bea0",
        "parent": "```python\nname = input(\"あなたの名前を入力してください：\")\n```",
        "children": []
      },
      {
        "type": "image",
        "blockId": "4ea82bce-8f19-4556-823d-d296eba270e4",
        "parent": "![%E5%85%A5%E5%8A%9B%E3%81%AE%E4%BB%95%E7%B5%84%E3%81%BF.jpg](https://prod-files-secure.s3.us-west-2.amazonaws.com/f9e367dd-1db7-428f-a2ed-c68a46952d5a/fdbf8ef7-390a-4611-b906-c58a3da2943d/%E5%85%A5%E5%8A%9B%E3%81%AE%E4%BB%95%E7%B5%84%E3%81%BF.jpg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB4666IE7OEB2%2F20250220%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250220T065935Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEI%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQD5NkREqs2g1CYPUdvRRZ8cXO4crb3cQY9juS9n8TLYHAIgOv0ylpWFJlJV%2F2bPjlcrH2AJGSpfK15ycjY%2Be2%2BvwAIqiAQIuP%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARAAGgw2Mzc0MjMxODM4MDUiDOm6DbasXR8kSCGIFSrcA7WxI5ZmXeRGmrpM7cisGqV1Mg7D5wgmKqvCklocjHXJyX7%2BHs5cj2XW7euseKRzhJEacg7gm6jSHTAK3c1g6BQwDssxtyS%2BPEAl%2BoaTWSP1u%2BAKLMM%2F%2BdpAlFfC3%2F3Zic8snEfq20Sm5ucmd8y1UsiZ49%2B9OWjBcZ2oFzWDhplWRe1ohpvxWkJtkrfoTQ%2FM5y1P%2FIxjgu6UgxVqsNndI24ss0iMuuXYk%2Bn2jB8VkBcFVx8ZWj13EIowLClqXJFVRvjAbhiiJ6Q5gy5IKkdnZ%2BkJsjHD7oECaJa8xojP3AuI0pLitWQd2pTf%2F%2BGYzHJusd0urRljwtoNyr%2FTwgSRI7cfs1WfpT3eXGWw53skpBxzJ6egfBamjQexl842875O2FVTZPepGqMgX4KJrgV0HnCpTR4F6Ps8VO%2Fw2%2BNDH5jYpUQYU9yA0ef6ib9EqKCBTYmgOk%2BzqLoKG%2Bev9g7Z6SOLLzK4O%2B7u1TNrWaz0fF%2Bm2v6uCjGIutmDKwAWrrMiAfEbqxXBWv7dvxi%2Fc8JUEpr3pzD8JBiK7TEnHPl4jEHbvCnqBCG8LxCnSUgAhlxzQSWck4fJnkYCOjJy3xuI0%2FIBUAIdqO71Flyt3Iwd9CHy1tD%2Bq7ba3D4jjckoMMmc270GOqUBfWUjl2nKsrOwDIW5anY0xSV5kfTuGBA%2FnhRbkWjRlnhI3TlLtakYWf4VvW4P5f2J3iNmXaX7ZlTmuQp7hkT0rUsUu3ivLDfP0lXb3JENeUWZ3tZmxIDYggOsCH9BuKjix18%2BCj6JEV21DXS%2FdJFKh37DEwrdRai39M1OVQjGezYWXeM1ykj2IIbvb6lAWcr4GeY16LnPXZI8Ni9YNsIGo4x1fvtj&X-Amz-Signature=77adfe5c27387155d9f5bf0510cad35f0dfbed859dac656602b5adf34c17eae7&X-Amz-SignedHeaders=host&x-id=GetObject)",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "6eb712a3-d1ed-4ed8-9fef-aa7875dfd5b3",
        "parent": "この変数`name`を以下のようにprint関数で出力すれば、ユーザーの入力に応じて結果が変わるプログラムの完成です。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "f1175954-8e29-4a1d-aeef-00152e6aca33",
        "parent": "```python\nprint(\"Hello\", name, \"!\")\n```",
        "children": []
      },
      {
        "type": "heading_1",
        "blockId": "28ef8468-e03b-44e6-b5c2-7014da4f1668",
        "parent": "# 数字を入力する場合",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "8cdd45d2-12c7-4c03-a9ab-8b2e0fc0b36e",
        "parent": "最初の例に出した三角形の面積を求めるプログラムを素直に書くと、このようなコードになると思います。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "1f872c23-025f-4258-94e1-42e38d050eba",
        "parent": "```python\nprint(\"三角形の面積を求めます\")\na = input(\"高さを入力：\")\nb = input(\"底辺を入力：\")\nprint(\"高さ\", a, \"、底辺\", b, \"の三角形の面積は\", a * b / 2)\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "7db6385c-1736-4b41-8fb5-b0758d5f7a2c",
        "parent": "しかし、このコードを実行すると、",
        "children": []
      },
      {
        "type": "image",
        "blockId": "42e07785-aedb-49b2-8e15-da9910372ee6",
        "parent": "![%E5%85%A5%E5%8A%9B%E5%9E%8B%E3%82%A8%E3%83%A9%E3%83%BC.jpg](https://prod-files-secure.s3.us-west-2.amazonaws.com/f9e367dd-1db7-428f-a2ed-c68a46952d5a/715288c7-6928-4acc-adae-d7c4ff4782a8/%E5%85%A5%E5%8A%9B%E5%9E%8B%E3%82%A8%E3%83%A9%E3%83%BC.jpg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB4666IE7OEB2%2F20250220%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250220T065935Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEI%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQD5NkREqs2g1CYPUdvRRZ8cXO4crb3cQY9juS9n8TLYHAIgOv0ylpWFJlJV%2F2bPjlcrH2AJGSpfK15ycjY%2Be2%2BvwAIqiAQIuP%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARAAGgw2Mzc0MjMxODM4MDUiDOm6DbasXR8kSCGIFSrcA7WxI5ZmXeRGmrpM7cisGqV1Mg7D5wgmKqvCklocjHXJyX7%2BHs5cj2XW7euseKRzhJEacg7gm6jSHTAK3c1g6BQwDssxtyS%2BPEAl%2BoaTWSP1u%2BAKLMM%2F%2BdpAlFfC3%2F3Zic8snEfq20Sm5ucmd8y1UsiZ49%2B9OWjBcZ2oFzWDhplWRe1ohpvxWkJtkrfoTQ%2FM5y1P%2FIxjgu6UgxVqsNndI24ss0iMuuXYk%2Bn2jB8VkBcFVx8ZWj13EIowLClqXJFVRvjAbhiiJ6Q5gy5IKkdnZ%2BkJsjHD7oECaJa8xojP3AuI0pLitWQd2pTf%2F%2BGYzHJusd0urRljwtoNyr%2FTwgSRI7cfs1WfpT3eXGWw53skpBxzJ6egfBamjQexl842875O2FVTZPepGqMgX4KJrgV0HnCpTR4F6Ps8VO%2Fw2%2BNDH5jYpUQYU9yA0ef6ib9EqKCBTYmgOk%2BzqLoKG%2Bev9g7Z6SOLLzK4O%2B7u1TNrWaz0fF%2Bm2v6uCjGIutmDKwAWrrMiAfEbqxXBWv7dvxi%2Fc8JUEpr3pzD8JBiK7TEnHPl4jEHbvCnqBCG8LxCnSUgAhlxzQSWck4fJnkYCOjJy3xuI0%2FIBUAIdqO71Flyt3Iwd9CHy1tD%2Bq7ba3D4jjckoMMmc270GOqUBfWUjl2nKsrOwDIW5anY0xSV5kfTuGBA%2FnhRbkWjRlnhI3TlLtakYWf4VvW4P5f2J3iNmXaX7ZlTmuQp7hkT0rUsUu3ivLDfP0lXb3JENeUWZ3tZmxIDYggOsCH9BuKjix18%2BCj6JEV21DXS%2FdJFKh37DEwrdRai39M1OVQjGezYWXeM1ykj2IIbvb6lAWcr4GeY16LnPXZI8Ni9YNsIGo4x1fvtj&X-Amz-Signature=57d92aceb9745001d5862100b9e53f12349a7013179db80f62c44597f2a9f24c&X-Amz-SignedHeaders=host&x-id=GetObject)",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "37f68a61-a098-4c26-9ac3-7ccbc439f42c",
        "parent": "このようにエラーが出てしまいました。このエラーは[4章で扱ったもの](/05fefe2de1e343eeb4750b5df2bac620)とよく似ています。エラーを簡単に訳すと「文字列型（str型）同士の掛け算はできへんぞ」という感じです。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "f34973b2-8f52-42a9-88ac-86016181a088",
        "parent": "つまり、ユーザーに入力してもらった「6」と「4」という数字は、プログラム上では文字列として扱われてしまっています。[3章で紹介した](/31ad04b857fb46388369d068a12404b6)type関数を使って、変数`a`と`b`の型を確認してみましょう。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "83906c12-36f4-4162-a8a5-468e2b4a47de",
        "parent": "```python\nprint(\"三角形の面積を求めます\")\na = input(\"高さを入力：\")\nb = input(\"底辺を入力：\")\nprint(\"a:\", type(a))\nprint(\"b:\", type(b))\n```",
        "children": []
      },
      {
        "type": "image",
        "blockId": "eaffb0b7-c63c-4ef2-ae70-e02e8a41e2d6",
        "parent": "![%E5%85%A5%E5%8A%9B%E5%9E%8B%E7%A2%BA%E8%AA%8D.jpg](https://prod-files-secure.s3.us-west-2.amazonaws.com/f9e367dd-1db7-428f-a2ed-c68a46952d5a/253875d8-0603-42ec-bcb0-324731363fbf/%E5%85%A5%E5%8A%9B%E5%9E%8B%E7%A2%BA%E8%AA%8D.jpg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB4666IE7OEB2%2F20250220%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250220T065935Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEI%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQD5NkREqs2g1CYPUdvRRZ8cXO4crb3cQY9juS9n8TLYHAIgOv0ylpWFJlJV%2F2bPjlcrH2AJGSpfK15ycjY%2Be2%2BvwAIqiAQIuP%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARAAGgw2Mzc0MjMxODM4MDUiDOm6DbasXR8kSCGIFSrcA7WxI5ZmXeRGmrpM7cisGqV1Mg7D5wgmKqvCklocjHXJyX7%2BHs5cj2XW7euseKRzhJEacg7gm6jSHTAK3c1g6BQwDssxtyS%2BPEAl%2BoaTWSP1u%2BAKLMM%2F%2BdpAlFfC3%2F3Zic8snEfq20Sm5ucmd8y1UsiZ49%2B9OWjBcZ2oFzWDhplWRe1ohpvxWkJtkrfoTQ%2FM5y1P%2FIxjgu6UgxVqsNndI24ss0iMuuXYk%2Bn2jB8VkBcFVx8ZWj13EIowLClqXJFVRvjAbhiiJ6Q5gy5IKkdnZ%2BkJsjHD7oECaJa8xojP3AuI0pLitWQd2pTf%2F%2BGYzHJusd0urRljwtoNyr%2FTwgSRI7cfs1WfpT3eXGWw53skpBxzJ6egfBamjQexl842875O2FVTZPepGqMgX4KJrgV0HnCpTR4F6Ps8VO%2Fw2%2BNDH5jYpUQYU9yA0ef6ib9EqKCBTYmgOk%2BzqLoKG%2Bev9g7Z6SOLLzK4O%2B7u1TNrWaz0fF%2Bm2v6uCjGIutmDKwAWrrMiAfEbqxXBWv7dvxi%2Fc8JUEpr3pzD8JBiK7TEnHPl4jEHbvCnqBCG8LxCnSUgAhlxzQSWck4fJnkYCOjJy3xuI0%2FIBUAIdqO71Flyt3Iwd9CHy1tD%2Bq7ba3D4jjckoMMmc270GOqUBfWUjl2nKsrOwDIW5anY0xSV5kfTuGBA%2FnhRbkWjRlnhI3TlLtakYWf4VvW4P5f2J3iNmXaX7ZlTmuQp7hkT0rUsUu3ivLDfP0lXb3JENeUWZ3tZmxIDYggOsCH9BuKjix18%2BCj6JEV21DXS%2FdJFKh37DEwrdRai39M1OVQjGezYWXeM1ykj2IIbvb6lAWcr4GeY16LnPXZI8Ni9YNsIGo4x1fvtj&X-Amz-Signature=2a30ce3704c7ff8c07599751f89d4939e1bc9871897097e3712d691c8141889c&X-Amz-SignedHeaders=host&x-id=GetObject)",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "b16634ad-0f15-4eb7-80cb-56f9c5b71465",
        "parent": "このように、変数`a`と`b`が文字列型となっていることがわかります。**input関数で入力されたデータは、問答無用で文字列型として格納されてしまうのです。**",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "ef31022a-4a7a-427d-becb-995e9b5e4a58",
        "parent": "これを解決するには、文字列型の変数 を 整数型の変数 に変換する必要があります。これは **int関数** を使用することで実現可能です。**int関数** は続く`()`内の変数を整数型に変換することができる関数です。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "95975c47-891e-42c0-aa6a-380a80a5f063",
        "parent": "次のようなプログラムを実行してみましょう。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "9841170e-643e-444a-bebf-d9c5f036d1f7",
        "parent": "```python\na = \"5\"     #文字列として 5 を代入\nprint(type(a))  #a の型を確認\na = int(a)      #a を整数型に変換し、a に再代入\nprint(type(a))  #再度 a の型を確認\n```",
        "children": []
      },
      {
        "type": "callout",
        "blockId": "38e71367-1b94-4fa8-bf60-6ba56742f3d2",
        "parent": "> ☝ `int(a)`を実行するだけでは変換されないので、`a = int(a)`のように再代入する必要があるよ！",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "8de42a0c-b3c5-47d7-8d63-8667301b04f0",
        "parent": " 結果は次にようになり、**int関数** を使うことで文字列型であった変数`a`が整数型に変換されたことがわかります。この **int関数** を使用することで、先程のエラーを解決できます。このようにしてみましょう。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "546002ae-896e-42c4-9f00-9fc63c5cb1eb",
        "parent": "```python\nprint(\"三角形の面積を求めます\")\na = input(\"高さを入力：\")\nb = input(\"底辺を入力：\")\na = int(a)\nb = int(b)\nprint(\"高さ\", a, \"、底辺\", b, \"の三角形の面積は\", a * b / 2)\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "e7e6fb0e-f56b-405c-977b-d58621c48e92",
        "parent": "文字型として入力された変数を **int関数** によって整数型に変換したため、問題なくプログラムが実行できました。",
        "children": []
      },
      {
        "type": "image",
        "blockId": "98a8fda2-527c-4cf8-acce-0b1f7ec32b51",
        "parent": "![%E5%85%A5%E5%8A%9B2.jpg](https://prod-files-secure.s3.us-west-2.amazonaws.com/f9e367dd-1db7-428f-a2ed-c68a46952d5a/d5da8bfa-36c7-41c4-b7e1-02d780cce0ea/%E5%85%A5%E5%8A%9B2.jpg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB4666IE7OEB2%2F20250220%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250220T065935Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEI%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQD5NkREqs2g1CYPUdvRRZ8cXO4crb3cQY9juS9n8TLYHAIgOv0ylpWFJlJV%2F2bPjlcrH2AJGSpfK15ycjY%2Be2%2BvwAIqiAQIuP%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARAAGgw2Mzc0MjMxODM4MDUiDOm6DbasXR8kSCGIFSrcA7WxI5ZmXeRGmrpM7cisGqV1Mg7D5wgmKqvCklocjHXJyX7%2BHs5cj2XW7euseKRzhJEacg7gm6jSHTAK3c1g6BQwDssxtyS%2BPEAl%2BoaTWSP1u%2BAKLMM%2F%2BdpAlFfC3%2F3Zic8snEfq20Sm5ucmd8y1UsiZ49%2B9OWjBcZ2oFzWDhplWRe1ohpvxWkJtkrfoTQ%2FM5y1P%2FIxjgu6UgxVqsNndI24ss0iMuuXYk%2Bn2jB8VkBcFVx8ZWj13EIowLClqXJFVRvjAbhiiJ6Q5gy5IKkdnZ%2BkJsjHD7oECaJa8xojP3AuI0pLitWQd2pTf%2F%2BGYzHJusd0urRljwtoNyr%2FTwgSRI7cfs1WfpT3eXGWw53skpBxzJ6egfBamjQexl842875O2FVTZPepGqMgX4KJrgV0HnCpTR4F6Ps8VO%2Fw2%2BNDH5jYpUQYU9yA0ef6ib9EqKCBTYmgOk%2BzqLoKG%2Bev9g7Z6SOLLzK4O%2B7u1TNrWaz0fF%2Bm2v6uCjGIutmDKwAWrrMiAfEbqxXBWv7dvxi%2Fc8JUEpr3pzD8JBiK7TEnHPl4jEHbvCnqBCG8LxCnSUgAhlxzQSWck4fJnkYCOjJy3xuI0%2FIBUAIdqO71Flyt3Iwd9CHy1tD%2Bq7ba3D4jjckoMMmc270GOqUBfWUjl2nKsrOwDIW5anY0xSV5kfTuGBA%2FnhRbkWjRlnhI3TlLtakYWf4VvW4P5f2J3iNmXaX7ZlTmuQp7hkT0rUsUu3ivLDfP0lXb3JENeUWZ3tZmxIDYggOsCH9BuKjix18%2BCj6JEV21DXS%2FdJFKh37DEwrdRai39M1OVQjGezYWXeM1ykj2IIbvb6lAWcr4GeY16LnPXZI8Ni9YNsIGo4x1fvtj&X-Amz-Signature=f1efedefd572657b9ed9cd72cd1f84ceee036a70130f8efd248fd53fef83451b&X-Amz-SignedHeaders=host&x-id=GetObject)",
        "children": []
      },
      {
        "type": "heading_1",
        "blockId": "d2e94f48-9b7f-473a-a863-8b3d806a380a",
        "parent": "# その他の変換関数",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "9e862e52-6328-4866-adc6-47941b5129b0",
        "parent": "Pythonには、int関数以外にも変数の型を変換するための関数が用意されています。それらをいくつか紹介します。",
        "children": []
      },
      {
        "type": "table",
        "blockId": "876e8987-4929-45a3-a283-2832f6027363",
        "parent": "| 関数名     | 内容                  | 使用例        |\n| ------- | ------------------- | ---------- |\n| int関数   | 実数型や文字列型を**整数型**に変換 | `int(a)`   |\n| float関数 | 整数型や文字列型を**実数型**に変換 | `float(a)` |\n| str関数   | 整数型や実数型を**文字列型**に変換 | `str(a)`   |",
        "children": [
          {
            "type": "table_row",
            "blockId": "dcbfd7c0-4c1b-4a12-8a58-c6a16a2bf6a0",
            "parent": "",
            "children": []
          },
          {
            "type": "table_row",
            "blockId": "5d76aaab-09da-4e0c-98f2-b2f9a8428170",
            "parent": "",
            "children": []
          },
          {
            "type": "table_row",
            "blockId": "a7ffccbc-6857-4019-87db-32e47fbbc359",
            "parent": "",
            "children": []
          },
          {
            "type": "table_row",
            "blockId": "5d58c34c-a2ad-4130-8a13-cd1c167a3048",
            "parent": "",
            "children": []
          }
        ]
      },
      {
        "type": "paragraph",
        "blockId": "e2d65467-7beb-41a4-b164-5310024f98ee",
        "parent": "",
        "children": []
      }
    ]
  },
  {
    "type": "child_page",
    "blockId": "17d2297f-7a72-8078-bc32-eb25ec2790f1",
    "parent": "## 6. 条件分岐（if文）",
    "children": [
      {
        "type": "paragraph",
        "blockId": "de10f122-fc82-4eb0-8817-f97e6e78020a",
        "parent": "[前回(5.入力)](/17d2297f7a7280338fb1cde44ccb7db5)",
        "children": []
      },
      {
        "type": "heading_1",
        "blockId": "f7410226-8b59-45bc-ae3b-7da1f772d2dd",
        "parent": "# if文の基本",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "3a6317b8-0c03-4ab7-aede-d1333f9a70ee",
        "parent": "今回はプログラミングをするうえで重要な概念となる**条件分岐**について学んでいきます。**条件分岐**とは、プログラム内で特定の条件を満たすか否かで、処理を変えるための機能です。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "ade04966-c351-4b0c-9345-2d1de0861fb9",
        "parent": "たとえば、テストの点数が70点以上の場合は「合格」、そうでない場合は「不合格」と表示する、などを実現できます。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "413d5233-d8d8-4d9f-81de-411e54a4f09b",
        "parent": "Pythonで条件分岐を実現するには、 **if文** と呼ばれる構文を使用します。**if文** は次のように書くことができます。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "1fda142a-1b03-49ee-8f1f-c6765d2b6bb8",
        "parent": "```python\nif 条件式:\n    #ここに、条件式が成立するときの処理を書く\nelse:\n    #ここに、条件式が成立しなかったときの処理を書く\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "d90bd9c2-b6a1-4ba0-8ea4-a697f8909259",
        "parent": "`if`の後ろにある「条件式」 には大なり記号（`>`）や小なり記号（`<`）、イコール（`=`）などを使用した条件を示す式を書きます。例えば、「点数（`score`）が70点以上」という条件を示すには`score >= 70`と書きます。ここでの`>=`は数学での「≧」と同じ意味です。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "d567630f-29f8-4bff-8988-e111d92bffe3",
        "parent": "上に書いたような、点数によって合否を判定するプログラムを作るには、以下のように書きます。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "13d43f9a-4035-48ba-8307-995366d8ab7f",
        "parent": "```python\nscore = 75\nprint(\"あなたは\", score, \"点です\")\nif score >= 70:\n    print(\"合格です\")\nelse:\n    print(\"不合格です\")\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "c5f1d643-05d3-414c-89d9-432f310f08a3",
        "parent": "実行結果は以下のようになります。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "862abfec-7301-4eb7-bd52-077df61626de",
        "parent": "```text\n＜出力結果＞\nあなたは 75 点です\n合格です\n```",
        "children": []
      },
      {
        "type": "callout",
        "blockId": "eea74454-458a-4fae-800c-eb0563a7ac41",
        "parent": "> ⚠️ 今回から実行結果の表示方法を、画像からテキストに変更していますが、お気になさらず。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "d1f700e1-4684-4fdc-8a2e-3aee037ce5f9",
        "parent": "変数`score`には`75`が格納されているため、条件式`score >= 70`が成立し、`print(”合格です”)`が実行されています。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "4964682f-cadf-4b21-81eb-ebd27c2a73b4",
        "parent": "では、変数`score`に格納する数字を70未満に変更してみましょう。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "554b066c-f358-4334-8f23-a9d9276b6bee",
        "parent": "```python\nscore = 60\nprint(\"あなたは\", score, \"点です\")\nif score >= 70:\n    print(\"合格です\")\nelse:\n    print(\"不合格です\")\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "83cbebd5-4313-4e94-a971-cdedb6e754ab",
        "parent": "実行結果は以下のようになります。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "351a4587-84ba-4bee-8448-d84d549cc64d",
        "parent": "```text\n＜出力結果＞\nあなたは 60 点です\n不合格ですSS\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "b10aff28-4759-4b0c-8d01-c30b1901e919",
        "parent": "変数`score`に格納されている数値が`60`で`score >= 70`という条件式を満たさなかったため、`print(”不合格です”)`が実行されました。",
        "children": []
      },
      {
        "type": "callout",
        "blockId": "00ac19df-daa1-45f4-98a6-1ef08392ef63",
        "parent": "> ❗ **プログラミングでは、if文などで条件式が成立することを真（True）、成立しないことを偽（False）と呼びます。**",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "b3347086-ab16-4812-ae37-e624dfcd60de",
        "parent": "また、if文は以下のように`else`を省略して、条件式が真の場合のみ特定の処理を実行することもできます。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "e2c5f57a-b8e9-4473-b172-195bd86e6da0",
        "parent": "```python\nscore = 80\nprint(\"あなたは\", score, \"点です\")\nif score >= 70:\n    print(\"あなたは合格です\")\n#score が70未満のときは何も行われない\n```",
        "children": []
      },
      {
        "type": "heading_1",
        "blockId": "c015a5cb-95b0-4f56-a94f-18a9641b4ca0",
        "parent": "# 比較演算子",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "cf9a7f93-a414-4cb8-8445-af9244bd0ba5",
        "parent": "if文で使用する条件式は、`>=`のような記号を用いて表します。これを比較演算子 と呼びます。比較演算子にはいくつか種類があるため、以下の一覧表で紹介します。",
        "children": []
      },
      {
        "type": "table",
        "blockId": "9e42fad2-5eae-4f76-b689-558863b780da",
        "parent": "| 比較演算子 | 使用例      | 説明           | 備考        |\n| ----- | -------- | ------------ | --------- |\n| `>`   | `x > y`  | xがyより大きい（超過） |           |\n| `<`   | `x < y`  | xがyより小さい（未満） |           |\n| `>=`  | `x >= y` | xがy以上        | 数学の ≧ と一緒 |\n| `<=`  | `x <= y` | xがy以下        | 大学の ≦ と同じ |\n| `==`  | `x == y` | xとyが等しい      | 数学の = と一緒 |\n| `!=`  | `x != y` | xとyが等しくない    | 数学の ≠ と一緒 |",
        "children": [
          {
            "type": "table_row",
            "blockId": "c363e400-f8ea-4999-9f5f-9178dfcfd986",
            "parent": "",
            "children": []
          },
          {
            "type": "table_row",
            "blockId": "5bb59221-a3bc-4016-817e-e90b0ee3baec",
            "parent": "",
            "children": []
          },
          {
            "type": "table_row",
            "blockId": "602a7988-59e5-46bb-b8cb-479964971c2f",
            "parent": "",
            "children": []
          },
          {
            "type": "table_row",
            "blockId": "22c5dd32-8d27-4a2c-9ac3-ff28d6f40fd2",
            "parent": "",
            "children": []
          },
          {
            "type": "table_row",
            "blockId": "4bc05fd9-d5ed-4168-816a-125675c658c3",
            "parent": "",
            "children": []
          },
          {
            "type": "table_row",
            "blockId": "359820f2-d327-420a-add1-27a1f7fe78ea",
            "parent": "",
            "children": []
          },
          {
            "type": "table_row",
            "blockId": "4389ac0a-493c-4a55-884a-43c369272f04",
            "parent": "",
            "children": []
          }
        ]
      },
      {
        "type": "heading_1",
        "blockId": "1f0bb99a-5ed2-42fb-8edf-fac2ff3a50ea",
        "parent": "# elif",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "3c5d1c65-b98a-40b8-bf0d-cca490a511da",
        "parent": "if文では「**もし〜ならば〇〇する**」という処理でしたが、**elif文** を使用することで「**それ以外で、もしーならば△△する**」という処理も行うことができます。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "646a8170-0ed8-45a6-9d27-3daf35ae41a4",
        "parent": "書き方は、`if`と`else`の間に`elif 条件式`を追加することで、複数の条件を順にチェックし、最初に条件式が真の部分の処理を実行します。以下のコードが記述例です。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "ba90500f-6236-4cf8-9de2-62878e2cd74d",
        "parent": "```python\nscore = 75\nprint(\"あなたは\", score, \"点です\")\nif score >= 90:\n    print(\"あなたの評価はSです\")\nelif score >= 80:\n    print(\"あなたの評価はAです\")\nelif score >= 70:\n    print(\"あなたの評価はBです\")\nelif score >= 60:\n    print(\"あなたの評価はCです\")\nelse:\n    print(\"あなたの評価はDです\")\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "78604fd8-cee6-4233-a769-6314869d4d6e",
        "parent": "先程のプログラムは点数から合否を判定することしかできませんでしたが、`elif`を使用することで、点数に対して多段階の評価を判定することができます。実行結果は以下のようになります。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "c40adb17-4bde-49a0-a02d-a573a95181d6",
        "parent": "```text\n＜出力結果＞\nあなたは 75 点です\nあなたの評価はBです\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "4ea95f02-b7f1-48cd-b170-af722efb4069",
        "parent": "プログラムの流れを簡単に解説します。",
        "children": []
      },
      {
        "type": "numbered_list_item",
        "blockId": "908e21ee-cad8-40f6-9547-586ad455a1a8",
        "parent": "1. 最初の`if`の条件式が評価され、`score`の値が90以上かどうかをチェックする。`score`の値は75なので、この条件は**偽**となる。",
        "children": []
      },
      {
        "type": "numbered_list_item",
        "blockId": "d95dac3b-7507-49ec-96f8-9223e26961c2",
        "parent": "2. 次に`elif`の条件式が評価され、`score`の値が80以上かどうかをチェックする。この場合、`score`の値は75なので、この条件も**偽**となる。",
        "children": []
      },
      {
        "type": "numbered_list_item",
        "blockId": "912dce03-521c-48de-b36c-c617848d1962",
        "parent": "3. さらに次の`elif`の条件式が評価され、`score`の値が70以上かどうかをチェックする。この場合、`score`の値は75なので、この条件は**真**となり、「あなたの評価はBです」と出力される。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "a2750b98-9674-49b3-ac9c-1245dc7f9281",
        "parent": "このように`if`, `elif`, `else`を組み合わせることで、より複雑な条件分岐を実現できます。",
        "children": []
      },
      {
        "type": "toggle",
        "blockId": "d4f966f5-ee2b-4c1d-ae90-86dfd3b142f5",
        "parent": "ifだけをたくさん使えば同じことできんじゃね？",
        "children": [
          {
            "type": "paragraph",
            "blockId": "b3bc7c84-b7db-4a4d-8dc5-bb28cfb5d3ec",
            "parent": "と思った人もいるかもしれません。あなたが思い浮かべたコードは、このようなものではないでしょうか？",
            "children": []
          },
          {
            "type": "code",
            "blockId": "3254d6dc-74f4-4bc0-9a12-d9bbad93661b",
            "parent": "```python\nscore = 75\nprint(\"あなたは\", score, \"点です\")\nif score >= 90:\n    print(\"あなたの評価はSです\")\nif score >= 80:\n    print(\"あなたの評価はAです\")\nif score >= 70:\n    print(\"あなたの評価はBです\")\nif score >= 60:\n    print(\"あなたの評価はCです\")\nif score >= 0:\n    print(\"あなたの評価はDです\")\n```",
            "children": []
          },
          {
            "type": "paragraph",
            "blockId": "c91bc3f2-af2a-4831-b231-02b77984d070",
            "parent": "一見、elifを使用したプログラムと同様の結果が得られるように見えるかもしれません。では、このコードの実行結果を見てみましょう。",
            "children": []
          },
          {
            "type": "code",
            "blockId": "d42c16c9-cd3a-4f0e-87df-11ff52aaa78e",
            "parent": "```python\n＜出力結果＞\nあなたは 75 点です\nあなたの評価はBです\nあなたの評価はCです\nあなたの評価はDです\n```",
            "children": []
          },
          {
            "type": "paragraph",
            "blockId": "1af4ac8c-47ee-4b3a-a56e-715ce4c0a533",
            "parent": "「あなたの評価は…」が複数行出力されてしまいましたね。`if`のみのプログラムと、`elif`を使用したプログラム違いはここにあります。`if`のみのプログラムでは、`if`の条件式が真の処理がもれなく実行されてしまいます。対して`if`と`elif`を使用したプログラムは、一番上のifから条件式のチェックを始め、偽であった場合には次のelif、それも偽ならさらに次のelif…とチェックを進めていきます。そして、初めて真となった条件の処理だけを実行するのです。",
            "children": []
          },
          {
            "type": "code",
            "blockId": "2b3fbc8a-6224-4f84-aa2f-b6feafc7bf56",
            "parent": "```python\n#ifのみ\nscore = 75\nprint(\"あなたは\", score, \"点です\")\nif score >= 90:                   ←条件式が偽なので実行しない\n    print(\"あなたの評価はSです\")\nif score >= 80:                   ←条件式が偽なので実行しない\n    print(\"あなたの評価はAです\")\nif score >= 70:                   ←条件式が真なので実行\n    print(\"あなたの評価はBです\")\nif score >= 60:                   ←条件式が真なので実行\n    print(\"あなたの評価はCです\")\nif score >= 0:                    ←条件式が真なので実行\n    print(\"あなたの評価はDです\")\n```",
            "children": []
          },
          {
            "type": "code",
            "blockId": "16f5b3b5-e73a-4c70-a994-fc0d224cce7a",
            "parent": "```python\n#elifあり\nscore = 75\nprint(\"あなたは\", score, \"点です\")\nif score >= 90:                   ←条件式が偽なので次のelifへ\n    print(\"あなたの評価はSです\")\nelif score >= 80:                 ←条件式が偽なので次のelifへ\n    print(\"あなたの評価はAです\")\nelif score >= 70:                 ←条件式が真なので実行\n    print(\"あなたの評価はBです\")\nelif score >= 60:                 ←以降の条件式はチェックしない\n    print(\"あなたの評価はCです\")\nelse:\n    print(\"あなたの評価はDです\")\n```",
            "children": []
          }
        ]
      },
      {
        "type": "heading_1",
        "blockId": "6a768855-f64d-423d-99fc-adedc79df48f",
        "parent": "# bool型",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "3ad3bdc9-9583-4259-a9e0-0ed93d72c313",
        "parent": "ここでは、if文に関連して、[3章](/31ad04b857fb46388369d068a12404b6)で登場していないもう一つの「変数の型」を紹介します。それが **bool型** です。**bool型** とは真理値を格納するための型です。真理値とは、**True****（真）**または**False****（偽）**のいずれかを取る値のことです。（→[このサイトわかりやすい！](https://wa3.i-3-i.info/word16809.html)）",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "6f806c77-b4e3-4b1f-a0fa-f5669cfe5865",
        "parent": "例えば、このように定義できます。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "7a106725-642e-4df4-91f2-0c5be59e8960",
        "parent": "```python\nis_true = True\nis_false = False\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "dd468d43-b612-4678-834c-f6fc8fa92351",
        "parent": "if文は条件式だけでなく、このbool型の変数を使用しても記述することができます。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "3d86f5f7-141d-4b6e-8284-490c63066a1f",
        "parent": "```python\nis_true = True\nis_false = False\nif is_true:\n    print(\"これは真です\")\nif is_false:\n    print(\"これは偽です\")\n```",
        "children": []
      },
      {
        "type": "code",
        "blockId": "a7787e57-bf35-49c1-9c16-897fe09af862",
        "parent": "```text\n＜出力結果＞\nこれは真です\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "82492ea3-2920-435b-b243-8d4358fd2136",
        "parent": "実行結果を見ると、「これは真です」のみが出力されています。if文は、bool型の変数の中身が`True`の場合のみ処理を実行したことがわかります。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "535a5aea-575a-4bac-811a-e2e00d79b427",
        "parent": "また、bool型は比較演算子の結果としても得られます。たとえば、以下のようなコードを考えてみましょう。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "166a86a7-8461-4751-95c7-f42cdd496d9e",
        "parent": "```python\nx = 10\ny = 20\nflag = x < y  # xがyより小さいかどうかを比較した結果(True)を、flagに代入\nif flag:\n    print(\"xはyより小さいです\")\n```",
        "children": []
      },
      {
        "type": "code",
        "blockId": "ae3a64e8-f93c-4a5d-a3c4-0876b8560e2f",
        "parent": "```text\n＜出力結果＞\nxはyより小さいです\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "14c70d82-7b51-4536-8151-195d875173af",
        "parent": "この場合、`x < y`の結果は`True`となるため、「xはyより小さいです」と出力されました。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "41b811d0-f4ca-449a-83a0-aa121c3fd368",
        "parent": "",
        "children": [
          {
            "type": "paragraph",
            "blockId": "d7bfe967-7531-47d5-9f6c-325cb8882a6f",
            "parent": "",
            "children": []
          }
        ]
      }
    ]
  },
  {
    "type": "child_page",
    "blockId": "17d2297f-7a72-8083-965e-e7b2f91955cb",
    "parent": "## 練習問題2",
    "children": [
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-815a-84d0-cff1fc957a06",
        "parent": "[前回](/17d2297f7a728078bc32eb25ec2790f1)と[前々回](/17d2297f7a7280338fb1cde44ccb7db5)の内容の問題です。",
        "children": []
      },
      {
        "type": "heading_1",
        "blockId": "17d2297f-7a72-81d5-8378-dbd79c10228b",
        "parent": "# 問題1",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8172-8ddd-d3aaff82a324",
        "parent": "2つの値をキーボードから入力して、その値同士を足し算し、計算結果を出力するプログラムを作成してください。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-815e-8085-d3d6e095491f",
        "parent": "※プログラムは「prac2-1.py」として保存",
        "children": []
      },
      {
        "type": "heading_3",
        "blockId": "17d2297f-7a72-813e-880d-d1515d1a67ed",
        "parent": "### 期待する出力結果",
        "children": []
      },
      {
        "type": "code",
        "blockId": "17d2297f-7a72-81e2-92fb-c530cae39f75",
        "parent": "```text\n１つ目の値を入力してください:5\n２つ目の値を入力してください:9\n5 + 9 = 14 です。\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8104-87c0-f90326ec5a72",
        "parent": "hint: 5+9 = 59は文字列同士の足し算です。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8199-ace6-fb25d071e944",
        "parent": "",
        "children": []
      },
      {
        "type": "divider",
        "blockId": "17d2297f-7a72-8189-afad-de10ffc46b34",
        "parent": "---",
        "children": []
      },
      {
        "type": "heading_1",
        "blockId": "17d2297f-7a72-8148-a809-f92e65992a78",
        "parent": "# 問題2",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-818e-ac4d-cf39805bf3f8",
        "parent": "問題1のプログラムを再利用して、結果の値が100以上なら「100以上ですね。」、100未満なら「100未満ですね。」と出力するプログラムを作成してください。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81d5-a0d9-c1f12d8747a1",
        "parent": "※プログラムは「prac2-2.py」として保存",
        "children": []
      },
      {
        "type": "heading_3",
        "blockId": "17d2297f-7a72-81c9-a41b-cd13ab719c98",
        "parent": "### 期待する出力結果",
        "children": []
      },
      {
        "type": "code",
        "blockId": "17d2297f-7a72-81c0-8d7c-cec8b2a48c15",
        "parent": "```text\n１つ目の値を入力してください:50\n２つ目の値を入力してください:80\n50 + 80 = 130 です。\n100以上ですね。\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8165-8722-f97e28b27148",
        "parent": "",
        "children": []
      },
      {
        "type": "divider",
        "blockId": "17d2297f-7a72-81b0-88d0-dc4c98e73f3b",
        "parent": "---",
        "children": []
      },
      {
        "type": "heading_1",
        "blockId": "17d2297f-7a72-814c-b6dc-f3b48f9bdf70",
        "parent": "# 問題3",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-816d-8c96-da4bece3ab3b",
        "parent": "ユーザーから入力された正答率を、次の表に従って評価し、その評価を出力するプログラムを作成してください。入力された正答率が不正な場合（100%を超過や0%未満）は「不正な正答率です」と出力するようにしてください。",
        "children": []
      },
      {
        "type": "table",
        "blockId": "17d2297f-7a72-81fd-9e00-d7146229ac9d",
        "parent": "| 正答率              | 評価    |\n| ---------------- | ----- |\n| **90%以上 100%以下** | **秀** |\n| **80%以上 90%未満**  | **優** |\n| **70%以上 80%未満**  | **良** |\n| **60%以上 70%未満**  | **可** |\n| **0%以上 60%未満**   | **不** |",
        "children": [
          {
            "type": "table_row",
            "blockId": "17d2297f-7a72-81da-9f89-f60c38df5f52",
            "parent": "",
            "children": []
          },
          {
            "type": "table_row",
            "blockId": "17d2297f-7a72-813b-929f-c8dfd1248494",
            "parent": "",
            "children": []
          },
          {
            "type": "table_row",
            "blockId": "17d2297f-7a72-81fc-bae3-cb1d77a38f7e",
            "parent": "",
            "children": []
          },
          {
            "type": "table_row",
            "blockId": "17d2297f-7a72-8158-a57f-dac2e6c082d1",
            "parent": "",
            "children": []
          },
          {
            "type": "table_row",
            "blockId": "17d2297f-7a72-8170-a677-fd1a325094c2",
            "parent": "",
            "children": []
          },
          {
            "type": "table_row",
            "blockId": "17d2297f-7a72-81d9-8e0f-ce5ace8df6f4",
            "parent": "",
            "children": []
          }
        ]
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8113-8a3f-ec3758921715",
        "parent": "ただし、ユーザーからは**実数（少数を含む数字）が入力されることもある**という想定でプログラムを作成してください。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8125-9b53-dff472876f7b",
        "parent": "また、必要な場合にはプログラム中の条件式にブール演算子を使用してください。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-817c-9f0d-df5ecdf38ff5",
        "parent": "※プログラムは「prac2-3.py」として保存",
        "children": []
      },
      {
        "type": "heading_3",
        "blockId": "17d2297f-7a72-81d7-a131-e16fe9b1d8c0",
        "parent": "### 期待する出力結果",
        "children": []
      },
      {
        "type": "code",
        "blockId": "17d2297f-7a72-819d-8b20-ed0247df1c84",
        "parent": "```text\n正答率を入力してください : 92.5\n秀\n```",
        "children": []
      },
      {
        "type": "code",
        "blockId": "17d2297f-7a72-815b-9fd1-c42f675313ab",
        "parent": "```text\n正答率を入力してください : 77.2 \n良\n```",
        "children": []
      },
      {
        "type": "code",
        "blockId": "17d2297f-7a72-81e3-b188-e5a470afb3f8",
        "parent": "```text\n正答率を入力してください : 120\n不正な正答率です\n```",
        "children": []
      },
      {
        "type": "heading_1",
        "blockId": "17d2297f-7a72-8112-8fb4-c88b7a085137",
        "parent": "# 進捗アンケート",
        "children": []
      },
      {
        "type": "divider",
        "blockId": "17d2297f-7a72-81be-a114-f979f6ac8b64",
        "parent": "---",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81df-b27a-ff4200eb2bf9",
        "parent": "練習問題２が終了した人は、以下のGoogelフォームに回答してください。",
        "children": []
      },
      {
        "type": "synced_block",
        "blockId": "17d2297f-7a72-81fc-8186-e60f7bf4cc2d",
        "parent": "",
        "children": []
      },
      {
        "type": "quote",
        "blockId": "17d2297f-7a72-8101-827f-cc9542ffce21",
        "parent": "> ",
        "children": [
          {
            "type": "bookmark",
            "blockId": "17d2297f-7a72-8174-8940-daff08117d18",
            "parent": "[bookmark](https://forms.gle/MboZcQx7ttqRBrU29)",
            "children": []
          },
          {
            "type": "paragraph",
            "blockId": "17d2297f-7a72-81c0-bd4c-f00df266ddbf",
            "parent": "",
            "children": []
          }
        ]
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81c3-ba00-d3c4ccba5460",
        "parent": "",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8184-9c1f-e9e9958e4dd7",
        "parent": "",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81f4-b836-e44976a6f091",
        "parent": "",
        "children": []
      }
    ]
  },
  {
    "type": "child_page",
    "blockId": "17d2297f-7a72-8016-9adc-d47c6aa67351",
    "parent": "## 7. リストと辞書",
    "children": [
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8198-8318-d7bc0be6c3e3",
        "parent": "[前回(練習問題2)](/17d2297f7a728083965ee7b2f91955cb)",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-813e-8044-c90921c9102f",
        "parent": "",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-817a-aced-f9ed01ac8ca1",
        "parent": "今回は、Pythonの特に重要な機能であるリストと辞書について学んでいきます。",
        "children": []
      },
      {
        "type": "heading_1",
        "blockId": "17d2297f-7a72-81c9-8ab5-c20999deaffd",
        "parent": "# リスト",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8181-a7f8-eb9f7ab672a5",
        "parent": "Pythonの**リスト**は、複数のデータを一緒にまとめるための便利な機能です。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8132-b3cd-c59536f5c09e",
        "parent": "**リスト**は、数字や文字列、他のリストなど、どんな種類のデータでも含めることができます。リストを作るには、データを角括弧(`[]`)で囲み、データの間にカンマ(`,`)を入れます。例えば、`[1, 2, 3]`は数字のリストで、`[\"りんご\", \"バナナ\", \"チェリー\"]`は文字列のリストです。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81f3-b3f1-de3ca70058c6",
        "parent": "**リスト**は順序があり、**最初の要素は0から数えます**。したがって、`\"りんご\"`は`[\"りんご\", \"バナナ\", \"チェリー\"]`の0番目の要素です。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81bc-b0ee-def803e70ea9",
        "parent": "Pythonでリストを定義するには、次のように記述します。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "17d2297f-7a72-810a-93b0-d9c18f7f3ab9",
        "parent": "```python\n#変数listを[1, 2, 3]を格納するリストとする\nlist = [1, 2, 3]\nprint(list)       #listを丸ごと出力\n```",
        "children": []
      },
      {
        "type": "code",
        "blockId": "17d2297f-7a72-81ae-98d9-c45d8705ce74",
        "parent": "```text\n＜出力結果＞\n[1, 2, 3]\n```",
        "children": []
      },
      {
        "type": "heading_2",
        "blockId": "17d2297f-7a72-810c-9648-cabe43ef508f",
        "parent": "## インデックス",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81fb-b13f-e3a6af1872b7",
        "parent": "リストの各要素にアクセスするには、その位置を指定します。この位置のことを **インデックス** といいます。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81f1-b3f1-d498e9d5e877",
        "parent": "Pythonでは、インデックスを角括弧内に書くことで要素を取り出せます。例えば`list[0]`とすると、`list`の0番目の要素、つまり`1`を得られます。また、`list[-1]`というようにインデックスに`-1`を指定すれば、リストの最後の要素を得ることができます。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "17d2297f-7a72-81aa-8b19-ef7c67ad1a7a",
        "parent": "```python\nlist = [1, 2, 3]\nprint(list[0])\nprint(list[-1])\n```",
        "children": []
      },
      {
        "type": "code",
        "blockId": "17d2297f-7a72-81f5-a2bf-f7f8b335de76",
        "parent": "```text\n＜出力結果＞\n1\n3\n```",
        "children": []
      },
      {
        "type": "heading_2",
        "blockId": "17d2297f-7a72-817b-9d7a-cdcaa9c3f20f",
        "parent": "## スライス",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8181-9931-c431018fe420",
        "parent": "Pythonのリストは「◯番目から△番目」というように、指定した範囲の要素を取り出すこともできます。これを**スライス**といいます。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8142-bf91-cf887e80842d",
        "parent": "スライスは、コロンを挟む形で、取り出したい範囲の始点と終点のインデックスを記述します。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8183-9e67-c323057f73a5",
        "parent": "`list[`**`始点のインデックス`**`:`**`終点のインデックス`**`]`",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-819c-a1d4-f525fb9ef920",
        "parent": "しかし、ここで注意すべき点は、**終点として指定した要素は含まれない**ということです。以下のコードで確認してみましょう。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "17d2297f-7a72-8161-8703-edc4bcb50ff5",
        "parent": "```python\nlist = [0, 1, 2, 3, 4, 5, 6]\nsliced_list = list[2:5]\nprint(sliced_list)\n```",
        "children": []
      },
      {
        "type": "code",
        "blockId": "17d2297f-7a72-81fb-be7e-d21df7f7775a",
        "parent": "```text\n＜出力結果＞\n[2, 3, 4]\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8152-99e7-ca5f043b9d2a",
        "parent": "このように、終点として指定した5番目の要素は出力結果に含まれていないことがわかります。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8170-9587-fa7cf1dc5252",
        "parent": "`list[x:y]`とするとき、実際に得られる範囲は **x番目から y-1番目**と考えると良いでしょう。",
        "children": []
      },
      {
        "type": "heading_2",
        "blockId": "17d2297f-7a72-812e-a7d9-c766527524ad",
        "parent": "## 各種メソッド",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81a3-a6d9-ea8b6e123463",
        "parent": "Pythonのリストには、データを追加したり、削除したりするための便利な機能が搭載されています。これを**メソッド**といいます。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81c2-8f80-ec0c0e9d16fa",
        "parent": "メソッドは、操作したいリスト名の後ろにドット（`.`）をつけ、さらにその後ろにメソッド名をくっつけます。こんなふうに…",
        "children": []
      },
      {
        "type": "code",
        "blockId": "17d2297f-7a72-8101-90aa-fa4653059ba1",
        "parent": "```python\nlist = [1, 2, 3, 4, 5]\nlist.append(6)     #listに新しい要素6を追加\nprint(list)\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8143-a5c7-e892819cdfdf",
        "parent": "このappendメソッドを使うと、リストに新しい要素を追加することができます。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "17d2297f-7a72-8148-9ad6-d000dc088d68",
        "parent": "```text\n＜出力結果＞\n[1, 2, 3, 4, 5, 6]\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-816f-848d-f15b82394e55",
        "parent": "以下に、Pythonのリストで使用できる主なメソッドを一覧で紹介します。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8187-8a67-fb335be7a796",
        "parent": "※この表は紹介程度なのでまだ使えなくても大丈夫です。",
        "children": []
      },
      {
        "type": "table",
        "blockId": "17d2297f-7a72-8129-9812-ebbca0bf829f",
        "parent": "| **メソッド名**                       | **説明**                                                       | **使用例**             |\n| ------------------------------- | ------------------------------------------------------------ | ------------------- |\n| `append(x)`                     | リストの末尾に要素をひとつ追加します。                                          | `list.append(3)`    |\n| `remove(x)`                     | 値がxである最初の項目を削除します。該当する項目がない場合はエラーになります。                      | `list.remove(2)`    |\n| `insert(i, x)`                  | 指定した位置に要素を挿入します。第一引数は挿入される要素のインデックスを指定します。                   | `list.insert(1, 2)` |\n| `pop(x)`                        | リストから指定した位置の要素を削除し、その要素を返します。インデックスを指定しない場合はリストの最後の要素を削除します。 | `list.pop(1)`       |\n| `index(x)`                      | 値がxである最初の項目のインデックスを返します。該当する項目がない場合はエラーになります。                | `list.index(3)`     |\n| `count(x)`                      | リストでのxの出現回数を返します。                                            | `list.count(3)`     |\n| `sort(key=None, reverse=False)` | リストの項目を、キー関数によって提供される基準で並び替えます。                              | `list.sort()`       |",
        "children": [
          {
            "type": "table_row",
            "blockId": "17d2297f-7a72-81d5-978f-df3caa020531",
            "parent": "",
            "children": []
          },
          {
            "type": "table_row",
            "blockId": "17d2297f-7a72-810a-8ef3-fe94c27e13a8",
            "parent": "",
            "children": []
          },
          {
            "type": "table_row",
            "blockId": "17d2297f-7a72-810f-9d41-c23376d43f92",
            "parent": "",
            "children": []
          },
          {
            "type": "table_row",
            "blockId": "17d2297f-7a72-8121-abc7-ed4a992d8de6",
            "parent": "",
            "children": []
          },
          {
            "type": "table_row",
            "blockId": "17d2297f-7a72-81ba-af1c-f95436d08370",
            "parent": "",
            "children": []
          },
          {
            "type": "table_row",
            "blockId": "17d2297f-7a72-8130-a297-eef21e156b81",
            "parent": "",
            "children": []
          },
          {
            "type": "table_row",
            "blockId": "17d2297f-7a72-8196-b690-c824ac5e0aa1",
            "parent": "",
            "children": []
          },
          {
            "type": "table_row",
            "blockId": "17d2297f-7a72-81eb-b42c-c2f2b3cadace",
            "parent": "",
            "children": []
          }
        ]
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81a6-99a7-ff265b21bfc1",
        "parent": "",
        "children": []
      },
      {
        "type": "divider",
        "blockId": "17d2297f-7a72-810d-9374-cbd21c013a5f",
        "parent": "---",
        "children": []
      },
      {
        "type": "heading_1",
        "blockId": "17d2297f-7a72-8127-9942-c69401ddff64",
        "parent": "# 辞書",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81f0-aa46-f2b4623709a7",
        "parent": "Pythonの**辞書**とは、例えば「名前と電話番号」や「商品名と価格」のような、それぞれペアになっている情報を保存しておける便利機能です。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81a8-a9a6-e3855438393f",
        "parent": "Pythonで**辞書**を作成するときには、まずペアにしたい値を`:`で示し、複数ある場合はカンマで区切ります。さらにそれを中括弧（`{}`）で囲むことで作成可能です。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "17d2297f-7a72-81b0-984e-f82defa52666",
        "parent": "```python\nmy_dict = {\"apple\": 100, \"banana\": 200, \"orange\": 300}\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81c2-9634-d58fb527b0b9",
        "parent": "これは、「リンゴが100円」「バナナは200円」「オレンジは300円」というように、フルーツとその値段を`my_dict`にペアで格納しています。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81ff-a7db-d84769189868",
        "parent": "この`my_dict`をprint関数で出力すると以下のようになります。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "17d2297f-7a72-8128-a1c5-f5d7419b2c0e",
        "parent": "```text\n＜出力結果＞\n{'apple': 100, 'banana': 200, 'orange': 300}\n```",
        "children": []
      },
      {
        "type": "heading_2",
        "blockId": "17d2297f-7a72-81a0-83be-fbb10e336460",
        "parent": "## バリューの取り出し",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81f3-98c7-cf102069e5b1",
        "parent": "`”apple”`, `“banana”`, `“orange”`は**キー（Key）**と呼ばれ、`100`, `200`, `300`は**バリュー（Value）**と呼ばれます。辞書ではこの**キー**を用いて**バリュー**を取り出します。例えば、リンゴの価格を取り出したい場合には、このようにします。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "17d2297f-7a72-81b4-85b6-c24363306382",
        "parent": "```python\nmy_dict = {\"apple\": 100, \"banana\": 200, \"orange\": 300}\nprint(my_dict[\"apple\"])\n```",
        "children": []
      },
      {
        "type": "code",
        "blockId": "17d2297f-7a72-8197-bd38-cbc96e601520",
        "parent": "```text\n＜出力結果＞\n100\n```",
        "children": []
      },
      {
        "type": "heading_2",
        "blockId": "17d2297f-7a72-81f6-a5b5-e7ce162e5fdd",
        "parent": "## 要素の追加",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8122-9ab9-fb26b484b841",
        "parent": "辞書に新しい要素を追加するには、新しいキーとバリューのペアを指定することで可能です。具体的には、既存の辞書名の後ろに新しいキー名を角括弧(`[]`)内に書き、それに等号(`=`)を使って新しいバリューを割り当てます。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8134-be5e-c5585f9fd910",
        "parent": "例えば、既存の辞書`my_dict`に新しいフルーツ（例えば、「grape」）とその価格（例えば、400）を追加したい場合、以下のように記述します。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "17d2297f-7a72-81e0-9f4b-f1b840653a3a",
        "parent": "```python\nmy_dict = {\"apple\": 100, \"banana\": 200, \"orange\": 300}\nmy_dict[\"grape\"] = 400\nprint(my_dict)\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8183-9388-e0bd4916e2c4",
        "parent": "このコードを実行すると、`my_dict`に新しいキーとバリューのペア`\"grape\": 400`が追加されています。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "17d2297f-7a72-8105-9875-fa206e29accd",
        "parent": "```text\n＜出力結果＞\n{'apple': 100, 'banana': 200, 'orange': 300, 'grape': 400}\n```",
        "children": []
      },
      {
        "type": "heading_2",
        "blockId": "17d2297f-7a72-819b-858e-cc4746017546",
        "parent": "## 各種メソッド",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81cd-aff4-daf535bb4dca",
        "parent": "※この表は紹介程度なのでまだ使えなくても大丈夫です。",
        "children": []
      },
      {
        "type": "table",
        "blockId": "17d2297f-7a72-818b-b345-faa44ccc0e4f",
        "parent": "| **メソッド名**               | **説明**                                                   | **使用例**                       |\n| ----------------------- | -------------------------------------------------------- | ----------------------------- |\n| **`keys()`**            | 辞書のすべてのキーを返す。                                            | **`my_dict.keys()`**          |\n| **`values()`**          | 辞書のすべての値を返す。                                             | **`my_dict.values()`**        |\n| **`get(key, default)`** | 指定したキーの値を返す。キーが存在しない場合は、defaultの値を返す。                    | **`my_dict.get('apple', 0)`** |\n| **`pop(key, default)`** | 指定したキーの値を返し、そのキーと値のペアを辞書から削除する。キーが存在しない場合は、defaultの値を返す。 | **`my_dict.pop('apple', 0)`** |",
        "children": [
          {
            "type": "table_row",
            "blockId": "17d2297f-7a72-8134-84cf-fb1f86b129cc",
            "parent": "",
            "children": []
          },
          {
            "type": "table_row",
            "blockId": "17d2297f-7a72-8149-a863-fce6bbf7e2a2",
            "parent": "",
            "children": []
          },
          {
            "type": "table_row",
            "blockId": "17d2297f-7a72-8193-9496-ea55eb1ff88d",
            "parent": "",
            "children": []
          },
          {
            "type": "table_row",
            "blockId": "17d2297f-7a72-81ee-a57c-f6e86c58e950",
            "parent": "",
            "children": []
          },
          {
            "type": "table_row",
            "blockId": "17d2297f-7a72-8133-8aa0-dd07000bc019",
            "parent": "",
            "children": []
          }
        ]
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81cd-ba42-f50b30270f16",
        "parent": "",
        "children": []
      }
    ]
  },
  {
    "type": "child_page",
    "blockId": "17d2297f-7a72-802e-9b3e-e5ce4ec291d9",
    "parent": "## 8. 繰り返し（for文）",
    "children": [
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81c2-8fad-c88bd09fd654",
        "parent": "[前回(7.リストと辞書)](/17d2297f7a7280169adcd47c6aa67351)",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81a6-bd48-fb2cb0261c4c",
        "parent": "",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81d4-ae67-c189cf4c7308",
        "parent": "今回はプログラム中で同じような処理を繰り返し行うことができる **for文** について学んでいきます。",
        "children": []
      },
      {
        "type": "toggle",
        "blockId": "17d2297f-7a72-812b-9d14-d18111274070",
        "parent": "余談（別言語でプログラミングしたことある人向け）",
        "children": [
          {
            "type": "paragraph",
            "blockId": "17d2297f-7a72-81c5-92d6-c974f8d8aa20",
            "parent": "Pythonのfor文は、オブジェクト指向言語ならではの仕様となっていて、C言語などのfor文（`for (i = 0; i < 5; i++)`みたいなやつ）に慣れている人は、記述方法や使い方が違いすぎて困惑するかもしれません。ですが、慣れればとても便利と感じるはずです。頑張って触ってみてください。",
            "children": []
          }
        ]
      },
      {
        "type": "heading_1",
        "blockId": "17d2297f-7a72-81f8-9ca2-c0876c8b51ce",
        "parent": "# リストによる繰り返し",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81d0-98bc-cba9cdbd9644",
        "parent": "**for文**とは、例えば工場の製造ラインのようなものです。製造ラインには様々な部品（これがリストの要素にあたります）が順番に流れてきて、それぞれに対して同じ作業（これがfor文で定義する操作にあたります）が行われます。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8196-950d-fe938dd5c06e",
        "parent": "**for文**は以下のように記述をします。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "17d2297f-7a72-8111-9b99-da6c6f1f182f",
        "parent": "```python\nfor 変数 in リスト:\n    処理\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8137-895b-dd030a43c1a5",
        "parent": "例えば、リストに`[1, 2, 3, 4, 5]`が格納されていて、それぞれの数字に対して2を掛けるという処理を行いたいとしましょう。これをPythonの**for文**で書くと次のようになります。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "17d2297f-7a72-8131-8ff7-f278ae811fa8",
        "parent": "```python\nnumbers = [1, 2, 3, 4, 5]\nfor number in numbers:\n    print(number * 2)\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8122-877c-de65dbbe8d50",
        "parent": "このプログラムでは、まず`numbers`という名前でリストが定義され、その中には`[1, 2, 3, 4, 5]`が格納されます。そして**for文**が始まり、`numbers`の中にある各要素（ここでは`number`と名付けています）に対して、その数値を2倍にして表示するという操作が行われます。よって、実行結果は以下のようになります。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "17d2297f-7a72-8119-ab53-fe5c1c2b6779",
        "parent": "```text\n＜実行結果＞\n2\n4\n6\n8\n10\n```",
        "children": []
      },
      {
        "type": "heading_1",
        "blockId": "17d2297f-7a72-81fd-9ea9-c6c47facb3da",
        "parent": "# range関数による繰り返し",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8144-b3da-d5974a209319",
        "parent": "Pythonのfor文には、リストだけでなく**range関数**というものも使用できます。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81af-9f24-c4e1722379f0",
        "parent": "これは、単純に◯回同じ処理を繰り返したい、といったときに便利です。基本的な記述方法はこんな感じです。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "17d2297f-7a72-81f4-892e-c6be9470ae51",
        "parent": "```python\nfor 変数 in range(繰り返したい回数):\n    処理\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81b2-b93a-cafee104d032",
        "parent": "例えば、5回繰り返して「Hello World!」と出力したい場合はこのようにプログラムになります。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "17d2297f-7a72-81b4-9bf2-cba7af8a3166",
        "parent": "```python\nfor i in range(5):\n    print(\"Hello World!\")\n```",
        "children": []
      },
      {
        "type": "code",
        "blockId": "17d2297f-7a72-81a2-9b92-d532fe58a963",
        "parent": "```text\n＜実行結果＞\nHello World!\nHello World!\nHello World!\nHello World!\nHello World!\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-811a-bcb5-c4d7366f7146",
        "parent": "事前にリストを用意する必要がないため気軽に実行できます。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81f6-afa3-da34dd2a39fb",
        "parent": "range関数については、かなり便利なものなのですが、ここでは詳しく解説しません。気になる方は、[こちら](https://www.javadrive.jp/python/function/index6.html)や[こちら](https://atmarkit.itmedia.co.jp/ait/articles/2011/20/news018.html)がわかりやすいと思います。読んでみてください。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8105-83f6-d9dddc0f9d5c",
        "parent": "",
        "children": []
      }
    ]
  },
  {
    "type": "child_page",
    "blockId": "17d2297f-7a72-8082-a7ed-e20cd44e5139",
    "parent": "## 練習問題3",
    "children": [
      {
        "type": "paragraph",
        "blockId": "da99d219-f510-4a26-89eb-89f17321620e",
        "parent": "[前々回（リストと辞書）](/17d2297f7a7280169adcd47c6aa67351)、[前回(for文を使った繰り返し)](/17d2297f7a72802e9b3ee5ce4ec291d9)の練習問題です。",
        "children": []
      },
      {
        "type": "heading_1",
        "blockId": "f968e6fe-861c-43d7-b305-70b2f2435f3b",
        "parent": "# 問題1",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "fa5f0214-3fa6-4b2a-b907-bc3d94cd86f8",
        "parent": "以下のリストの1番目の要素と、一番最後の要素を表示するプログラムを作成してください。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "0acddeef-3ad6-4aef-9e0b-b5c3f61047ca",
        "parent": "```python\npoteti = [\"うすしお\", \"のりしお\", \"関西だししょうゆ\", \"しあわせバタ～\", \"コンソメパンチ\"]\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "93d22ea4-1ba1-4fa0-a16e-26e3b94769a9",
        "parent": "※プログラムは「prac3-1.py」として保存",
        "children": []
      },
      {
        "type": "heading_3",
        "blockId": "ee2c5154-5624-4275-8310-21a4183fb624",
        "parent": "### 期待する出力結果",
        "children": []
      },
      {
        "type": "code",
        "blockId": "10457183-0f6c-443b-af19-faf16c40928b",
        "parent": "```text\nのりしお\nコンソメパンチ\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "bd242612-b287-4eb3-b138-6e5b6a8f2894",
        "parent": "",
        "children": []
      },
      {
        "type": "divider",
        "blockId": "d814665e-07ca-46ad-bc07-05228ef7c361",
        "parent": "---",
        "children": []
      },
      {
        "type": "heading_1",
        "blockId": "d96563f2-3b7f-4e93-8944-da29ba1417ea",
        "parent": "# 問題2",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "45e756b2-9078-4b2d-b7e2-f29e82f690f0",
        "parent": "問題1のプログラムのリストを利用して、リスト`poteti`の要素を一行に一つづつ画面に表示するプログラムを作成してください。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "54cf37a3-79cf-4c6f-b770-9aeefe8a9bff",
        "parent": "※プログラムは「prac3-2.py」として保存",
        "children": []
      },
      {
        "type": "heading_3",
        "blockId": "824d3156-c187-4e3d-82a4-bf16cc254be0",
        "parent": "### 期待する出力結果",
        "children": []
      },
      {
        "type": "code",
        "blockId": "bb986e87-1ede-4b1c-8088-760258eb355f",
        "parent": "```text\nうすしお\nのりしお\n関西だししょうゆ\nしあわせバタ～\nコンソメパンチ\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "8ebd57f7-052d-45c7-a4c9-02c95853f2af",
        "parent": "",
        "children": []
      },
      {
        "type": "divider",
        "blockId": "5a5bf23a-ca3a-4922-8c13-e515bd1fdc34",
        "parent": "---",
        "children": []
      },
      {
        "type": "heading_1",
        "blockId": "6a9ae0bd-fbf2-42b6-8333-531aecae263d",
        "parent": "# 問題3",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "a7ac5038-18a0-4141-8188-405167a08f13",
        "parent": "ユーザーから10回の数字を入力してもらい、それらをリスト`numbers`に追加して最後にすべてを表示するプログラムを作成してください。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "0893b947-8c89-4276-8bd1-a0262d8c6e57",
        "parent": "※プログラムは「prac3-3.py」として保存",
        "children": []
      },
      {
        "type": "heading_3",
        "blockId": "eed2b6c6-e822-4e7c-ac30-fc57e6be8bd5",
        "parent": "### 期待する出力結果",
        "children": []
      },
      {
        "type": "code",
        "blockId": "79338b99-1f95-49bf-878a-ea5b2de0d4be",
        "parent": "```text\n10個の数字を入力してください\n3\n15\n7\n-9\n22\n-28\n60\n52\n4\n-4\n入力されたすべての数字を出力します\n[3, 15, 7, -9, 22, -28, 60, 52, 4, -4]\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "254d219f-a3a8-4d59-92fd-52dc18a6c79a",
        "parent": "",
        "children": []
      },
      {
        "type": "divider",
        "blockId": "41f81be6-d122-47c8-ac29-22bc90169451",
        "parent": "---",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "4989f8ec-28bf-45e8-8d43-e20b575f9b25",
        "parent": "",
        "children": []
      },
      {
        "type": "heading_1",
        "blockId": "b92ada87-b766-4e6f-975e-a3e6d842a9a7",
        "parent": "# 発展問題",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "ea364687-2b1f-43c1-aa3f-6d4e4547962b",
        "parent": "for文を利用して、`*`（アスタリスク）を利用して直角三角形を生成するプログラムを作成してください。三角形の大きさは自由です。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "cfa8e307-c7fe-412c-9a1d-b49a477611aa",
        "parent": "※プログラムは「prac3-ex.py」として保存",
        "children": []
      },
      {
        "type": "heading_3",
        "blockId": "1e49577a-8aff-4522-bcfd-4b50799991e1",
        "parent": "### 期待する出力結果（縦横6の例）",
        "children": []
      },
      {
        "type": "code",
        "blockId": "a1cf814b-bca6-4df6-a3f7-d7b5ff37387d",
        "parent": "```text\n\n*\n**\n***\n****\n*****\n******\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "f71686d6-8da7-443c-a1e7-063338e2f8e2",
        "parent": "ヒント1：改行せずにprint関数を実行するには、`print(\"*\",end=\"\")` と記述します。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "535c7e56-6a26-40b6-b68c-fcceb7dc8445",
        "parent": "ヒント2：多重ループを使用します。",
        "children": []
      },
      {
        "type": "heading_1",
        "blockId": "cac04f3a-5e30-4a1b-8cd2-f8c07ea11ded",
        "parent": "# 進捗アンケート",
        "children": []
      },
      {
        "type": "divider",
        "blockId": "6dbc64bf-6260-48f9-9594-f16ecee378fc",
        "parent": "---",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "821312c7-07c4-4971-b993-b8d316a67e34",
        "parent": "練習問題３が終了した人は、以下のGoogleフォームに回答してください。",
        "children": []
      },
      {
        "type": "synced_block",
        "blockId": "bdb0ec11-6a94-4f9d-8a5e-96b64abf53fd",
        "parent": "",
        "children": []
      },
      {
        "type": "quote",
        "blockId": "b08d4a56-119d-441a-b347-8894759f6b47",
        "parent": "> ",
        "children": [
          {
            "type": "bookmark",
            "blockId": "55de22be-ae7a-4799-b389-abd5c5e09345",
            "parent": "[bookmark](https://forms.gle/a5sjrsgJFMEHrc998)",
            "children": []
          },
          {
            "type": "paragraph",
            "blockId": "46963d9f-4091-4205-adc3-d0e6105b7662",
            "parent": "",
            "children": []
          }
        ]
      },
      {
        "type": "paragraph",
        "blockId": "7383e6bb-b82a-401b-b981-b8d0c2496ac1",
        "parent": "",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "3d7e71db-73eb-476a-bd8d-e21c32cf62fb",
        "parent": "",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "d3c4aae0-9ad0-4f33-8261-6594d5d8676a",
        "parent": "",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "bd11e277-acf6-4172-bd4e-3240b2f93d59",
        "parent": "",
        "children": []
      }
    ]
  },
  {
    "type": "child_page",
    "blockId": "17d2297f-7a72-8093-8875-ff9cc8657833",
    "parent": "## 9. 文字列",
    "children": [
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-814d-9e7a-f1f7eabf8c72",
        "parent": "[前回(練習問題3)](/17d2297f7a728082a7ede20cd44e5139)",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8162-a1f6-fde6dde45435",
        "parent": "",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81c5-90b0-c95ecf0ca38a",
        "parent": "ここでは、これまで何度か触れてきた**文字列**に関してより詳しく学習します。文字列といえば、`”Hello World!”`とか`”Horizon”`とかですね",
        "children": []
      },
      {
        "type": "heading_1",
        "blockId": "17d2297f-7a72-8179-97c6-f6b407c12ac9",
        "parent": "# ダブルクォートとシングルクォート",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81d0-96bc-deecb1e4fe28",
        "parent": "これまで、Pythonで文字列を作成するには、テキストを**ダブルクォート**（`\"\"`）で囲ってきました。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "17d2297f-7a72-8193-bbd2-e91007d2698f",
        "parent": "```python\nstr = \"Helllo World!\"\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-816b-a6a2-cf362ed5e4b9",
        "parent": "Pythonでは同様のことが、**シングルクォート**（`''`）でも行えます。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "17d2297f-7a72-81a7-a335-dc0976699d38",
        "parent": "```python\nstr = 'Helllo World!'\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81b8-8305-fc0a753b6e02",
        "parent": "ダブルクォートとシングルクォートを組み合わせれば、文字列の中にダブルクォートまたはシングルクォートを入れることもできます。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "17d2297f-7a72-81a0-aee2-fcad106141bc",
        "parent": "```python\nstr1 = \"Hello 'World'!\"\nstr2 = 'プログラミング部 \"Horizon\"'\nprint(str1)\nprint(str2)\n```",
        "children": []
      },
      {
        "type": "code",
        "blockId": "17d2297f-7a72-8174-ba7c-e3250d052e2f",
        "parent": "```text\n＜出力結果＞\nHello 'World'!\nプログラミング部 \"Horizon\"\n```",
        "children": []
      },
      {
        "type": "heading_1",
        "blockId": "17d2297f-7a72-81c9-b4c6-e3dc23c6d5f3",
        "parent": "# 結合",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81db-9e4d-d9a3c9c9c1c1",
        "parent": "Pythonでの文字列は、**結合**（複数の文字列を繋げる処理）がとても簡単です。足し算のように`+`で文字列の結合を行うことができます。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "17d2297f-7a72-811f-b8c8-d113fb886601",
        "parent": "```python\na = \"Hello\"\nb = \"World!\"\nstr = a + b\nprint(str)\n```",
        "children": []
      },
      {
        "type": "code",
        "blockId": "17d2297f-7a72-8108-a8f5-e26a51081499",
        "parent": "```text\n＜出力結果＞\nHelloWorld!\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81ae-bdc1-c25d97e286e5",
        "parent": "これによって、文字列を含む文章を出力しようと思ったとき、これまでは`print(”あなたの名前は”, name, “です”)`のようにカンマで区切っていましたが、以下のように一つの変数にまとめてから出力ができるようになります。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "17d2297f-7a72-817d-bfcc-ead03646b248",
        "parent": "```python\nname = input(\"あなたの名前を入力してください；\")\nmassage = \"あなたの名前は\" + name + \"です\"\nprint(massage)\n```",
        "children": []
      },
      {
        "type": "code",
        "blockId": "17d2297f-7a72-8167-b44d-cd10c08d5563",
        "parent": "```text\n＜出力結果＞\nあなたの名前を入力してください；Haruto\nあなたの名前はHarutoです\n```",
        "children": []
      },
      {
        "type": "heading_1",
        "blockId": "17d2297f-7a72-81a8-b619-fc5934f718be",
        "parent": "# リストとの類似点",
        "children": []
      },
      {
        "type": "heading_3",
        "blockId": "17d2297f-7a72-81d3-a1ee-cf3fd8b40fac",
        "parent": "### インデックスによる指定",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81fc-8d8c-e5f0220b9591",
        "parent": "文字列はリストと同じように、インデックスを使って特定の一文字を取り出すことができます。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "17d2297f-7a72-81ac-9d0c-ef9e39fed166",
        "parent": "```python\nstr = 'Horizon'\nprint(str[0])   #strの0番目（最初）\nprint(str[3])   #strの3番目\nprint(str[-1])  #strの最後\n```",
        "children": []
      },
      {
        "type": "code",
        "blockId": "17d2297f-7a72-8128-9154-dfda26848475",
        "parent": "```text\n＜出力結果＞\nH\ni\nn\n```",
        "children": []
      },
      {
        "type": "heading_3",
        "blockId": "17d2297f-7a72-8188-a953-d9bef0d67ffe",
        "parent": "### スライス",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8117-9fb9-ec525bbb99cd",
        "parent": "リストで行ったのと同じように、文字列も**スライス**を行うことができます。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "17d2297f-7a72-81b7-8b53-ef26266d0ed4",
        "parent": "```python\nsliced_str = str[x:y]\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8165-89ab-f091e428bbb5",
        "parent": "このようにすることで、最初の文字を0文字目とした`str`の **x文字目** ～ **y-1文字目** までを抜き出すことができます。例えば、**「Hello World!」**から**「World」**のみを抜き出すには、次のようなプログラムになります。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "17d2297f-7a72-817c-934d-c2accc48b22b",
        "parent": "```python\nstr = 'Hello World!'\nsliced_str = str[6:11]\nprint(sliced_str)\n```",
        "children": []
      },
      {
        "type": "code",
        "blockId": "17d2297f-7a72-81ab-9014-d19f307a86ca",
        "parent": "```text\n＜出力結果＞\nWorld\n```",
        "children": []
      },
      {
        "type": "heading_3",
        "blockId": "17d2297f-7a72-818c-9922-f6a71a630fcf",
        "parent": "### for文との組み合わせ",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-812e-953e-c36a939fdc88",
        "parent": "文字列はfor文と組み合わせると、文字列から位置文字ずつ取り出して処理を行うことができます。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "17d2297f-7a72-81c1-8cc1-c16562605830",
        "parent": "```python\nstr = 'Horizon'\nfor char in str:\n    print(char)\n```",
        "children": []
      },
      {
        "type": "code",
        "blockId": "17d2297f-7a72-8142-950f-f3cecb8a3adc",
        "parent": "```text\n＜出力結果＞\nH\no\nr\ni\nz\no\nn\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-818e-b7b4-e6665ac6defb",
        "parent": "",
        "children": [
          {
            "type": "paragraph",
            "blockId": "17d2297f-7a72-810a-af34-dc2f76dbddb8",
            "parent": "",
            "children": []
          }
        ]
      }
    ]
  },
  {
    "type": "child_page",
    "blockId": "17d2297f-7a72-80ce-be71-c2800f67421f",
    "parent": "## 練習問題4",
    "children": [
      {
        "type": "heading_1",
        "blockId": "24959f1d-02d0-4625-aa5e-862c548d956e",
        "parent": "# 問題1",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "9898fa8d-2fcf-4874-818a-43e19c95641c",
        "parent": "次の文字列を結合して新しい文字列を作成し、画面に出力してください",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "856c5870-8efb-4227-bd57-eaa1f5e97c07",
        "parent": "※プログラムは「prac4-1.py」として保存",
        "children": []
      },
      {
        "type": "code",
        "blockId": "77717241-4a25-4805-9508-3501f5a29613",
        "parent": "```python\nstr1 = '私は'\nstr2 = 'バスケットが'\nstr3 = '好きです' \n```",
        "children": []
      },
      {
        "type": "heading_3",
        "blockId": "7bbb4268-f30e-4c3e-9b1c-e9bb121513ae",
        "parent": "### 期待する出力結果",
        "children": []
      },
      {
        "type": "code",
        "blockId": "3bfa0e77-ca42-4e91-a065-37ef97ebb179",
        "parent": "```text\n私はバスケットが好きです\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "cc166029-ac77-43d4-b7c3-dbed720c0399",
        "parent": "",
        "children": []
      },
      {
        "type": "divider",
        "blockId": "4dcb69cf-06a4-4082-b894-9d6b91e779c7",
        "parent": "---",
        "children": []
      },
      {
        "type": "heading_1",
        "blockId": "616dc103-0ab9-47e9-94f7-c59648c1ca87",
        "parent": "# 問題2",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "8c2485f1-9fb9-40e7-b178-e3a8d2e6421b",
        "parent": "ユーザーから入力された文字列の最初の文字と最後の文字を出力してください",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "431619b7-295b-43ca-aa50-1bfda1f262aa",
        "parent": "※プログラムは「prac4-2.py」として保存",
        "children": []
      },
      {
        "type": "heading_3",
        "blockId": "0951514f-aaa1-479f-b32a-668c060ae8e4",
        "parent": "### 期待する出力結果",
        "children": []
      },
      {
        "type": "code",
        "blockId": "35a920cc-e45c-4872-badc-fb0faffaf341",
        "parent": "```text\n文字列を入力 : Hello, Horizon\n最初の文字 : H\n最後の文字 : n\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "45abdd75-4f1f-49f2-b06d-d519a84148a7",
        "parent": "",
        "children": []
      },
      {
        "type": "divider",
        "blockId": "ad351753-ca5a-41ad-a653-6bef3f94223c",
        "parent": "---",
        "children": []
      },
      {
        "type": "heading_1",
        "blockId": "0bd29e8f-3794-4462-a567-016d72efe78a",
        "parent": "# 問題3",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "fb8f6b14-473a-4745-92fb-0284cccaf730",
        "parent": "ユーザーから入力された文字列の3文字目から5文字目までを取り出し、画面に出力してください。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "e8e42ef1-584a-4377-963d-d98da757747a",
        "parent": "※プログラムは「prac4-3.py」として保存",
        "children": []
      },
      {
        "type": "heading_3",
        "blockId": "26dd8c2e-d31f-412e-b3ac-02f30cb4db42",
        "parent": "### 期待する出力結果",
        "children": []
      },
      {
        "type": "code",
        "blockId": "054ee969-a91b-4d8a-9815-a759b2f6aaa8",
        "parent": "```text\n文字列を入力 : こんにちは！最近は花粉がきついですね\n3文字目から5文字目までを表示します\nにちは\n```",
        "children": []
      },
      {
        "type": "heading_1",
        "blockId": "d13a3f6a-c147-4705-82b6-25dc0ca7661c",
        "parent": "# 進捗アンケート",
        "children": []
      },
      {
        "type": "divider",
        "blockId": "851dce3d-30da-4362-afa0-c1c0cc240e61",
        "parent": "---",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "2852af56-f077-4b59-ac9b-ff1aed0d54bd",
        "parent": "練習問題４が終了した人は、以下のGoogleフォームに回答してください。",
        "children": []
      },
      {
        "type": "synced_block",
        "blockId": "1fcd730e-a700-4e38-990c-dfff9ac78488",
        "parent": "",
        "children": []
      },
      {
        "type": "quote",
        "blockId": "17218447-9b73-4edf-bc97-2844422343e9",
        "parent": "> ",
        "children": [
          {
            "type": "bookmark",
            "blockId": "97a4f05c-1b6e-484b-8eb3-7632bc0f0e9d",
            "parent": "[bookmark](https://forms.gle/Wgwyu8CpiNr7qfCn8)",
            "children": []
          },
          {
            "type": "paragraph",
            "blockId": "2b5ed4e3-a3bd-4ffe-8baf-52adb89b3512",
            "parent": "",
            "children": []
          }
        ]
      },
      {
        "type": "paragraph",
        "blockId": "35b542ec-a20e-40da-9dfd-baa2b000c98e",
        "parent": "",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "0e11e70a-6de2-4127-a650-6eb527dd3e98",
        "parent": "",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "7125a583-bb41-4d75-ae53-ef7f414e8a07",
        "parent": "",
        "children": []
      }
    ]
  },
  {
    "type": "child_page",
    "blockId": "17d2297f-7a72-801b-a2a2-dc58b16dcc36",
    "parent": "## 10. 関数とは",
    "children": [
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8153-aab1-d3c13e2c4b49",
        "parent": "今回はプログラミングを行う上でとても重要な、**関数**について学びます。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81a0-b20f-d134dc6fcb31",
        "parent": "これまでも**print関数**や**input関数**など、さまざまな関数を使用してきましたが、**プログラミングにおける関数とはどんなものか？**までは扱って来ませんでした。プログラミングをしていくうえでは必要な知識となるため、詳しく解説していきます。",
        "children": []
      },
      {
        "type": "heading_1",
        "blockId": "17d2297f-7a72-8178-a181-c34a8b33b484",
        "parent": "# 関数",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8172-9559-cae35230cbf4",
        "parent": "関数とは、いわば**特定の処理に特化した仕事人**です。材料を渡せば、その材料をもとに特定の処理を行い、その処理で得られた成果物を返してきてくれます。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81dc-a0a2-ee5b57a45f91",
        "parent": "たとえば、足し算を行うadditionという関数（→**仕事人**）があるとします。この仕事人additionは、**足す数**と**足される数**という二つの**材料**を足し合わせて、答えという**成果物**を返してくれます。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "17d2297f-7a72-81d7-9c03-c5d8f5311f4d",
        "parent": "```python\n  ↓ここに答え（成果物）が入る\nanswer = addtion(5, 7)\n                 ↑  ↑二つの材料　\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81fe-a458-eb37979cd39a",
        "parent": "プログラミングでは、この材料を**引数（ひきすう）**と呼び、成果物を**戻り値（もどりち）**と呼びます。",
        "children": []
      },
      {
        "type": "callout",
        "blockId": "17d2297f-7a72-81fb-875a-dc60f19fbd57",
        "parent": "> ☝ **戻り値**は**返り値**とも言います。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81af-ac19-d488ae5c1be1",
        "parent": "また、関数を実行することを**「関数を呼び出す」**と言ったりします。",
        "children": []
      },
      {
        "type": "image",
        "blockId": "17d2297f-7a72-81d0-ba77-d690aba7b72a",
        "parent": "![%E9%96%A2%E6%95%B0%E8%AA%AC%E6%98%8E.jpg](https://prod-files-secure.s3.us-west-2.amazonaws.com/f9e367dd-1db7-428f-a2ed-c68a46952d5a/44ae266a-224c-4af4-8692-77ec00939fc9/%E9%96%A2%E6%95%B0%E8%AA%AC%E6%98%8E.jpg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB466XILGH3II%2F20250220%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250220T065949Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEI%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCICBf1FY3pPEIaNDX9b2z1%2FKCLGBZINPPqacSA1EZd0NWAiAlNtvZoULVI6Nw9Ym7G%2Fmf3%2Fd4uZqYq7fatyZLg1cmgyqIBAi4%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAAaDDYzNzQyMzE4MzgwNSIMr63Z7kPQWSf2Ph9JKtwDTl4g%2BG5QciDvy5kRllWZ5Gkt5I7HVutP4WYRbxX8H69qnftRjNpj5hgeYjmiAH7gS9x7h6qF1NAf6cNHk50L19Lqhp6wDR2I25gQLt%2BaPdYtHnRgvADB%2B9yacHk4Ey5X5WF%2FGXqW4DQL2J5415BBTzuAiaSc%2BFhdHNgNBh2zz41O6fxSP7PCuLuQx9gRsQ7gA0CgmCkUBQcDg8wqyCygleqkxgm7cmyuadD8N6Q52GvJSFvF4pvWHZLdn0bm%2FiSo7tFFKsEoxNZuYDQ7WjzxNU6FzW4kMKVKqu9%2BkCklmxJiiVFNUPd7%2BqdBQTo%2BG7jCSPHLQcTyP7S%2BlEsiVS74VyE4BTBNLjhihH1biPzpHQ7PdD68oOV9h3cER0ppCQg2wO5nEnwRsQFsHqBO2r6yrnbdSDS1S%2FAgzqVhCNVuTa2da6h7c2U3I5qV9ToZeFUgpQPDyID7HQuFEPbx8Zzc8%2FioALP89TTZNM5BiKWlAKIlnw2x0yP0YUSJYUwfk7IQrwPbvOVlFFBEi4nULJjEsI9JgHvbJY8uTuUXda0HYmm3oMTBPxz%2F78SOXGIJ1m1wAfye6CQKGBSY0rGD0gCoEh2ql6JyDNLEYEe5BdJaZlZePBjY6Pv9BMK6aTYw1JzbvQY6pgEKqR70HldZbQecVpMqI%2BA3QmmEWP8LnS85wfv%2FfXi0RA37wm3l7Hi8Y7%2BsBtTDz55PO6aCUGDsp2u3435Haa5q5GXZgjnMVKmuFafJA8DvL45tyTIkVyGK%2FOdkVSKaN1q4w1B114ClgVtuVZSBlOExABRtDCZYu%2Bpb4W%2FmlSOfN8I4RxdUc2uZZ84iWflpdIqV8CbrFV0TSBsCPntC6kkHA2UPgEed&X-Amz-Signature=12d9772d6b8214353b5869fea300149b4b8f9afd2c0b146fb660bf9055f640b2&X-Amz-SignedHeaders=host&x-id=GetObject)",
        "children": []
      },
      {
        "type": "code",
        "blockId": "17d2297f-7a72-812f-a99a-e53acee68fc9",
        "parent": "```python\n  ↓ここに**戻り値**が入る\nanswer = addtion(5, 7)\n                 ↑  ↑二つの**引数**\n```",
        "children": []
      },
      {
        "type": "callout",
        "blockId": "17d2297f-7a72-812d-8798-e8469882d7ef",
        "parent": "> ⚠️ このaddition関数は標準のPythonでは実行できません",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8164-8dd3-e1fe16d353b5",
        "parent": "これまで使用してきたもので言えば、例えばinput関数は…",
        "children": []
      },
      {
        "type": "code",
        "blockId": "17d2297f-7a72-8141-9a79-cb9ec93816f3",
        "parent": "```python\nn = input(\"年齢を入力してください：\")\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8159-a95d-d55aa8b3edc2",
        "parent": "`\"年齢を入力してください：\"`という**引数（材料）**を画面に表示させたあと、ユーザーが入力した値を**戻り値（成果物）**として返しています。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8191-9794-c420307c712b",
        "parent": "int関数では…",
        "children": []
      },
      {
        "type": "code",
        "blockId": "17d2297f-7a72-81bb-91e5-f41435269ef1",
        "parent": "```python\na = int(\"1\")\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8198-93c5-f7c244de057c",
        "parent": "`\"1\"`という文字列を**引数（材料）**として受け取り、それを整数型に変換したものを**戻り値（成果物）**として返しています。",
        "children": []
      },
      {
        "type": "callout",
        "blockId": "17d2297f-7a72-8172-a1b9-fd377466c9c8",
        "parent": "> ❗ 関数の中には**引数**と**戻り値**のいずれか、またはその両方を**必要としないもの**も存在します。",
        "children": []
      },
      {
        "type": "heading_1",
        "blockId": "17d2297f-7a72-81b1-bf44-c10da1003a78",
        "parent": "# Pythonの組み込み関数",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8158-a3fa-f46a06895691",
        "parent": "Pythonに標準で組み込まれている代表的な関数を紹介します。",
        "children": []
      },
      {
        "type": "table",
        "blockId": "17d2297f-7a72-815c-ac6a-f330871a9bcc",
        "parent": "| **関数名**       | **説明**                 | **使用例**                                                              |\n| ------------- | ---------------------- | -------------------------------------------------------------------- |\n| **`abs()`**   | 絶対値を返す                 | **`abs(-5)`** **=>** **`5`**                                         |\n| **`len()`**   | シーケンス（リストや文字列など）の長さを返す | **`len(\"Python\")`** **=>** **`6`**\n**`lne([1,2,3])`** **=>** **`3`** |\n| **`max()`**   | シーケンスの最大値を返す           | **`max([1,2,3])`** **=>** **`3`**                                    |\n| **`min()`**   | シーケンスの最小値を返す           | **`min([1,2,3])`** **=>** **`1`**                                    |\n| **`sum()`**   | シーケンスの合計値を返す           | **`sum([1,2,3])`** **=>** **`6`**                                    |\n| **`round()`** | 数値を最も近い整数に丸める(四捨五入)    | **`round(3.5)`** **=>** **`4`**                                      |",
        "children": [
          {
            "type": "table_row",
            "blockId": "17d2297f-7a72-81b8-a88c-f8da30eed2cb",
            "parent": "",
            "children": []
          },
          {
            "type": "table_row",
            "blockId": "17d2297f-7a72-8159-91ea-d94a36e5bdef",
            "parent": "",
            "children": []
          },
          {
            "type": "table_row",
            "blockId": "17d2297f-7a72-810d-9227-e7f4e3ffe781",
            "parent": "",
            "children": []
          },
          {
            "type": "table_row",
            "blockId": "17d2297f-7a72-81d7-b14d-de47f58fbdee",
            "parent": "",
            "children": []
          },
          {
            "type": "table_row",
            "blockId": "17d2297f-7a72-8195-96ae-fe3cad2bfb50",
            "parent": "",
            "children": []
          },
          {
            "type": "table_row",
            "blockId": "17d2297f-7a72-81c8-b19a-f46a14b68105",
            "parent": "",
            "children": []
          },
          {
            "type": "table_row",
            "blockId": "17d2297f-7a72-8192-bc9c-f9b52c571114",
            "parent": "",
            "children": []
          }
        ]
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-818e-8d58-c6d7e0377592",
        "parent": "次回からはこのような関数を自作する方法を学びます。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81e3-b8e9-e0c93c46bc81",
        "parent": "",
        "children": [
          {
            "type": "paragraph",
            "blockId": "1a02297f-7a72-809f-8405-e15581d18c01",
            "parent": "",
            "children": []
          }
        ]
      }
    ]
  },
  {
    "type": "child_page",
    "blockId": "17d2297f-7a72-803c-9896-c995152d896a",
    "parent": "## 11. 関数を作ろう！",
    "children": [
      {
        "type": "paragraph",
        "blockId": "3cb48d9d-5c4f-4112-b82a-af657b90e29a",
        "parent": "[前章](/17d2297f7a72801ba2a2dc58b16dcc36)で解説した**関数**は、実は自分で作ることもできます。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "653c9ad9-6a05-4931-a6f4-bc29c2d680e9",
        "parent": "関数を自作すれば、複雑な処理もいちいち書くことなく関数を呼び出すだけで完結するので、プログラムの規模が大きくなってくると非常に便利です。",
        "children": []
      },
      {
        "type": "heading_1",
        "blockId": "04b863ef-c2f1-4f99-8714-23fe9567a4c0",
        "parent": "# 関数の利点",
        "children": []
      },
      {
        "type": "divider",
        "blockId": "95cd214c-e6d2-475c-9ffe-58894eca19dd",
        "parent": "---",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "7ceb6a26-37f5-4ae4-9df5-a793800cf7ce",
        "parent": "例えば、「ユーザーの名前を入力してもらい、その名前を『あなたの名前は {名前} です』の形で出力する」という一連の処理があったとします。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "a914777b-91a9-4d56-a095-abae74b401d1",
        "parent": "```python\nname = input(\"あなたの名前を入力してください；\")\nmassage = \"あなたの名前は\" + name + \"です\"\nprint(massage)\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "43c0d611-c9ac-4c9e-a9b0-d2707793d1f9",
        "parent": "この処理を実行するのが一度や二度だけならそのたびに書けば良いので問題ありません。しかし、1つにプログラム中でこの処理を何十回も書かなければいけなくなると、たった3行の処理といえど記述が大変です。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "06c7f002-1981-4342-a545-609afa223859",
        "parent": "では、この処理を**たった1行で済ませる**ことができれば、少しは負担が減るのではないでしょうか？",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "1412ae16-26a2-4c17-8bcf-f7c286931eaa",
        "parent": "それを実現できるのが**関数の自作**です。",
        "children": []
      },
      {
        "type": "heading_1",
        "blockId": "a5270d11-78bd-4f84-beb8-54f0ce25301a",
        "parent": "# インデント",
        "children": []
      },
      {
        "type": "divider",
        "blockId": "2e55a5cd-d6ad-4f24-89c5-bf4073f44fda",
        "parent": "---",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "8d81172f-2c46-4c82-812c-5a370e0e554d",
        "parent": "早速**関数の自作**に関して紹介をしていきたいところですが、その前に…",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "73d288be-b3ea-4674-acac-17ed09dfd80b",
        "parent": "Pythonを学習するうえで特に重要な概念となる、**インデント**について説明をします。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "5e609181-711b-4745-a5b1-ad44e39c6ba1",
        "parent": "**インデント**とは、別名**字下げ**ともよばれ、行頭を後ろにズラすことです。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "c105d63f-8ce8-4f76-8844-5ca17c9b7e95",
        "parent": "```python\nn = 10        # この行はインデントされていません。\n\nif n > 5:     # この行はインデントされていません。\n\tprint(\"nは5より大きいです。\")     # この行はインデントされています。\nelse:         # この行はインデントされていません。\n\tprint(\"nは5よりです。\")          # この行はインデントされています。\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "712d4727-6d69-47f5-965a-6d758936498b",
        "parent": "このインデントは、基本的に「Tab」キーを押して行います。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "f30ab79b-92dd-4100-b480-986b9340fa35",
        "parent": "エディタを開いて、何度か「Tab」キーを押してみてください。一定間隔で空白が入っていくと思います。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "91470456-ac09-4f1e-8045-f56875efa61d",
        "parent": "行頭にこのタブを入れることを**インデント**というのです。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "6688f1ca-ffb2-4c30-af47-64c3160f1e7c",
        "parent": "実は、Pythonではこの**インデント**がとても重要なのです。Pythonではこのインデントを使って**ブロック**を形作るのです。",
        "children": []
      },
      {
        "type": "heading_2",
        "blockId": "c8d27f70-5c27-4f95-99d7-56b259b7d284",
        "parent": "## ブロック",
        "children": []
      },
      {
        "type": "divider",
        "blockId": "60789c25-6d3f-4dc7-b57d-afb9668ee951",
        "parent": "---",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "921c82c8-e604-4196-8751-4bb433b546a7",
        "parent": "**ブロック**とは、処理のかたまりを定義する単位です。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "07a9e25e-7292-47d7-8d06-f71935d56e9a",
        "parent": "このブロックを使って、`if文`で条件に当てはまるときに実行する処理や、`for文`で繰り返す処理を定義するのです。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "2104380e-4ab7-48e3-8b18-c56b8d3ea58f",
        "parent": "次の画像を見てください。",
        "children": []
      },
      {
        "type": "image",
        "blockId": "313501c3-0aa3-43c5-afaf-57871d537bb5",
        "parent": "![%E3%83%96%E3%83%AD%E3%83%83%E3%82%AF%E3%81%AE%E8%AA%AC%E6%98%8E1.png](https://prod-files-secure.s3.us-west-2.amazonaws.com/f9e367dd-1db7-428f-a2ed-c68a46952d5a/ff5f43f3-5845-45a5-b05a-159c0858b65c/%E3%83%96%E3%83%AD%E3%83%83%E3%82%AF%E3%81%AE%E8%AA%AC%E6%98%8E1.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB466XRHDMNTX%2F20250220%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250220T065951Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEI%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIHsKTl5uBAiUENU%2B%2B5X7uA812twypoorF6izGPlwqfhFAiEAu6J2r2f5gLteSXvQEYFmuWL8NfMvCvgXja5Afm16IuMqiAQIuP%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARAAGgw2Mzc0MjMxODM4MDUiDAKio79guEJb9oF2%2FyrcA%2BAoUqn0gC5tOJRSjvSq6WQ3pppFphq%2Bun4EnjM%2FZLGQmNw4a6dTmBqW4bLGCr8fw3PbZO2ZK0Ip%2FjPTEAnhE5lK47FeIUdcCikDXpcjywbtN3gXd4PFtcmsNFh%2BIHjrpxokqWuGGTQJo2x7p%2Bltr1dr0wZHUDrOXAS5CjKybKtHI%2BHx6Ur%2FkJCLCVD1ALryM%2FpO1lMt75SGRUR%2FAA3BqXHkztQeX2lDzPwst%2FTCySuBUKA6uOEU4%2BaV6%2BZraeTLk45PBQvf%2FucfB6erqXpk3lGz4GABmGkVDE8b6bBRoWLVgnYxl9snxr3b1vi144ZkGHFW%2BeKUZ7%2FRmbKjp37FQf8AXJkKQi%2BMSlS8Ugy0lhrE0zdDyk6IZ0bKWc%2B00seLmoQQBa%2B8lKDMKk6cHOgVSPopUmTplBfEfjkFd8eMxn26dGmwpZmj8jgNkF0sgsA45Vj5mXMzNBj66fcsmlY3d36xNZxg2MrVN%2BLEx9Zm6XCLI%2FqyNSdtVsQMWot%2FxSdC9NN1RcIEVWIaDOsLF26tDp7KxebEfcTT2CMJyaq6ZvWxmfmlKNf2Vt69pIwRpdJghJi%2Fji8S4yOtP1U9LUW0sj928rJ2xkwAO1AAsZPZL0u090ruJvmimH8Y7Z1nMOCd270GOqUBaMvx7wHJn8VZca2j3ZewLntyGzBWQksP2Uao85RzNwwRElbJ%2BZVRKUoBgcaBmjOTU9%2BG%2ByQckql0bVNAjyUgvBCBb%2ByH%2B2UR5ylxXhtbPV9lEwR0pmS3hYS4zRIHcFD%2FeFbSIziyzOVV%2BnwPlmRVv8O%2BBVnaPSPF3Zo8a3MyzvZYWfFT8mBECXJT0LuxqlKjq5KjJugpHEMHsWRosXnqJFnkGKzG&X-Amz-Signature=3cafe9886759fc609d66b6d3a9ef959fae7accb1d34886b1fac89e8d4a666ce8&X-Amz-SignedHeaders=host&x-id=GetObject)",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "f22410c9-e505-4109-b2e8-c09f8634e479",
        "parent": "このように、インデントによって各`if文`や`for文`によって実行される処理を明確化しています。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "7c442d6c-8da7-49ca-bc96-fedd5e79147a",
        "parent": "また、このブロックの中には、さらにブロックを入れてより高度な処理を行うこともできます。以下の例を見てください。",
        "children": []
      },
      {
        "type": "image",
        "blockId": "953a140a-edb9-4f4f-ad81-61696858bb60",
        "parent": "![%E3%83%96%E3%83%AD%E3%83%83%E3%82%AF%E3%81%AE%E8%AA%AC%E6%98%8E2.png](https://prod-files-secure.s3.us-west-2.amazonaws.com/f9e367dd-1db7-428f-a2ed-c68a46952d5a/21a3b75d-94e9-49b0-bcc6-470d59557359/%E3%83%96%E3%83%AD%E3%83%83%E3%82%AF%E3%81%AE%E8%AA%AC%E6%98%8E2.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB466XRHDMNTX%2F20250220%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250220T065951Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEI%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIHsKTl5uBAiUENU%2B%2B5X7uA812twypoorF6izGPlwqfhFAiEAu6J2r2f5gLteSXvQEYFmuWL8NfMvCvgXja5Afm16IuMqiAQIuP%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARAAGgw2Mzc0MjMxODM4MDUiDAKio79guEJb9oF2%2FyrcA%2BAoUqn0gC5tOJRSjvSq6WQ3pppFphq%2Bun4EnjM%2FZLGQmNw4a6dTmBqW4bLGCr8fw3PbZO2ZK0Ip%2FjPTEAnhE5lK47FeIUdcCikDXpcjywbtN3gXd4PFtcmsNFh%2BIHjrpxokqWuGGTQJo2x7p%2Bltr1dr0wZHUDrOXAS5CjKybKtHI%2BHx6Ur%2FkJCLCVD1ALryM%2FpO1lMt75SGRUR%2FAA3BqXHkztQeX2lDzPwst%2FTCySuBUKA6uOEU4%2BaV6%2BZraeTLk45PBQvf%2FucfB6erqXpk3lGz4GABmGkVDE8b6bBRoWLVgnYxl9snxr3b1vi144ZkGHFW%2BeKUZ7%2FRmbKjp37FQf8AXJkKQi%2BMSlS8Ugy0lhrE0zdDyk6IZ0bKWc%2B00seLmoQQBa%2B8lKDMKk6cHOgVSPopUmTplBfEfjkFd8eMxn26dGmwpZmj8jgNkF0sgsA45Vj5mXMzNBj66fcsmlY3d36xNZxg2MrVN%2BLEx9Zm6XCLI%2FqyNSdtVsQMWot%2FxSdC9NN1RcIEVWIaDOsLF26tDp7KxebEfcTT2CMJyaq6ZvWxmfmlKNf2Vt69pIwRpdJghJi%2Fji8S4yOtP1U9LUW0sj928rJ2xkwAO1AAsZPZL0u090ruJvmimH8Y7Z1nMOCd270GOqUBaMvx7wHJn8VZca2j3ZewLntyGzBWQksP2Uao85RzNwwRElbJ%2BZVRKUoBgcaBmjOTU9%2BG%2ByQckql0bVNAjyUgvBCBb%2ByH%2B2UR5ylxXhtbPV9lEwR0pmS3hYS4zRIHcFD%2FeFbSIziyzOVV%2BnwPlmRVv8O%2BBVnaPSPF3Zo8a3MyzvZYWfFT8mBECXJT0LuxqlKjq5KjJugpHEMHsWRosXnqJFnkGKzG&X-Amz-Signature=853d18862e56dc3d8c321980dbe5998043705689c136a3c08d1680cd520962f2&X-Amz-SignedHeaders=host&x-id=GetObject)",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "42b3eaf8-cf59-434d-9f9e-9e3d098566c0",
        "parent": "この例では、`for文`に属するブロックの中に、`if文`に属するブロックが入っています。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "6f650eaa-2cfb-4d8a-b36e-db3822cf4ce7",
        "parent": "",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "75bd08e4-41c3-42ff-b46c-9824e6617721",
        "parent": "また、`if文`や`for文`の下などのインデントが必要な部分にインデントを入れないと、以下のようなエラーが起こって実行ができなくなってしまいます。気をつけましょう！",
        "children": []
      },
      {
        "type": "code",
        "blockId": "007ab9f6-c700-43db-a8a5-c109ddd52039",
        "parent": "```python\n# インデントを入れ忘れたプログラム\nn = 10\n\nif n > 5:\nprint(\"nは5より大きいです。\")\nelse:\nprint(\"nは5よりです。\")\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "6a059f4e-2d28-40b2-a8ba-9a0abeca575f",
        "parent": "**インデントを入れ忘れたことによるエラー文**",
        "children": []
      },
      {
        "type": "code",
        "blockId": "1a6b524a-434b-41c4-b601-2480afa24968",
        "parent": "```text\n  File \"Main.py\", line 5\n    print(\"nは5より大きいです。\")\n    ^\nIndentationError: expected an indented block after 'if' statement on line 4\n```",
        "children": []
      },
      {
        "type": "heading_1",
        "blockId": "c348383b-96bb-4403-94ce-464271cc1364",
        "parent": "# 関数の自作",
        "children": []
      },
      {
        "type": "divider",
        "blockId": "e4766488-545d-4ea1-8977-a36fb3fff6f1",
        "parent": "---",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "521237c5-324a-4bdc-ab90-ad529c96d67f",
        "parent": "関数は以下のように記述することで作成ができます。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "2eaa01a7-5fe5-45ba-86bf-1b1d85e5a34c",
        "parent": "```python\ndef 関数の名前():\n    関数を呼び出したときに行う処理\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "bd7020c5-3dde-4663-8551-0d23cb177cab",
        "parent": "[上記](/17d2297f7a72803c9896c995152d896a)の名前のプログラムを関数にしようとすると、以下のようになります。これを**関数の宣言**と呼びます。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "21394446-cfd5-4b0b-a9fe-a3ed04b88ed4",
        "parent": "```python\ndef print_your_name():\n    name = input(\"あなたの名前を入力してください；\")\n    massage = \"あなたの名前は\" + name + \"です\"\n    print(massage)\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "0eb664f3-73d7-4d22-8306-58ddc726078b",
        "parent": "この関数で実行される範囲も、先述のインデントで**ブロック**を作って定義します。",
        "children": []
      },
      {
        "type": "image",
        "blockId": "a7e8c930-016d-48e2-a0c9-f7e1801adf08",
        "parent": "![%E9%96%A2%E6%95%B0%E3%83%96%E3%83%AD%E3%83%83%E3%82%AF%E3%81%AE%E7%94%BB%E5%83%8F.png](https://prod-files-secure.s3.us-west-2.amazonaws.com/f9e367dd-1db7-428f-a2ed-c68a46952d5a/6848a678-86e1-49dc-b0aa-fcece24999af/%E9%96%A2%E6%95%B0%E3%83%96%E3%83%AD%E3%83%83%E3%82%AF%E3%81%AE%E7%94%BB%E5%83%8F.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB466XRHDMNTX%2F20250220%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250220T065951Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEI%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIHsKTl5uBAiUENU%2B%2B5X7uA812twypoorF6izGPlwqfhFAiEAu6J2r2f5gLteSXvQEYFmuWL8NfMvCvgXja5Afm16IuMqiAQIuP%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARAAGgw2Mzc0MjMxODM4MDUiDAKio79guEJb9oF2%2FyrcA%2BAoUqn0gC5tOJRSjvSq6WQ3pppFphq%2Bun4EnjM%2FZLGQmNw4a6dTmBqW4bLGCr8fw3PbZO2ZK0Ip%2FjPTEAnhE5lK47FeIUdcCikDXpcjywbtN3gXd4PFtcmsNFh%2BIHjrpxokqWuGGTQJo2x7p%2Bltr1dr0wZHUDrOXAS5CjKybKtHI%2BHx6Ur%2FkJCLCVD1ALryM%2FpO1lMt75SGRUR%2FAA3BqXHkztQeX2lDzPwst%2FTCySuBUKA6uOEU4%2BaV6%2BZraeTLk45PBQvf%2FucfB6erqXpk3lGz4GABmGkVDE8b6bBRoWLVgnYxl9snxr3b1vi144ZkGHFW%2BeKUZ7%2FRmbKjp37FQf8AXJkKQi%2BMSlS8Ugy0lhrE0zdDyk6IZ0bKWc%2B00seLmoQQBa%2B8lKDMKk6cHOgVSPopUmTplBfEfjkFd8eMxn26dGmwpZmj8jgNkF0sgsA45Vj5mXMzNBj66fcsmlY3d36xNZxg2MrVN%2BLEx9Zm6XCLI%2FqyNSdtVsQMWot%2FxSdC9NN1RcIEVWIaDOsLF26tDp7KxebEfcTT2CMJyaq6ZvWxmfmlKNf2Vt69pIwRpdJghJi%2Fji8S4yOtP1U9LUW0sj928rJ2xkwAO1AAsZPZL0u090ruJvmimH8Y7Z1nMOCd270GOqUBaMvx7wHJn8VZca2j3ZewLntyGzBWQksP2Uao85RzNwwRElbJ%2BZVRKUoBgcaBmjOTU9%2BG%2ByQckql0bVNAjyUgvBCBb%2ByH%2B2UR5ylxXhtbPV9lEwR0pmS3hYS4zRIHcFD%2FeFbSIziyzOVV%2BnwPlmRVv8O%2BBVnaPSPF3Zo8a3MyzvZYWfFT8mBECXJT0LuxqlKjq5KjJugpHEMHsWRosXnqJFnkGKzG&X-Amz-Signature=7ab93804c409f42f41140d74d6c34b791811454561f2fd785aa5fd0ce737c776&X-Amz-SignedHeaders=host&x-id=GetObject)",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "310ad985-92c4-4517-8e23-8f48d573a9ed",
        "parent": "この関数を実行するには、関数を宣言したのと同じファイル内で、`print_your_name()`を呼び出します。試しに、3回連続で呼び出してみましょう。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "51c9acb7-f441-4a58-8876-e4462e2a69b7",
        "parent": "```python\ndef print_your_name():\n    name = input(\"あなたの名前を入力してください；\")\n    massage = \"あなたの名前は\" + name + \"です\"\n    print(massage)\n\nprint_your_name()\nprint_your_name()\nprint_your_name()\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "5599fa26-a4de-4d3a-a173-b481c947dc77",
        "parent": "するとこのように、「名前を入力してもらい、表示する」という一連の処理が3回連続で実行されました。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "1bddda33-5507-4339-b845-c66af64547e1",
        "parent": "```text\nあなたの名前を入力してください；Tanaka\nあなたの名前はTanakaです\nあなたの名前を入力してください；Sato\nあなたの名前はSatoです\nあなたの名前を入力してください；Nishiura\nあなたの名前はNishiuraです\n```",
        "children": []
      },
      {
        "type": "heading_1",
        "blockId": "aba45667-6403-4f33-a347-68a5faa221c7",
        "parent": "# 引数を受け取る関数",
        "children": []
      },
      {
        "type": "divider",
        "blockId": "6b6581a6-ef09-489c-8998-538db85625b3",
        "parent": "---",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "179ea121-8ded-4943-b252-93707ac9a7ba",
        "parent": "先程の`print_your_name()`関数は、引数も戻り値もない関数でした。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "a11d9161-af1d-4f84-b4da-9d6fbdac0fcf",
        "parent": "```python\n↓戻り値がない\n print_your_name()\n                ↑引数もない\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "33d9abf5-a56f-4487-bcea-70e02eb9239b",
        "parent": "引数を受け取って、その引数をもとに処理を行う関数を作りたいときは、次のように書きます。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "41afa2b3-2d2a-4e27-939d-17b22828022c",
        "parent": "```python\ndef 関数の名前(引数を受け取る変数):\n    関数を呼び出したときに行う処理\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "8c979cf6-3991-4c3f-84fc-ebab660e69d0",
        "parent": "[引数も戻り値もない関数](/17d2297f7a72803c9896c995152d896a)から増えた部分は、「**引数を受け取る変数**」です。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "5d6e94f9-3869-448b-a29e-e72ce19b63b3",
        "parent": "例えば、「三角形の底辺と高さを受け取り、その面積を求めて表示する」という処理内容の関数を作るときには、以下のように書きます。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "e51934ae-c66b-4380-80eb-72f17c8b43ee",
        "parent": "```python\ndef find_triangle_area(tei, taka):  #受け取った底辺と高さを変数 tei と taka とする\n    area = tei * taka / 2\n    print(\"底辺\" + str(tei) + \"、高さ\" + str(taka) + \"の三角形の面積は\" + str(area) + \"です\")\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "d182a408-e568-4cc9-b52b-5a7062f35faa",
        "parent": "この関数を実行するには、以下のように書きます。底辺が3、高さが5だとすると…",
        "children": []
      },
      {
        "type": "code",
        "blockId": "6dc3143e-6bfa-45d1-ac4d-d43ed0e98912",
        "parent": "```python\nfind_triangle_area(3, 5)\n\t\t\t\t\t\t\t\t\t ↑  ↑ この二つが引数！\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "8858e263-0dfd-478d-baea-b49043a54cde",
        "parent": "こうすることで、`find_triangle_area()`関数の **引数を受け取る変数** である`tei`に3、`taka`に5が格納され、関数の中身が実行されます。よって、実行結果は以下のようになります。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "b5dd3fce-279e-469b-bdd9-8026e67b9f73",
        "parent": "```text\n底辺3、高さ5の三角形の面積は7.5です\n```",
        "children": []
      },
      {
        "type": "heading_1",
        "blockId": "6843c12a-d01f-464c-b951-d359dfaa038b",
        "parent": "# 戻り値を返す関数",
        "children": []
      },
      {
        "type": "divider",
        "blockId": "e117b94a-e642-410a-92d4-7296498258ec",
        "parent": "---",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "f604f7c5-2c8d-42a6-abb0-5d2471ff8a8a",
        "parent": "さらに、戻り値を返す関数の作成方法も紹介します。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "4d13ccb9-d23f-4340-824a-b173b05573a1",
        "parent": "```python\ndef 関数の名前(引数を受け取る変数):\n    関数を呼び出したときに行う処理\n    return 戻り値として返したい値\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "31440b45-f4f6-4e77-b5fb-eb8cd330118c",
        "parent": "**引数を受け取る関数**から増えた部分は「**return 戻り値として返したい値**」ですね。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "f63db0c0-491a-4e45-9dba-45166e74f44c",
        "parent": "先程の[三角形の面積を求めて表示する関数](/17d2297f7a72803c9896c995152d896a)を、「三角形の面積を求め、面積を戻り値として返す関数」に作り変えると、以下のようになります。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "c68c5647-00b9-4d31-aa67-0275657c429e",
        "parent": "```python\ndef find_triangle_area(tei, taka):  #受け取った底辺と高さを変数 tei と taka とする\n    area = tei * taka / 2\n    return area     #変数 area を戻り値として返す\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "b4987457-224e-468f-8fa6-ba5f777820bf",
        "parent": "この関数を実行し、結果をprint関数で表示するには以下のようになります。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "a264616d-bf0c-4be8-8e9c-4a946587874a",
        "parent": "```python\ndef find_triangle_area(tei, taka):\n    area = tei * taka / 2\n    return area\n\ntriangle_area = find_triangle_area(5, 3)\nprint(triangle_area)\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "f83e2325-c396-4c60-890d-c02a7498a398",
        "parent": "これにより、find_triangle_area関数は受け取った底辺と高さをもとに三角形の面積を求め、その結果を戻り値として変数triangle_areaに代入するという働きをしてくれます。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "0d8e69b4-d995-4b99-b280-13fa1a8055f3",
        "parent": "",
        "children": [
          {
            "type": "paragraph",
            "blockId": "1a02297f-7a72-807d-bdea-ff2d5e81649a",
            "parent": "",
            "children": []
          }
        ]
      },
      {
        "type": "paragraph",
        "blockId": "69c7f28b-8963-4ad0-8228-d2fb1d82e720",
        "parent": "",
        "children": []
      }
    ]
  },
  {
    "type": "child_page",
    "blockId": "17d2297f-7a72-80b2-8327-c3d11e6fa275",
    "parent": "## 練習問題5",
    "children": [
      {
        "type": "heading_1",
        "blockId": "17d2297f-7a72-817e-b179-f543f7ad82bb",
        "parent": "# 問題1",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8141-968a-d7de5ac05d6b",
        "parent": "Pythonの組み込み関数を用いて、次のリストの要素数（長さ）、最大値、最小値、合計値を出力してください。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "17d2297f-7a72-8107-9e31-ca9b74ff4940",
        "parent": "```python\nnumbers = [34, -12, 77, 5, -49, 99, 23, -8, 45, 66, -32, 18]\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8184-a647-c08167e6304f",
        "parent": "※プログラムは「prac5-1.py」として保存",
        "children": []
      },
      {
        "type": "heading_3",
        "blockId": "17d2297f-7a72-81bf-a7a3-e381abc2b930",
        "parent": "### 期待する出力結果",
        "children": []
      },
      {
        "type": "code",
        "blockId": "17d2297f-7a72-817f-98b4-d28c1779f04f",
        "parent": "```text\nリストの要素数は12個です\nリストの最大値は99です\nリストの最小値は-49です\nリストの合計値は266です\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-818b-b91a-cc8857ca5141",
        "parent": "",
        "children": []
      },
      {
        "type": "divider",
        "blockId": "17d2297f-7a72-81d1-aa5b-fd97cc417db8",
        "parent": "---",
        "children": []
      },
      {
        "type": "heading_1",
        "blockId": "17d2297f-7a72-8138-a237-d884569c8395",
        "parent": "# 問題2",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8179-873b-d7a26fb2c25a",
        "parent": "ユーザーから入力された台形の上底、下底と高さをもとに、台形の面積を求め出力してください。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-816b-8d1d-fe980ae8c2f8",
        "parent": "ただし、引数として上底、下底と高さを受け取り、戻り値としてその台形の面積を返すfind_daikei関数を作成し、プログラム中で使用してください。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8127-8cc0-da7b463eee55",
        "parent": "※プログラムは「prac5-2.py」として保存",
        "children": []
      },
      {
        "type": "heading_3",
        "blockId": "17d2297f-7a72-8142-b102-e0abe1cdc345",
        "parent": "### 期待する出力結果",
        "children": []
      },
      {
        "type": "code",
        "blockId": "17d2297f-7a72-8137-8b46-c8fd866789b4",
        "parent": "```text\n台形の面積を求めます\n上底を入力 : 7\n下底を入力 : 5\n高さを入力 : 3\n面積は 18.0 です\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8179-b0b9-d97f86d2c6d4",
        "parent": "",
        "children": []
      },
      {
        "type": "divider",
        "blockId": "17d2297f-7a72-8144-a848-ddc7f53872fa",
        "parent": "---",
        "children": []
      },
      {
        "type": "heading_1",
        "blockId": "17d2297f-7a72-8170-be08-e2d7cb194961",
        "parent": "# 問題3",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8130-90eb-d7e155099a71",
        "parent": "引数として受け取ったリストの平均値を求めて返す`find_average`関数を定義し、それを使用して以下のリストの平均値を出力してください。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "17d2297f-7a72-8172-b7d4-c06b7e2fd320",
        "parent": "```python\nnumbers = [-2, 88, -16, 45, 72, 31, -8, 94, 3, 60]\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8164-a7d3-c478c5c59599",
        "parent": "※プログラムは「prac5-3.py」として保存",
        "children": []
      },
      {
        "type": "heading_3",
        "blockId": "17d2297f-7a72-81db-b306-d31bf60740cb",
        "parent": "### 期待する出力結果",
        "children": []
      },
      {
        "type": "code",
        "blockId": "17d2297f-7a72-8173-a21a-e69df7659f0e",
        "parent": "```text\nリストの平均値は36.7です\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-810b-b4f9-e92333f8d1a2",
        "parent": "",
        "children": []
      },
      {
        "type": "divider",
        "blockId": "17d2297f-7a72-810f-a563-d0d43577af52",
        "parent": "---",
        "children": []
      },
      {
        "type": "heading_1",
        "blockId": "17d2297f-7a72-815e-a9ef-e068016e8ed9",
        "parent": "# 発展問題（任意）",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8111-975c-db81b9bc0f52",
        "parent": "引数として受け取ったリストの最大値を返す`find_max`関数と、最小値を返す`find_min`関数を定義し、それを使用して以下のリストの最大値、最小値を求め表示してください",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8142-bcc3-fed73895674e",
        "parent": "ただし、自作関数内でPythonの組み込み関数（`max`関数など）は使用しないでください",
        "children": []
      },
      {
        "type": "code",
        "blockId": "17d2297f-7a72-8134-8411-e074d79c12c7",
        "parent": "```python\nnumbers = [-46, 82, 17, -33, 59, 6, 91, -12, 40]\n\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8187-be1a-f7e65def2605",
        "parent": "※プログラムは「prac5-ex.py」として保存",
        "children": []
      },
      {
        "type": "heading_3",
        "blockId": "17d2297f-7a72-8125-be68-e1ceb651c42b",
        "parent": "### 期待する出力結果",
        "children": []
      },
      {
        "type": "code",
        "blockId": "17d2297f-7a72-8167-8d66-fa30427e4b62",
        "parent": "```text\nリスト [-46, 82, 17, -33, 59, 6, 91, -12, 40] の最大値は 91 、最小値は -46 です\n```",
        "children": []
      },
      {
        "type": "toggle",
        "blockId": "17d2297f-7a72-81d2-9bc4-c007ce2a693b",
        "parent": "**ヒント1**",
        "children": [
          {
            "type": "paragraph",
            "blockId": "17d2297f-7a72-8148-9068-d438c9dfd8c2",
            "parent": "仮の最大値（最小値）を置く",
            "children": []
          }
        ]
      },
      {
        "type": "toggle",
        "blockId": "17d2297f-7a72-811d-abf2-f3d8fea65679",
        "parent": "**ヒント2**",
        "children": [
          {
            "type": "paragraph",
            "blockId": "17d2297f-7a72-814b-935a-efdf3c2cd8b1",
            "parent": "仮の最大値（最小値）よりリストの各値が大きい（小さい）場合に、仮の最大値（最小値）をそのリストの値に置き換える",
            "children": []
          }
        ]
      },
      {
        "type": "toggle",
        "blockId": "17d2297f-7a72-81ac-a74c-e6fa573cdfd0",
        "parent": "**ヒント3**",
        "children": [
          {
            "type": "paragraph",
            "blockId": "17d2297f-7a72-8132-94b6-ea2ac799cba2",
            "parent": "【最大値の場合】",
            "children": []
          },
          {
            "type": "code",
            "blockId": "17d2297f-7a72-81c4-91ea-d915cf41f1c2",
            "parent": "```python\n仮の最大値を置く（リストの最初の値がオススメ）\n\nリストの中を一つずつ調べる\n\t仮の最大値よりも大きければ、リストの値と置き換える\n```",
            "children": []
          }
        ]
      },
      {
        "type": "heading_1",
        "blockId": "17d2297f-7a72-81be-960e-c35a9ee08a2c",
        "parent": "# 進捗アンケート",
        "children": []
      },
      {
        "type": "divider",
        "blockId": "17d2297f-7a72-8185-9b7f-c0c5aeac7781",
        "parent": "---",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8181-8e4a-f5644d53e620",
        "parent": "練習問題５が終了した人は、以下のGoogleフォームに回答してください。",
        "children": []
      },
      {
        "type": "synced_block",
        "blockId": "17d2297f-7a72-8174-aa90-c9d138269f8c",
        "parent": "",
        "children": []
      },
      {
        "type": "quote",
        "blockId": "17d2297f-7a72-81f3-a5ec-dbcdbaa7e9bf",
        "parent": "> ",
        "children": [
          {
            "type": "bookmark",
            "blockId": "17d2297f-7a72-81b8-a628-cbea702397b6",
            "parent": "[bookmark](https://forms.gle/Yuu2gVMqvifcKK3v9)",
            "children": []
          },
          {
            "type": "paragraph",
            "blockId": "17d2297f-7a72-81cd-ae2f-ce00a7fc3214",
            "parent": "",
            "children": []
          }
        ]
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81fd-bd4a-fc5ce01e1f27",
        "parent": "",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8121-b81a-ef6188095972",
        "parent": "",
        "children": []
      }
    ]
  },
  {
    "type": "child_page",
    "blockId": "17d2297f-7a72-807c-8ce6-deb2ca7a16d6",
    "parent": "## 12. クラス",
    "children": [
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81f7-bc00-ea2d094aab5e",
        "parent": "　今回は**クラス（class）**について説明します。",
        "children": []
      },
      {
        "type": "heading_2",
        "blockId": "17d2297f-7a72-81ea-aa6e-c9b6346c8995",
        "parent": "## クラスの概要",
        "children": []
      },
      {
        "type": "divider",
        "blockId": "17d2297f-7a72-8112-86e3-e920dd9407a7",
        "parent": "---",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81f9-a979-e0ed014b99a7",
        "parent": "はじめに、クラスの概要について説明します。\nクラスは、**データ（属性）**と**動作（メソッド）**をひとまとめにして定義できます。\nクラスの所持するデータは**変数**であり、クラスの動作を定めるのは**関数**です。\nつまり、クラスは、複数の変数と、それを操作するための複数の関数を一つにまとめて定義できる構造と言えます。\n",
        "children": []
      },
      {
        "type": "image",
        "blockId": "17d2297f-7a72-81c7-b42a-cb60369f9529",
        "parent": "![%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%BC%E3%83%B3%E3%82%B7%E3%83%A7%E3%83%83%E3%83%88_2024-11-19_19.02.09.png](https://prod-files-secure.s3.us-west-2.amazonaws.com/f9e367dd-1db7-428f-a2ed-c68a46952d5a/8bcc38b6-4ccf-40ce-acae-9b2eef897de7/%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%BC%E3%83%B3%E3%82%B7%E3%83%A7%E3%83%83%E3%83%88_2024-11-19_19.02.09.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB4662XO2NDOH%2F20250220%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250220T065956Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEI%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDxSxmhUAj9aqev%2BivWjVyfNsUbG29ikxGJQmqZDKZJSAIhAOitOHBbrmKJ5N%2Fwyv2mogCx59Z%2BBBzBmseoUsi5lWv8KogECLj%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQABoMNjM3NDIzMTgzODA1IgwyYO3vYs6O%2Fgq3JuEq3AP1JBiMgeBCK2DpzVnXhmo7thvm7FaDqcXbTpsUPy7rJiQ6zll43bhlYHAFtDqAbZAjp8OFOY5%2BVLnACb3bdkjYFKsaiWDu7UTiZII8Dgyso3mMblcjekmOyCqrxnXh8XEoewfTAXHTzOq%2BViAwCOW9bEwZywM%2FLBxbnhi%2BqDQ0eZY3Itl2GuNueAeno3THW%2BH46xdSoM7OtVZEyEw%2FTrGlfLFs3YkcnWKFoZhbojVZbUrx6QVzhwnChiQxIFztrCt8DKN03ALM0o%2FDH4kMGzIwemXDoLAlKDiZjXywMRR9oPnMCfbysHPVs7u%2Fx98d7VR7hoHACwQuA3yYofDne3mL9WBC8g7cLWtZuCVXJf7Od%2FiNcd8lW%2BOrm5XavPm7C6w3PHBtdhgNgldttwLOqgKU9rqgLVqvH7Ea1GE0eDHYs%2BaIra68gFr3eZ%2FH8o5K%2FzpI22UYETxcoV5zfnbmpWek14IhCnl9Nr21vNi9YuZEsNWO54%2FfMoa0rlMRKLJbj0c1V7KU2LJLhJkeaDfDr2SXPMOGwD2j65tz%2Fwje%2Bf7cZISD%2B8qgAQac7gGax%2Bq1KLA5hWKUo2RSMPTBhrgOcFexnk9figHFfaqscjmTl7hWnESUpGhi1zWpiP6aBTCHntu9BjqkAYtYG7JJ9ZF9hfq9WNO1FvzBOEzNfE9rX0IJmtQWfjQbuFtLtGPVfsvnhH9E49MXXe0JRwIUe7sxvyzKQgAvQOxw18Lcv%2FHoNBaO6WkROGWz5eNWCIeiggz9YrJYQ3V06C8ZzgNC27JrQR6fAhaJdzn%2FDEfGhOllT1DhdNRl9udQM1sKhFvVsdqbhPqf2E36Cxobaf3Oky7Hlir3%2BHWwe5APw84M&X-Amz-Signature=ec74f3515bed0fcdd38357a50d75e8c54e8df7c5bf0f35019e0a392141c8b182&X-Amz-SignedHeaders=host&x-id=GetObject)",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8151-9b30-c25fd6c55c26",
        "parent": "また、クラスを理解する上で重要な点は、クラスはあくまで「データの形式を定めているだけである」という点です。クラス自体は形式を定めただけのものであり、 実体がありません。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8161-be69-fe19c947075f",
        "parent": "クラスはデータの形式を定めたものであり、クラスをもとに実際のデータを作ることができます。\nクラスの形式に当てはめた実際にデータを持つものを**インスタンス**と呼びます。また、インスタンスは、「実際のもの」であるという点から、**オブジェクト**と呼ばれることもあります。",
        "children": []
      },
      {
        "type": "image",
        "blockId": "17d2297f-7a72-8148-b1e7-fafd093757b3",
        "parent": "![%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%BC%E3%83%B3%E3%82%B7%E3%83%A7%E3%83%83%E3%83%88_2024-11-19_19.20.22.png](https://prod-files-secure.s3.us-west-2.amazonaws.com/f9e367dd-1db7-428f-a2ed-c68a46952d5a/41a940c5-2815-439b-be6b-d17a92620162/%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%BC%E3%83%B3%E3%82%B7%E3%83%A7%E3%83%83%E3%83%88_2024-11-19_19.20.22.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB4662XO2NDOH%2F20250220%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250220T065956Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEI%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDxSxmhUAj9aqev%2BivWjVyfNsUbG29ikxGJQmqZDKZJSAIhAOitOHBbrmKJ5N%2Fwyv2mogCx59Z%2BBBzBmseoUsi5lWv8KogECLj%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQABoMNjM3NDIzMTgzODA1IgwyYO3vYs6O%2Fgq3JuEq3AP1JBiMgeBCK2DpzVnXhmo7thvm7FaDqcXbTpsUPy7rJiQ6zll43bhlYHAFtDqAbZAjp8OFOY5%2BVLnACb3bdkjYFKsaiWDu7UTiZII8Dgyso3mMblcjekmOyCqrxnXh8XEoewfTAXHTzOq%2BViAwCOW9bEwZywM%2FLBxbnhi%2BqDQ0eZY3Itl2GuNueAeno3THW%2BH46xdSoM7OtVZEyEw%2FTrGlfLFs3YkcnWKFoZhbojVZbUrx6QVzhwnChiQxIFztrCt8DKN03ALM0o%2FDH4kMGzIwemXDoLAlKDiZjXywMRR9oPnMCfbysHPVs7u%2Fx98d7VR7hoHACwQuA3yYofDne3mL9WBC8g7cLWtZuCVXJf7Od%2FiNcd8lW%2BOrm5XavPm7C6w3PHBtdhgNgldttwLOqgKU9rqgLVqvH7Ea1GE0eDHYs%2BaIra68gFr3eZ%2FH8o5K%2FzpI22UYETxcoV5zfnbmpWek14IhCnl9Nr21vNi9YuZEsNWO54%2FfMoa0rlMRKLJbj0c1V7KU2LJLhJkeaDfDr2SXPMOGwD2j65tz%2Fwje%2Bf7cZISD%2B8qgAQac7gGax%2Bq1KLA5hWKUo2RSMPTBhrgOcFexnk9figHFfaqscjmTl7hWnESUpGhi1zWpiP6aBTCHntu9BjqkAYtYG7JJ9ZF9hfq9WNO1FvzBOEzNfE9rX0IJmtQWfjQbuFtLtGPVfsvnhH9E49MXXe0JRwIUe7sxvyzKQgAvQOxw18Lcv%2FHoNBaO6WkROGWz5eNWCIeiggz9YrJYQ3V06C8ZzgNC27JrQR6fAhaJdzn%2FDEfGhOllT1DhdNRl9udQM1sKhFvVsdqbhPqf2E36Cxobaf3Oky7Hlir3%2BHWwe5APw84M&X-Amz-Signature=cfbdb66994d43903f5ead898ddacf72c88e97d6cce880f55524888b019a7bbfa&X-Amz-SignedHeaders=host&x-id=GetObject)",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8174-8bb4-c6e0b80e57af",
        "parent": "上記の説明だけでは想像がつかない人も多いと思うので、クラスを「家の設計図」にたとえて説明します。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8179-8055-f4a8c08155d5",
        "parent": "**クラスは「家の設計図」**",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81cf-9c01-de57748e6a44",
        "parent": "クラスは家の設計図のようなものです。「どんな部屋があるか」「ドアや窓の位置」「家具の種類」などが決まっています。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8199-9ba5-e53765767658",
        "parent": "**動作（メソッド）は「家の設備」**",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81dd-b732-d5d9a8354983",
        "parent": "家には設備がありますよね？たとえば「ドアを開ける」「電気をつける」など。これがクラスの動作（**メソッド）**にあたります。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81a6-843e-fcbfbe064dfc",
        "parent": "**インスタンスは「実際に建てた家」**",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-818d-9d8b-cd6892b9cf94",
        "parent": "設計図を元に、実際に建てた家がインスタンスです。同じ設計図を使えば、たくさんの同じ構造の家を建てることができます。しかし、家具の種類や住所などはそれぞれ違います。また、別の設計図を使えば、別の構造の家がたちます。",
        "children": []
      },
      {
        "type": "image",
        "blockId": "17d2297f-7a72-81fa-b1a5-c5a0d628f9ac",
        "parent": "![%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%BC%E3%83%B3%E3%82%B7%E3%83%A7%E3%83%83%E3%83%88_2024-11-19_19.38.38.png](https://prod-files-secure.s3.us-west-2.amazonaws.com/f9e367dd-1db7-428f-a2ed-c68a46952d5a/95eda14b-e66e-4064-9c51-47054b57adc2/%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%BC%E3%83%B3%E3%82%B7%E3%83%A7%E3%83%83%E3%83%88_2024-11-19_19.38.38.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB4662XO2NDOH%2F20250220%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250220T065956Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEI%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDxSxmhUAj9aqev%2BivWjVyfNsUbG29ikxGJQmqZDKZJSAIhAOitOHBbrmKJ5N%2Fwyv2mogCx59Z%2BBBzBmseoUsi5lWv8KogECLj%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQABoMNjM3NDIzMTgzODA1IgwyYO3vYs6O%2Fgq3JuEq3AP1JBiMgeBCK2DpzVnXhmo7thvm7FaDqcXbTpsUPy7rJiQ6zll43bhlYHAFtDqAbZAjp8OFOY5%2BVLnACb3bdkjYFKsaiWDu7UTiZII8Dgyso3mMblcjekmOyCqrxnXh8XEoewfTAXHTzOq%2BViAwCOW9bEwZywM%2FLBxbnhi%2BqDQ0eZY3Itl2GuNueAeno3THW%2BH46xdSoM7OtVZEyEw%2FTrGlfLFs3YkcnWKFoZhbojVZbUrx6QVzhwnChiQxIFztrCt8DKN03ALM0o%2FDH4kMGzIwemXDoLAlKDiZjXywMRR9oPnMCfbysHPVs7u%2Fx98d7VR7hoHACwQuA3yYofDne3mL9WBC8g7cLWtZuCVXJf7Od%2FiNcd8lW%2BOrm5XavPm7C6w3PHBtdhgNgldttwLOqgKU9rqgLVqvH7Ea1GE0eDHYs%2BaIra68gFr3eZ%2FH8o5K%2FzpI22UYETxcoV5zfnbmpWek14IhCnl9Nr21vNi9YuZEsNWO54%2FfMoa0rlMRKLJbj0c1V7KU2LJLhJkeaDfDr2SXPMOGwD2j65tz%2Fwje%2Bf7cZISD%2B8qgAQac7gGax%2Bq1KLA5hWKUo2RSMPTBhrgOcFexnk9figHFfaqscjmTl7hWnESUpGhi1zWpiP6aBTCHntu9BjqkAYtYG7JJ9ZF9hfq9WNO1FvzBOEzNfE9rX0IJmtQWfjQbuFtLtGPVfsvnhH9E49MXXe0JRwIUe7sxvyzKQgAvQOxw18Lcv%2FHoNBaO6WkROGWz5eNWCIeiggz9YrJYQ3V06C8ZzgNC27JrQR6fAhaJdzn%2FDEfGhOllT1DhdNRl9udQM1sKhFvVsdqbhPqf2E36Cxobaf3Oky7Hlir3%2BHWwe5APw84M&X-Amz-Signature=833d996eb83cb0caa3f5f9238bc4d0bfa5894c92eb4e52a98900f37fa599ae9c&X-Amz-SignedHeaders=host&x-id=GetObject)",
        "children": []
      },
      {
        "type": "heading_2",
        "blockId": "17d2297f-7a72-81d5-8357-de26042b57e2",
        "parent": "## クラスを定義する",
        "children": []
      },
      {
        "type": "divider",
        "blockId": "17d2297f-7a72-8114-92bd-c30a7c8e80eb",
        "parent": "---",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81ae-8a21-d703c7276b87",
        "parent": "　例として、生徒の名前とテストの点数のデータを管理するための`Student`クラスを定義します。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8193-a3ae-edbf68df66b6",
        "parent": "`Student`クラスには属性として、生徒の名前を保持する`name`と、生徒の点数を保持する`score`を持たせます。そして、メソッドとして、生徒の名前と点数を表示する`display`メソッドを持たせます。",
        "children": []
      },
      {
        "type": "callout",
        "blockId": "17d2297f-7a72-81d2-bdae-cc35b3b5e10f",
        "parent": "> Studentクラスのイメージ図  \n> ![%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%BC%E3%83%B3%E3%82%B7%E3%83%A7%E3%83%83%E3%83%88_2024-11-20_9.33.48.png](https://prod-files-secure.s3.us-west-2.amazonaws.com/f9e367dd-1db7-428f-a2ed-c68a46952d5a/7fffd0be-723a-4dd7-b3ef-d73697ea9321/%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%BC%E3%83%B3%E3%82%B7%E3%83%A7%E3%83%83%E3%83%88_2024-11-20_9.33.48.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB4665IU7QLTK%2F20250220%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250220T065957Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEI%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDhRZ1U%2FlSmoRB4h370nteqwnUW9jy7Ma9vFxPfPiCRKwIhAJu10qaNp88bORKn01TugOytrAh4XHEo%2BsoVu4ob4cgNKogECLj%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQABoMNjM3NDIzMTgzODA1IgxZErBJdQ01ijHR%2B5gq3APBT0wdtohlJAv6Hei6e7ZGqLvz20d4IpnermyQHNk45LncibRfk%2B1zl8oS1bk4eTTi5RWAG5DX3yEvI8%2FbhTnEFDLmPdWghwrMwvVGFgF6Wx07oSSlv85KLt%2FceI6x26hWH3u4%2BoN2TWTw1xXTrsr7bLaZeBzf%2BIu%2BHFSJ%2B%2FijuXhvqObxEBgSPOOi5LUn2dLggk%2B6D6%2BLbDhB6L29h2VOA0sPkxY0tn%2BldYYrL52cvubcroJlsa1ZcB9nY2otZI298v3SBTqs8R%2BveUsbcJpfsy4v%2FF%2BKvO0tm6mQEU4rZ10g86gboJBR5MoadQBPvu4ewvwS%2Ffc2WcTfiG6PIrqQg%2B6dpAlEaemSjusfWAv%2B%2FVwrdrm29n4CaVCNX0XVOC%2FnJLidnfuJsIMyyNZlY%2FbP9UaU%2BXBLcniUzk85B01tfaPcRkDly84K6z76e%2Fv%2FF4FMv5pFfyv3xMs6w7%2BByP9mA7jowPJ8n6S%2FhyAmFk2mmvqjHnilO92TJ5MMRtpzH1TGDKcCyh8l8vBaPEM9TkNy7Nark7hfN5F%2BtWwdlXQ8rsa0rIbj1a8DXAYpNAFo3D8imQTqnN2Dki2DEJUfg%2FaGg06Jmas6off00QwfC%2FSSnpJ%2FekZ9%2BrNCWjHGdjCLntu9BjqkARdyZIY%2FVIgi5pCqsmwVFLwYhw1ZX57CCoGK594C8AwwxZmHpC2epHpUcB4bVeQO%2BNZJ2b%2BJZTcxVJYYjWFnseDzFoSsUH98v3sOxOBbGzvpRVsorHORySpJknEzbSxvVK2MtCPJ%2FJqYN4hCNyG%2BbWvR%2F4GhJT%2FdDqIqdTjUFaNWZiuu%2FNuZaxnrLlOcOqGDxARjO19TJzcy%2FSZNs3PhlLPo56Ys&X-Amz-Signature=2b19fabb6c35c655b1058557e594bf521225450866356942db1ed60a36824d71&X-Amz-SignedHeaders=host&x-id=GetObject)",
        "children": [
          {
            "type": "image",
            "blockId": "17d2297f-7a72-8150-b85f-fcdd9c9aa1df",
            "parent": "![%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%BC%E3%83%B3%E3%82%B7%E3%83%A7%E3%83%83%E3%83%88_2024-11-20_9.33.48.png](https://prod-files-secure.s3.us-west-2.amazonaws.com/f9e367dd-1db7-428f-a2ed-c68a46952d5a/7fffd0be-723a-4dd7-b3ef-d73697ea9321/%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%BC%E3%83%B3%E3%82%B7%E3%83%A7%E3%83%83%E3%83%88_2024-11-20_9.33.48.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB4663XDY464J%2F20250220%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250220T065956Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEI%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDaqvIBCOQVXDVSDZU7lKazEAfwzLykV12WCVu9dAlSiQIgGGPtUZLLiAMwC2MGklLnbiAwFsfxWuBVqkNllG%2FD37MqiAQIuP%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARAAGgw2Mzc0MjMxODM4MDUiDGOwdpLdT%2Bmj4b8XQSrcA%2BLzd75xaLJuWtuk8YaJTSjA4er7Cha7uBkN5xOrebd7EOv61YyEqGWbyqTCmr64h9Bzd2ubhodqAZBuUlA0BVe6PlHR%2FhUyYxusM5SyetBbyRYSJBv0HBJWMtHA47jeO4G1Zy4uChlzPe65DuL%2FFksUksCmY5vy8a5FB5E%2F9ALeS%2Bqa4B0NFR2%2BJIonehimjy3nn1LQHbyPoRZjZfYbn4LL3U%2FK2gI26oit8ihl9XfKNROFyWwUl88WBebbosW9auY%2BThnzonC93gRFleU1rjOxDZ93z9JxYICvbCdvw99MqJd6LSoesAmvUmI%2BOR5%2BF01XPqB6bQwX7qFzo4uEv6yxqiZ8RfmOue9Tu3LJ5jIYKgGnhHZyiCR%2B8NYVGaMvc9MR7JUt7htNezXFqtRdHJ6GtZS4CmPUjI3QfTqMxMusr05F5LACrCfKmnhVAdKEO96NC6qVTlgEIj29SeCnGa2FuuH9iWqCBniWrSeQFn%2BIBWtFLot5U8cDFbjss0eXH6PSwl2hBEnOJ8qFmW57gg0UUDpNBZCiTpPOMJsavtEb7EYzSKMCw2mcC2Ebaqwgl4ffyNFvsLw9l5N4tU42ghYVBl3EfKFCZJy7BW7zJnY8tqAZshYbPwMWNQ%2BKMNSc270GOqUBjJ4Iw2Scg1vAWLHi5gtJwt%2FTWsVSwEG7VC%2BI6Tpn%2FCA1kadDr%2FHt2AhJIUVdfq6W1jyoEWkbr75UjTSqMAUGKDu3ayM%2BzvPZeIdQOPtW8XJICgx97Czwve0PAH%2B2efpWbStPY6CNqf%2BbTLKDOfp%2BKvEg41%2BvboC6wdatt%2BPWrhH07nHtvcTJHNjhIBv7l3eZ3srzcmwDI7xjzTmZawb64wHKQBrr&X-Amz-Signature=10a4972b8e2da88859079a01a00223c3f28122bb7f961ab7f18b692bb3586359&X-Amz-SignedHeaders=host&x-id=GetObject)",
            "children": []
          }
        ]
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8163-b1cf-efbedbacfe9f",
        "parent": "ここからは実際にコードで定義してみましょう。",
        "children": []
      },
      {
        "type": "callout",
        "blockId": "17d2297f-7a72-8191-98e8-c868ef0179bb",
        "parent": "> `Student`クラスを定義  \n> ```python  \n> class Student:  \n> \t　# コンストラクタ(インスタンスを作成する際に呼ばれる特別なメソッド)  \n>     def __init__(self, name, score):  \n> \t\t    # 属性  \n>         self.name = name  \n>         self.score = score  \n>       \n>     # displayメソッドを定義（生徒の名前と点数を表示する）  \n>     def display(self):  \n>         print(\"名前:\", self.name, \"\\n点数:\", self.score)  \n> ```",
        "children": [
          {
            "type": "code",
            "blockId": "17d2297f-7a72-8138-879d-edda868df80b",
            "parent": "```python\nclass Student:\n\t　# コンストラクタ(インスタンスを作成する際に呼ばれる特別なメソッド)\n    def __init__(self, name, score):\n\t\t    # 属性\n        self.name = name\n        self.score = score\n    \n    # displayメソッドを定義（生徒の名前と点数を表示する）\n    def display(self):\n        print(\"名前:\", self.name, \"\\n点数:\", self.score)\n```",
            "children": []
          }
        ]
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81b4-9bdc-c209a2d4292d",
        "parent": "**クラスを定義**:\nクラスを定義する時は、まず`class クラスの名前:`と書きます。`Student`クラスであれば、`class Student:`と書きます。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81de-917f-cb55d915d07a",
        "parent": "**コンストラクタ（****`__init__`****メソッド）**:\nクラスからインスタンスを作るときに初期化処理を行います。引数を渡して初期値を設定するのに使います。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8132-9d65-e364b7c47216",
        "parent": "`Student`クラスのコンストラクタは以下のように定義されています。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "17d2297f-7a72-8137-a313-e321e7d5044b",
        "parent": "```python\ndef __init__(self, name, score):\n\t\tself.name = name\n\t\tself.score = score\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-812f-a21a-c79a4154a753",
        "parent": "コンストラクタで属性が決められています。インスタンスの持つ属性は**`self.属性`**と書きます。`Student`クラスには、生徒の名前を保持するための`self.name`と、生徒の点数を保持するための`self.score`があります。コンストラクは引数として、`self`、`name`、`score`を受け取っています。中の処理としては、`self`（現在のインスタンス）の属性に、それぞれ`name`と`score` を代入しています。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81ec-8481-e446bb8891d4",
        "parent": "**メソッド**:\nクラス内で定義された関数で、インスタンスの動作を定義します。`Student`クラスには、生徒の名前`name`と点数`score`を表示する`display`メソッドがあります。",
        "children": []
      },
      {
        "type": "heading_2",
        "blockId": "17d2297f-7a72-8132-b021-db2155c8853c",
        "parent": "## インスタンスを作る",
        "children": []
      },
      {
        "type": "divider",
        "blockId": "17d2297f-7a72-81e4-b777-ee0ff841afe0",
        "parent": "---",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81a0-a048-e98194b845ae",
        "parent": "　それでは、`Student`クラスから実際のデータであるインスタンスを作成するコードを見ていきましょう。",
        "children": []
      },
      {
        "type": "callout",
        "blockId": "17d2297f-7a72-818d-99da-c8ec97864ad0",
        "parent": "> Studentクラスからインスタンスを作る  \n> ```python  \n> # インスタンスを作る（ここでコンストラクタが呼び出される  \n> student1 = Student(name=\"hashimoto\",score=56)  \n> ```",
        "children": [
          {
            "type": "code",
            "blockId": "17d2297f-7a72-81e0-84d8-ec675b89ddbb",
            "parent": "```python\n# インスタンスを作る（ここでコンストラクタが呼び出される\nstudent1 = Student(name=\"hashimoto\",score=56)\n```",
            "children": []
          }
        ]
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8196-9533-cc4c98f56de3",
        "parent": "　インスタンスを作成するには、`変数=クラス名()` と書きます。この変数がインスタンスとなります。`student1 = Student()` と書くと、`sudent1`が`Student`クラスのインスタンスとなります。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8178-a223-f1765b7a5805",
        "parent": "インスタンスを作成するときは、クラスで定義されたコンストラクタが呼び出されます。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8150-86ee-e2fe55c46e38",
        "parent": "`Student`クラスのコンストラクタの引数は、`self`、`name`、`score`でした。selfは、現在のインスタンスのことを指します。ここでいう現在のインスタンスとは、新たに作られるインスタンスのことなので、コンストラクタの引数`self`は、インスタンスを作成する際には、あまり気にしなくていいです。引数の`name`と`score`は、新たなインスタンスである`student1`の、属性`name`と属性`score`に代入されます。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8107-b37e-db10c3ff41b2",
        "parent": "したがって、`student1`の持つ属性は、`self.name = hashimoto`、`self.score = 56`となります。",
        "children": []
      },
      {
        "type": "image",
        "blockId": "17d2297f-7a72-8109-821a-f1c6acaaffff",
        "parent": "![%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%BC%E3%83%B3%E3%82%B7%E3%83%A7%E3%83%83%E3%83%88_2024-11-20_11.47.05.png](https://prod-files-secure.s3.us-west-2.amazonaws.com/f9e367dd-1db7-428f-a2ed-c68a46952d5a/23a3d7ba-9d6b-4353-9f96-0d48a7a0212a/%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%BC%E3%83%B3%E3%82%B7%E3%83%A7%E3%83%83%E3%83%88_2024-11-20_11.47.05.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB4662XO2NDOH%2F20250220%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250220T065956Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEI%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDxSxmhUAj9aqev%2BivWjVyfNsUbG29ikxGJQmqZDKZJSAIhAOitOHBbrmKJ5N%2Fwyv2mogCx59Z%2BBBzBmseoUsi5lWv8KogECLj%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQABoMNjM3NDIzMTgzODA1IgwyYO3vYs6O%2Fgq3JuEq3AP1JBiMgeBCK2DpzVnXhmo7thvm7FaDqcXbTpsUPy7rJiQ6zll43bhlYHAFtDqAbZAjp8OFOY5%2BVLnACb3bdkjYFKsaiWDu7UTiZII8Dgyso3mMblcjekmOyCqrxnXh8XEoewfTAXHTzOq%2BViAwCOW9bEwZywM%2FLBxbnhi%2BqDQ0eZY3Itl2GuNueAeno3THW%2BH46xdSoM7OtVZEyEw%2FTrGlfLFs3YkcnWKFoZhbojVZbUrx6QVzhwnChiQxIFztrCt8DKN03ALM0o%2FDH4kMGzIwemXDoLAlKDiZjXywMRR9oPnMCfbysHPVs7u%2Fx98d7VR7hoHACwQuA3yYofDne3mL9WBC8g7cLWtZuCVXJf7Od%2FiNcd8lW%2BOrm5XavPm7C6w3PHBtdhgNgldttwLOqgKU9rqgLVqvH7Ea1GE0eDHYs%2BaIra68gFr3eZ%2FH8o5K%2FzpI22UYETxcoV5zfnbmpWek14IhCnl9Nr21vNi9YuZEsNWO54%2FfMoa0rlMRKLJbj0c1V7KU2LJLhJkeaDfDr2SXPMOGwD2j65tz%2Fwje%2Bf7cZISD%2B8qgAQac7gGax%2Bq1KLA5hWKUo2RSMPTBhrgOcFexnk9figHFfaqscjmTl7hWnESUpGhi1zWpiP6aBTCHntu9BjqkAYtYG7JJ9ZF9hfq9WNO1FvzBOEzNfE9rX0IJmtQWfjQbuFtLtGPVfsvnhH9E49MXXe0JRwIUe7sxvyzKQgAvQOxw18Lcv%2FHoNBaO6WkROGWz5eNWCIeiggz9YrJYQ3V06C8ZzgNC27JrQR6fAhaJdzn%2FDEfGhOllT1DhdNRl9udQM1sKhFvVsdqbhPqf2E36Cxobaf3Oky7Hlir3%2BHWwe5APw84M&X-Amz-Signature=0282a1c72b930c9ba722104323d3092882131e6c8194e6117635c9f94a7dd4f2&X-Amz-SignedHeaders=host&x-id=GetObject)",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81c6-8514-de7a33dd8239",
        "parent": "`student1`は、これが一つにまとまったデータとなります。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81ff-9e5a-cd988c042a2e",
        "parent": "このように、クラスから作ったインスタンスは、複数のデータを一つにまとめることができます。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8132-80b3-c6e4aa456538",
        "parent": "複数のデータに関連性を持たせたいときに特に便利です。",
        "children": []
      },
      {
        "type": "heading_2",
        "blockId": "17d2297f-7a72-8115-80fd-ffe845fe17ba",
        "parent": "## メソッドを使う",
        "children": []
      },
      {
        "type": "divider",
        "blockId": "17d2297f-7a72-8111-80d5-fa2d7e07c274",
        "parent": "---",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81f5-a866-dc9bee6a6040",
        "parent": "最後に、メソッドの使い方について見ていきましょう。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81b3-9af4-d6055bc16042",
        "parent": "`Student`クラスには、`display`メソッドが定義されていました。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81bf-a22a-cda776a17167",
        "parent": "試しに、`Student`クラスのインスタンスである`student1`に`dsiplay`メソッドを使ってみましょう。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-8146-b995-eb5989ae5d28",
        "parent": "メソッドを使うには、`インスタンス名.メソッド()` と書きます。",
        "children": []
      },
      {
        "type": "callout",
        "blockId": "17d2297f-7a72-813a-a1bb-e34d3f64a2c6",
        "parent": "> displayメソッドを使う  \n> ```python  \n> student1.display()  \n> ```",
        "children": [
          {
            "type": "code",
            "blockId": "17d2297f-7a72-8106-91d7-f1a14e285ef3",
            "parent": "```python\nstudent1.display()\n```",
            "children": []
          }
        ]
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81fb-b9af-fe25e8b2032f",
        "parent": "これを実行すると以下のように出力されます。",
        "children": []
      },
      {
        "type": "callout",
        "blockId": "17d2297f-7a72-81e9-a7ec-f6708294c31b",
        "parent": "> 出力結果  \n> ```bash  \n> 名前:hashimoto　  \n> 点数:56　　　　　　　　　　　　　　　　　　  \n> ```",
        "children": [
          {
            "type": "code",
            "blockId": "17d2297f-7a72-819e-b000-e0e2e9eb689d",
            "parent": "```bash\n名前:hashimoto　\n点数:56　　　　　　　　　　　　　　　　　　\n```",
            "children": []
          }
        ]
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-810b-bcdb-c60d1371d2e1",
        "parent": "なぜこのように出力されるのかを見ていきましょう。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81e9-8f3f-f9c00a772e21",
        "parent": "`display`メソッドは、以下のように定義されています。",
        "children": []
      },
      {
        "type": "code",
        "blockId": "17d2297f-7a72-819c-bcd4-ea2b709fbe08",
        "parent": "```python\ndef display(self):\n\t\tprint(\"名前:\", self.name, \"\\n点数:\", self.score)\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81fd-ac15-ca75087875fb",
        "parent": "繰り返しになりますが、`self`は、現在のインスタンスを指します。つまり、ここでは、`self`が`student1`のことを指すわけです。そして、`self.name`と`self.score`をprint関数で出力するようになっています。つまり、`display`メソッドを`student1`に対して使うと、`studen1`の`name`属性と`student1`の`score`属性を出力するわけです。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "17d2297f-7a72-81d3-8afa-fc029cdbdbf9",
        "parent": "",
        "children": []
      }
    ]
  },
  {
    "type": "child_page",
    "blockId": "17d2297f-7a72-80bf-b6e2-c33e75086922",
    "parent": "## 練習問題6",
    "children": [
      {
        "type": "heading_1",
        "blockId": "82230dc1-7558-49b2-87f4-bc4ffe2c53f9",
        "parent": "# 問題1",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "24615cbb-1d14-42ca-9c1e-029b418d244d",
        "parent": "プログラミング部の部員情報を管理する以下のようなクラス`ClubMember`を作ってください。",
        "children": []
      },
      {
        "type": "quote",
        "blockId": "0c233c7c-8522-4f9a-ab94-addeeb27bb73",
        "parent": "> この`ClubMember`クラスは以下のメンバー変数を持っています。",
        "children": [
          {
            "type": "bulleted_list_item",
            "blockId": "45e9a97a-5638-478a-ba61-d5d75f4be841",
            "parent": "- `name` : 部員の名前を格納",
            "children": []
          },
          {
            "type": "bulleted_list_item",
            "blockId": "aafb032e-87bb-4bd3-b5f8-c36026be340c",
            "parent": "- `no` : 部員の学生番号を格納",
            "children": []
          },
          {
            "type": "bulleted_list_item",
            "blockId": "dde00c44-4792-41a7-ac81-b6aa1cebbb27",
            "parent": "- `languages` : その部員が扱うことができるプログラミング言語をリストで格納（使える言語がない場合は空のリスト（`[]`））",
            "children": []
          },
          {
            "type": "paragraph",
            "blockId": "0c99b9e4-0ecd-433e-ab20-7d0f54bc0604",
            "parent": "また、`ClubMember`クラスは以下のようなコンストラクタを持っています。",
            "children": []
          },
          {
            "type": "bulleted_list_item",
            "blockId": "de0209d0-2c89-4440-8055-ad367a6f5b2d",
            "parent": "- 名前、学生番号、プログラミング言語を引数として受け取り、それぞれをメンバー変数に格納する",
            "children": []
          },
          {
            "type": "bulleted_list_item",
            "blockId": "85a873ba-5a1a-4d0d-822d-0b407e866f29",
            "parent": "- 「ようこそ、〇〇(名前)さん！」という文を出力する",
            "children": []
          },
          {
            "type": "bulleted_list_item",
            "blockId": "03c6e903-e228-480e-a507-d6ce85eb6686",
            "parent": "- プログラミング言語は引数が指定されていなくても動作する",
            "children": []
          }
        ]
      },
      {
        "type": "paragraph",
        "blockId": "732d8547-9884-475b-86ce-8fc86363f679",
        "parent": "また、`ClubMember`を自由な名前、学生番号、言語で3人分インスタンス化してみてください。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "fb3792c8-e025-4697-a9b3-f34978b7870a",
        "parent": "※プログラムは「prac6-1.py」として保存",
        "children": []
      },
      {
        "type": "heading_3",
        "blockId": "3378cd4a-4108-4cec-87f5-06caecda3217",
        "parent": "### 期待する出力結果",
        "children": []
      },
      {
        "type": "code",
        "blockId": "d20e4e43-6b91-4fd2-b1fd-14e06d7f8b5e",
        "parent": "```text\nようこそ、 田中太郎 さん！\nようこそ、 佐藤圭祐 さん！\nようこそ、 須賀雅彦 さん！\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "04967d34-2a6a-486e-9b01-70efec7a6d84",
        "parent": "",
        "children": []
      },
      {
        "type": "divider",
        "blockId": "ed93e748-491b-4d34-9cff-2ce6c60a1195",
        "parent": "---",
        "children": []
      },
      {
        "type": "heading_1",
        "blockId": "d04393d3-b030-46e5-a757-1387084fccad",
        "parent": "# 問題2",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "01766f76-eb71-4dcd-841c-ed73c03c0ee4",
        "parent": "前問のクラス`ClubMember`に、その部員の情報すべてを表示するメソッド`displayData`を追加してください。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "a0f11f5a-74c2-49ba-a9c5-02188c42adef",
        "parent": "また、`ClubMember`を自由な名前、学生番号、言語で3人分インスタンス化し、その全てにdisplayDataメソッドを実行してみてください。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "05115ce7-4a06-4624-8362-a985a1e51415",
        "parent": "※プログラムは「prac6-2.py」として保存",
        "children": []
      },
      {
        "type": "heading_3",
        "blockId": "8b557420-96b0-41f4-b343-2e7cc6dbe3cb",
        "parent": "### 期待する出力結果",
        "children": []
      },
      {
        "type": "code",
        "blockId": "21f61b28-abcc-4d8b-a3f8-35255a3a885b",
        "parent": "```text\nようこそ、 田中太郎 さん！\nようこそ、 佐藤圭祐 さん！\nようこそ、 須賀雅彦 さん！\n名前: 田中太郎\n学生番号: 1234\n使える言語: ['Python', 'C言語', 'FORTRAN', 'Assembly']\n名前: 佐藤圭祐\n学生番号: 5678\n使える言語: []\n名前: 須賀雅彦\n学生番号: 90\n使える言語: []\n```",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "99ba72f3-80e1-40f0-843f-bfda0be90ebe",
        "parent": "",
        "children": []
      },
      {
        "type": "divider",
        "blockId": "1deffa6d-1020-4731-9613-f54031001135",
        "parent": "---",
        "children": []
      },
      {
        "type": "heading_1",
        "blockId": "28a97801-b118-4e7b-b8d4-25dce789d604",
        "parent": "# 問題3",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "5e20e765-52d1-4064-9072-2375cdbc2969",
        "parent": "前問のクラス`ClubMember`に、言語名を引数として受け取り、使える言語に追加する`addLanguages`メソッドを追加してください。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "c2f14cc8-a097-40c1-babc-e414ea7e4330",
        "parent": "また、`ClubMember`を自由な名前、学生番号、言語でインスタンス化し、`displayData`を実行したあと`addLanguages`を実行していくつか言語を追加してください。再度`displayData`を実行し、使える言語が増えていることを確認してください。",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "57bd28bd-884f-4db3-bc8a-8c88240832c4",
        "parent": "※プログラムは「prac6-3.py」として保存",
        "children": []
      },
      {
        "type": "heading_3",
        "blockId": "d458eda9-6e2b-43da-ad07-4dc3329831cc",
        "parent": "### 期待する出力結果",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "c1ef5dd1-e349-4625-a377-8b3122ecc876",
        "parent": "",
        "children": []
      },
      {
        "type": "code",
        "blockId": "6925e12f-e9d8-46e2-a6c3-e97cb76f19a4",
        "parent": "```text\nようこそ、 渡辺昂輝 さん！\n名前: 渡辺昂輝\n学生番号: 1964\n使える言語: ['Python', 'Rust', 'Ruby', 'JavaScript']\naddLanguageを実行\naddLanguageを実行\n名前: 渡辺昂輝\n学生番号: 1964\n使える言語: ['Python', 'Rust', 'Ruby', 'JavaScript', 'Go', 'Java']\n```",
        "children": []
      },
      {
        "type": "heading_1",
        "blockId": "258b0d66-ad6a-4b9e-aefc-439ee091967b",
        "parent": "# 進捗アンケート",
        "children": []
      },
      {
        "type": "divider",
        "blockId": "3fee6d11-8e2e-46e5-9646-3ce0def0149a",
        "parent": "---",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "08d8eb47-aeb1-418b-a1c8-df366e51b1ac",
        "parent": "練習問題６が終了した人は、以下のGoogleフォームに回答してください。",
        "children": []
      },
      {
        "type": "synced_block",
        "blockId": "3273b73b-3b83-40e0-b53a-c309e77c4fbe",
        "parent": "",
        "children": []
      },
      {
        "type": "quote",
        "blockId": "7278e898-cdda-49db-8e9b-26a0f8cf3435",
        "parent": "> ",
        "children": [
          {
            "type": "bookmark",
            "blockId": "0a79e4aa-dfa5-4aa7-ae42-5b5cb8075d6b",
            "parent": "[bookmark](https://forms.gle/gbqDyaqNtWRfoSEGA)",
            "children": []
          },
          {
            "type": "paragraph",
            "blockId": "ea1f635b-d186-4f94-b215-df8349c02d16",
            "parent": "",
            "children": []
          }
        ]
      },
      {
        "type": "paragraph",
        "blockId": "e2b8852f-07e0-434e-9122-77db401cff67",
        "parent": "",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "87a254f0-d9a8-48cf-ad08-d6ee09c0f708",
        "parent": "",
        "children": []
      },
      {
        "type": "paragraph",
        "blockId": "4d04a615-8901-44ae-a504-a5365b9bb50b",
        "parent": "",
        "children": []
      }
    ]
  }
]